<?xml version="1.0" encoding="UTF-8" ?>
<testsuite failures="0" time="10.157" errors="5" skipped="0" tests="5" name="com.bigroad.dao.impl.FileDaoImplTest">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.7.0\jre\bin"/>
    <property name="java.vm.version" value="21.0-b17"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) Client VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="CN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="Service Pack 1"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="F:\eclipse_yjs_all\20150515\cloudfiles"/>
    <property name="java.runtime.version" value="1.7.0-b147"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.7.0\jre\lib\endorsed"/>
    <property name="os.arch" value="x86"/>
    <property name="java.io.tmpdir" value="C:\Users\LIUHON~1\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 7"/>
    <property name="classworlds.conf" value="F:\eclipse_yjs_all\20150515\.metadata\.plugins\org.eclipse.m2e.launching\launches\m2conf1715862525718225550.tmp"/>
    <property name="sun.jnu.encoding" value="GBK"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.7.0\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0/bin/../jre/lib/i386;C:\Program Files\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.7.0\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Common Files\Thunder Network\KanKan\Codecs;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;D:\20129162336\ration rose\rr2\common;c:\Program Files\Common Files\Ulead Systems\MPEG;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;D:\20129162336\TortoiseSVN\bin;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\runtime\win32;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\bin;C:\Program Files\Cracklock\Bin;D:\20129162336\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;."/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="51.0"/>
    <property name="sun.management.compiler" value="HotSpot Client Compiler"/>
    <property name="os.version" value="6.1"/>
    <property name="user.home" value="C:\Users\liuhonghua"/>
    <property name="user.timezone" value="Asia/Shanghai"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.7"/>
    <property name="file.encoding" value="GBK"/>
    <property name="user.name" value="liuhonghua"/>
    <property name="java.class.path" value="/D:/20129162336/eclipse-jee-luna-SR2-win32-x86_64/eclipse/plugins/org.eclipse.m2e.maven.runtime_1.5.1.20150109-1819/jars/plexus-classworlds-2.5.1.jar"/>
    <property name="org.slf4j.simpleLogger.defaultLogLevel" value="info"/>
    <property name="java.vm.specification.version" value="1.7"/>
    <property name="sun.arch.data.model" value="32"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.7.0\jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="zh"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="1.7.0"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.7.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.7.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0\jre\classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="F:\eclipse_yjs_all\20150515\cloudfiles\EMBEDDED"/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86"/>
  </properties>
  <testcase time="6.216" classname="com.bigroad.dao.impl.FileDaoImplTest" name="testGetRootFolderID">
    <error message="No Session found for current thread" type="org.hibernate.HibernateException">org.hibernate.HibernateException: No Session found for current thread
	at org.springframework.orm.hibernate4.SpringSessionContext.currentSession(SpringSessionContext.java:97)
	at org.hibernate.internal.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:941)
	at com.bigroad.dao.impl.BaseDaoImpl.getCurrentSession(BaseDaoImpl.java:28)
	at com.bigroad.dao.impl.BaseDaoImpl.find(BaseDaoImpl.java:89)
	at com.bigroad.dao.impl.FileDaoImpl.getRootFolderID(FileDaoImpl.java:36)
	at com.bigroad.dao.impl.FileDaoImplTest.testGetRootFolderID(FileDaoImplTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (AbstractApplicationContext.java:500) Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@270664: startup date [Fri May 15 10:49:38 CST 2015]; root of context hierarchy
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:140) Loading schema mappings from [META-INF/spring.schemas]
DEBUG (PluggableSchemaResolver.java:146) Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (DefaultNamespaceHandlerResolver.java:156) Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\control] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\enterprise] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\information] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\letter] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\transaction] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/*/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\FileDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\UserDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl\TokenServiceImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\BaseDAOI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\DepartmentDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\FileDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\DepartmentDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\SentShareDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TokenTimerUpDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\SentShareDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\TAuthorizationDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\UserDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\CloudFileCon.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\Test.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileShareI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\TokenServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\UserServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\Command.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\FreshToken.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\JinTask.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MD5Check.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\PageResults.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\RowMapper.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\TokenProcessor.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\UserToken.class]]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class]
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 16 bean definitions from location pattern [spring.xml]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring-hibernate.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-2.5.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;dataSource&apos; as bean name and [] as aliases
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;transactionManager&apos; as bean name and [] as aliases
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 7 bean definitions from location pattern [spring-hibernate.xml]
DEBUG (AbstractApplicationContext.java:530) Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@270664: org.springframework.beans.factory.support.DefaultListableBeanFactory@1159092: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0]; root of factory hierarchy
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (MutablePropertySources.java:104) Adding [environmentProperties] PropertySource with lowest search precedence
 INFO (PropertiesLoaderSupport.java:177) Loading properties file from class path resource [config.properties]
DEBUG (MutablePropertySources.java:104) Adding [localProperties] PropertySource with lowest search precedence
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_url&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_url&apos; in [localProperties] with type [String] and value &apos;jdbc:mysql://172.31.34.115:3306/CloudFiles??useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_username&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_username&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_password&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_password&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;validationQuery&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;validationQuery&apos; in [localProperties] with type [String] and value &apos;SELECT 1&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.format_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.format_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.show_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.show_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.dialect&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.dialect&apos; in [localProperties] with type [String] and value &apos;org.hibernate.dialect.MySQLDialect&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.hbm2ddl.auto&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties] with type [String] and value &apos;update&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractApplicationContext.java:799) Unable to locate MessageSource with name &apos;messageSource&apos;: using default [org.springframework.context.support.DelegatingMessageSource@782ae0]
DEBUG (AbstractApplicationContext.java:823) Unable to locate ApplicationEventMulticaster with name &apos;applicationEventMulticaster&apos;: using default [org.springframework.context.event.SimpleApplicationEventMulticaster@b725a7]
 INFO (DefaultListableBeanFactory.java:581) Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1159092: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;baseDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.BaseDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;baseDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;baseDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;sessionFactory&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;dataSource&apos; to allow for resolving potential circular references
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
ERROR (DruidAbstractDataSource.java:935) maxIdle is deprecated
DEBUG (AbstractAutowireCapableBeanFactory.java:1555) Invoking init method  &apos;init&apos; on bean with name &apos;dataSource&apos;
 INFO (DruidDataSource.java:669) {dataSource-1} inited
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;sessionFactory&apos;
DEBUG (Configuration.java:176) Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration numeric_boolean -&gt; org.hibernate.type.NumericBooleanType@fecba2
DEBUG (BasicTypeRegistry.java:143) Adding type registration true_false -&gt; org.hibernate.type.TrueFalseType@801853
DEBUG (BasicTypeRegistry.java:143) Adding type registration yes_no -&gt; org.hibernate.type.YesNoType@f73e09
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration char -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration int -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_decimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigDecimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_integer -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigInteger -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration string -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.String -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration url -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.net.URL -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Date -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration dbtimestamp -&gt; org.hibernate.type.DbTimestampType@242102
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.GregorianCalendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar_date -&gt; org.hibernate.type.CalendarDateType@1efedd5
DEBUG (BasicTypeRegistry.java:143) Adding type registration locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration timezone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.TimeZone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-binary -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.UUID -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-char -&gt; org.hibernate.type.UUIDCharType@168bc8d
DEBUG (BasicTypeRegistry.java:143) Adding type registration pg-uuid -&gt; org.hibernate.type.PostgresUUIDType@12e827b
DEBUG (BasicTypeRegistry.java:143) Adding type registration binary -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte[] -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration [B -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-binary -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration Byte[] -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Byte; -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration image -&gt; org.hibernate.type.ImageType@1c5acda
DEBUG (BasicTypeRegistry.java:143) Adding type registration characters -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration char[] -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration [C -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-characters -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Character; -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration Character[] -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration text -&gt; org.hibernate.type.TextType@ac86bb
DEBUG (BasicTypeRegistry.java:143) Adding type registration blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_blob -&gt; org.hibernate.type.MaterializedBlobType@7780c2
DEBUG (BasicTypeRegistry.java:143) Adding type registration clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_clob -&gt; org.hibernate.type.MaterializedClobType@13a2cd7
DEBUG (BasicTypeRegistry.java:143) Adding type registration serializable -&gt; org.hibernate.type.SerializableType@33ee9b
DEBUG (BasicTypeRegistry.java:143) Adding type registration object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_date -&gt; org.hibernate.type.AdaptedImmutableType@148f4a2
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_time -&gt; org.hibernate.type.AdaptedImmutableType@b4e680
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_timestamp -&gt; org.hibernate.type.AdaptedImmutableType@88e718
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_dbtimestamp -&gt; org.hibernate.type.AdaptedImmutableType@1fbea5e
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar -&gt; org.hibernate.type.AdaptedImmutableType@1d7e744
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar_date -&gt; org.hibernate.type.AdaptedImmutableType@1903f07
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_binary -&gt; org.hibernate.type.AdaptedImmutableType@119eb85
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_serializable -&gt; org.hibernate.type.AdaptedImmutableType@b5a6e0
 INFO (Version.java:37) HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
 INFO (Version.java:41) HHH000412: Hibernate Core {4.1.7.Final}
 INFO (Environment.java:239) HHH000206: hibernate.properties not found
 INFO (Environment.java:342) HHH000021: Bytecode provider name : javassist
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid2] -&gt; [org.hibernate.id.UUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [guid] -&gt; [org.hibernate.id.GUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid.hex] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [hilo] -&gt; [org.hibernate.id.TableHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [assigned] -&gt; [org.hibernate.id.Assigned]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [identity] -&gt; [org.hibernate.id.IdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [select] -&gt; [org.hibernate.id.SelectGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence] -&gt; [org.hibernate.id.SequenceGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [seqhilo] -&gt; [org.hibernate.id.SequenceHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [increment] -&gt; [org.hibernate.id.IncrementGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [foreign] -&gt; [org.hibernate.id.ForeignGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence-identity] -&gt; [org.hibernate.id.SequenceIdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-sequence] -&gt; [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-table] -&gt; [org.hibernate.id.enhanced.TableGenerator]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/model/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class]]
DEBUG (IntegratorServiceImpl.java:59) Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG (Configuration.java:1735) Preparing to build session factory with filters : {}
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TAuthorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TAuthorization
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TAuthorization on table T_authorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=userId, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=token, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property token with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for token
DEBUG (PropertyBinder.java:259) Building property token
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=updateDate, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property updateDate with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for updateDate
DEBUG (PropertyBinder.java:259) Building property updateDate
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TCompany
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TCompany
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TCompany on table T_company
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyId
DEBUG (PropertyBinder.java:259) Building property companyId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyAddress
DEBUG (PropertyBinder.java:259) Building property companyAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyName
DEBUG (PropertyBinder.java:259) Building property companyName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyPassword
DEBUG (PropertyBinder.java:259) Building property companyPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companySpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companySpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companySpaceSize
DEBUG (PropertyBinder.java:259) Building property companySpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyUsedSpace
DEBUG (PropertyBinder.java:259) Building property companyUsedSpace
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkMan, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkMan with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkMan
DEBUG (PropertyBinder.java:259) Building property linkMan
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkManTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkManTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkManTelephone
DEBUG (PropertyBinder.java:259) Building property linkManTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=logoAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property logoAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for logoAddress
DEBUG (PropertyBinder.java:259) Building property logoAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=organizationCode, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property organizationCode with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for organizationCode
DEBUG (PropertyBinder.java:259) Building property organizationCode
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartment
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartment on table T_department
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentId
DEBUG (PropertyBinder.java:259) Building property departmentId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TUsers_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TUsers
DEBUG (PropertyBinder.java:259) Building property TUsers
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentDescription, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentDescription with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentDescription
DEBUG (PropertyBinder.java:259) Building property departmentDescription
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentName
DEBUG (PropertyBinder.java:259) Building property departmentName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentSpaceSize
DEBUG (PropertyBinder.java:259) Building property departmentSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentUsedSpace
DEBUG (PropertyBinder.java:259) Building property departmentUsedSpace
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartmentOperation
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartmentOperation on table T_departmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationId
DEBUG (PropertyBinder.java:259) Building property departmentOperationId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationAuthorityID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationAuthorityId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationAuthorityId
DEBUG (PropertyBinder.java:259) Building property departmentOperationAuthorityId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDraft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDraft
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDraft on table T_draft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftId
DEBUG (PropertyBinder.java:259) Building property draftId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;draftPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftNewTime
DEBUG (PropertyBinder.java:259) Building property draftNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftTransactionID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftTransactionId
DEBUG (PropertyBinder.java:259) Building property draftTransactionId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TFile
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TFile on table T_file
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileDepartmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;folderID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileUserID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileAttribute, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileAttribute with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileAttribute
DEBUG (PropertyBinder.java:259) Building property fileAttribute
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileExtension, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileExtension with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileExtension
DEBUG (PropertyBinder.java:259) Building property fileExtension
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileMD5, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileMd5 with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileMd5
DEBUG (PropertyBinder.java:259) Building property fileMd5
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileName
DEBUG (PropertyBinder.java:259) Building property fileName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileNewTime
DEBUG (PropertyBinder.java:259) Building property fileNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePath
DEBUG (PropertyBinder.java:259) Building property filePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePrimaryPath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePrimaryPath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePrimaryPath
DEBUG (PropertyBinder.java:259) Building property filePrimaryPath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileSize
DEBUG (PropertyBinder.java:259) Building property fileSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileStoragePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileStoragePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileStoragePath
DEBUG (PropertyBinder.java:259) Building property fileStoragePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileType, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileType with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileType
DEBUG (PropertyBinder.java:259) Building property fileType
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TPrivateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TPrivateMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TPrivateMessage on table T_privateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageId
DEBUG (PropertyBinder.java:259) Building property privateMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receivePersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserByReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserBySentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentContent
DEBUG (PropertyBinder.java:259) Building property privateMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentTime
DEBUG (PropertyBinder.java:259) Building property privateMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentShare on table T_sentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareId
DEBUG (PropertyBinder.java:259) Building property sentShareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;shareID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareReceiveID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=isChecked, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isChecked with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isChecked
DEBUG (PropertyBinder.java:259) Building property isChecked
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareUserName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareUserName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareUserName
DEBUG (PropertyBinder.java:259) Building property sentShareUserName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentTransaction on table T_sentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionId
DEBUG (PropertyBinder.java:259) Building property sentTransactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receiveTransactionPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserByReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentTransactioncolPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserBySentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionTime
DEBUG (PropertyBinder.java:259) Building property sentTransactionTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=transactionState, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionState with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionState
DEBUG (PropertyBinder.java:259) Building property transactionState
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TShare on table T_share
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareId
DEBUG (PropertyBinder.java:259) Building property shareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TShare.TSentShares
DEBUG (PropertyBinder.java:259) Building property TSentShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=fileID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=filetype, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filetype with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filetype
DEBUG (PropertyBinder.java:259) Building property filetype
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=folderID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property folderId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for folderId
DEBUG (PropertyBinder.java:259) Building property folderId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=isSecretShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isSecretShare with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isSecretShare
DEBUG (PropertyBinder.java:259) Building property isSecretShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareAddress
DEBUG (PropertyBinder.java:259) Building property shareAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sharePassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sharePassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sharePassword
DEBUG (PropertyBinder.java:259) Building property sharePassword
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransaction on table T_transaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionId
DEBUG (PropertyBinder.java:259) Building property transactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactions_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (PropertyBinder.java:259) Building property TSentTransactions
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionAttachmentAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionAttachmentAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionAttachmentAddress
DEBUG (PropertyBinder.java:259) Building property transactionAttachmentAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionContent
DEBUG (PropertyBinder.java:259) Building property transactionContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionName
DEBUG (PropertyBinder.java:259) Building property transactionName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransactionMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransactionMessage on table T_transactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageId
DEBUG (PropertyBinder.java:259) Building property transactionMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;userID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentContent
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentTime
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TUser
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TUser on table T_user
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDrafts_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TDrafts
DEBUG (PropertyBinder.java:259) Building property TDrafts
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForReceivePersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareReceiveId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForReceiveTransactionPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForSentTransactioncolPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForSentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TShares
DEBUG (PropertyBinder.java:259) Building property TShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userAuthority, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userAuthority with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userAuthority
DEBUG (PropertyBinder.java:259) Building property userAuthority
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userHeadportrait, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userHeadportrait with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userHeadportrait
DEBUG (PropertyBinder.java:259) Building property userHeadportrait
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userMailbox, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userMailbox with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userMailbox
DEBUG (PropertyBinder.java:259) Building property userMailbox
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userName
DEBUG (PropertyBinder.java:259) Building property userName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userPassword
DEBUG (PropertyBinder.java:259) Building property userPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSex, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSex with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSex
DEBUG (PropertyBinder.java:259) Building property userSex
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSkin, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSkin with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSkin
DEBUG (PropertyBinder.java:259) Building property userSkin
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSpaceSize
DEBUG (PropertyBinder.java:259) Building property userSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userTelephone
DEBUG (PropertyBinder.java:259) Building property userTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userUsedSpace
DEBUG (PropertyBinder.java:259) Building property userUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for token
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for updateDate
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companySpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkMan
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkManTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for logoAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for organizationCode
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentDescription
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationAuthorityId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileAttribute
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileExtension
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileMd5
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePrimaryPath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileStoragePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileType
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isChecked
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareUserName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionState
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filetype
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for folderId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isSecretShare
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sharePassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionAttachmentAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userAuthority
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userHeadportrait
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userMailbox
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSex
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSkin
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userUsedSpace
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileDepartmentID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TUsers through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TUsers -&gt; T_user
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TUser.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TUser
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: folderID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TShare.TSentShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TShare.TSentShares -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TShare
DEBUG (CollectionSecondPass.java:80) Mapped collection key: shareID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TSentTransactions through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TSentTransactions -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TDrafts through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TDrafts -&gt; T_draft
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDraft.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: draftPersonID, one-to-many: com.bigroad.model.db.TDraft
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileUserID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserByReceivePersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receivePersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserBySentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentPersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareReceiveId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareReceiveID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareSentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserByReceiveTransactionPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receiveTransactionPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserBySentTransactioncolPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentTransactioncolPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TShares -&gt; T_share
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TShare.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: userID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (JdbcServicesImpl.java:121) Database -&gt;
       name : MySQL
    version : 5.5.41-0ubuntu0.14.04.1
      major : 5
      minor : 5
DEBUG (JdbcServicesImpl.java:127) Driver -&gt;
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.34 ( Revision: jess.balint@oracle.com-20141014163213-wqbwpf1ok2kvo1om )
      major : 5
      minor : 1
DEBUG (JdbcServicesImpl.java:133) JDBC version : 4.0
 INFO (Dialect.java:125) HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG (SettingsFactory.java:102) Automatic flush during beforeCompletion(): disabled
DEBUG (SettingsFactory.java:108) Automatic session close at end of transaction: disabled
DEBUG (SettingsFactory.java:119) JDBC batch size: 15
DEBUG (SettingsFactory.java:125) JDBC batch updates for versioned data: disabled
DEBUG (SettingsFactory.java:135) Scrollable result sets: enabled
DEBUG (SettingsFactory.java:141) Wrap result sets: disabled
DEBUG (SettingsFactory.java:147) JDBC3 getGeneratedKeys(): enabled
DEBUG (SettingsFactory.java:159) multi-tenancy strategy : NONE
DEBUG (SettingsFactory.java:165) Connection release mode: auto
 INFO (TransactionFactoryInitiator.java:68) HHH000399: Using default transaction strategy (direct JDBC transactions)
DEBUG (SettingsFactory.java:201) Maximum outer join fetch depth: 2
DEBUG (SettingsFactory.java:207) Default batch fetch size: 1
DEBUG (SettingsFactory.java:213) Generate SQL with comments: disabled
DEBUG (SettingsFactory.java:219) Order SQL updates by primary key: disabled
DEBUG (SettingsFactory.java:225) Order SQL inserts for batching: disabled
DEBUG (SettingsFactory.java:450) Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
 INFO (ASTQueryTranslatorFactory.java:48) HHH000397: Using ASTQueryTranslatorFactory
DEBUG (SettingsFactory.java:235) Query language substitutions: {}
DEBUG (SettingsFactory.java:241) JPA-QL strict compliance: disabled
DEBUG (SettingsFactory.java:249) Second-level cache: enabled
DEBUG (SettingsFactory.java:255) Query cache: disabled
DEBUG (SettingsFactory.java:390) Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG (SettingsFactory.java:400) org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
DEBUG (SettingsFactory.java:270) Optimize cache for minimal puts: disabled
DEBUG (SettingsFactory.java:285) Structured second-level cache entries: disabled
DEBUG (SettingsFactory.java:294) Statistics: disabled
DEBUG (SettingsFactory.java:300) Deleted entity synthetic identifier rollback: disabled
DEBUG (SettingsFactory.java:324) Default entity-mode: pojo
DEBUG (SettingsFactory.java:330) Named query checking : enabled
DEBUG (SettingsFactory.java:336) Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG (SessionFactoryImpl.java:223) Building session factory
DEBUG (SessionFactoryImpl.java:275) Session factory constructed with filter configurations : {}
DEBUG (SessionFactoryImpl.java:276) Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin, java.vm.version=21.0-b17, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\eclipse_yjs_all\20150515\cloudfiles, java.runtime.version=1.7.0-b147, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=F:\eclipse_yjs_all\20150515\cloudfiles, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar, java.io.tmpdir=C:\Users\LIUHON~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=GBK, java.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0/bin/../jre/lib/i386;C:\Program Files\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.7.0\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Common Files\Thunder Network\KanKan\Codecs;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;D:\20129162336\ration rose\rr2\common;c:\Program Files\Common Files\Ulead Systems\MPEG;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;D:\20129162336\TortoiseSVN\bin;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\runtime\win32;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\bin;C:\Program Files\Cracklock\Bin;D:\20129162336\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;., hibernate.connection.datasource={
	CreateTime:&quot;2015-05-15 10:49:40&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:22978863, ConnectTime:&quot;2015-05-15 10:49:43&quot;, UseCount:1, LastActiveTime:&quot;2015-05-15 10:49:43&quot;}
	]
}, surefire.test.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\liuhonghua, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=GBK, hibernate.format_sql=true, user.name=liuhonghua, java.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@12940b3, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0\jre, sun.java.command=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire4193884015818501124tmp F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire_05322085908533930276tmp, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0, java.ext.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\liuhonghua\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
 WARN (UUIDHexGenerator.java:59) HHH000409: Using org.hibernate.id.UUIDHexGenerator which does not generate IETF RFC 4122 compliant UUID values; consider using org.hibernate.id.UUIDGenerator instead
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionID from CloudFiles.T_transaction where transactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionID, ttransacti_.transactionAttachmentAddress as transact2_10_, ttransacti_.transactionContent as transact3_10_, ttransacti_.transactionName as transact4_10_ from CloudFiles.T_transaction ttransacti_ where ttransacti_.transactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transaction (transactionAttachmentAddress, transactionContent, transactionName, transactionID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transaction set transactionAttachmentAddress=?, transactionContent=?, transactionName=? where transactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transaction where transactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TFile
DEBUG (AbstractEntityPersister.java:3491)  Version select: select fileID from CloudFiles.T_file where fileID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tfile_.fileID, tfile_.fileDepartmentID as fileDep12_5_, tfile_.folderID as folderID5_, tfile_.fileUserID as fileUserID5_, tfile_.fileAttribute as fileAttr2_5_, tfile_.fileExtension as fileExte3_5_, tfile_.fileMD5 as fileMD4_5_, tfile_.fileName as fileName5_, tfile_.fileNewTime as fileNewT6_5_, tfile_.filePath as filePath5_, tfile_.filePrimaryPath as filePrim8_5_, tfile_.fileSize as fileSize5_, tfile_.fileStoragePath as fileSto10_5_, tfile_.fileType as fileType5_ from CloudFiles.T_file tfile_ where tfile_.fileID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_file (fileDepartmentID, folderID, fileUserID, fileAttribute, fileExtension, fileMD5, fileName, fileNewTime, filePath, filePrimaryPath, fileSize, fileStoragePath, fileType, fileID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_file set fileDepartmentID=?, folderID=?, fileUserID=?, fileAttribute=?, fileExtension=?, fileMD5=?, fileName=?, fileNewTime=?, filePath=?, filePrimaryPath=?, fileSize=?, fileStoragePath=?, fileType=? where fileID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_file where fileID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDraft
DEBUG (AbstractEntityPersister.java:3491)  Version select: select draftID from CloudFiles.T_draft where draftID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdraft_.draftID, tdraft_.draftPersonID as draftPer4_4_, tdraft_.draftNewTime as draftNew2_4_, tdraft_.draftTransactionID as draftTra3_4_ from CloudFiles.T_draft tdraft_ where tdraft_.draftID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_draft (draftPersonID, draftNewTime, draftTransactionID, draftID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_draft set draftPersonID=?, draftNewTime=?, draftTransactionID=? where draftID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_draft where draftID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select shareID from CloudFiles.T_share where shareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tshare_.shareID, tshare_.sentShareSentPersonID as sentSha10_9_, tshare_.fileID as fileID9_, tshare_.filetype as filetype9_, tshare_.folderID as folderID9_, tshare_.isSecretShare as isSecret5_9_, tshare_.sentShareTime as sentShar6_9_, tshare_.shareAddress as shareAdd7_9_, tshare_.shareName as shareName9_, tshare_.sharePassword as sharePas9_9_ from CloudFiles.T_share tshare_ where tshare_.shareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_share (sentShareSentPersonID, fileID, filetype, folderID, isSecretShare, sentShareTime, shareAddress, shareName, sharePassword, shareID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_share set sentShareSentPersonID=?, fileID=?, filetype=?, folderID=?, isSecretShare=?, sentShareTime=?, shareAddress=?, shareName=?, sharePassword=? where shareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_share where shareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TAuthorization
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userId from CloudFiles.T_authorization where userId =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tauthoriza_.userId, tauthoriza_.token as token0_, tauthoriza_.updateDate as updateDate0_ from CloudFiles.T_authorization tauthoriza_ where tauthoriza_.userId=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_authorization (token, updateDate, userId) values (?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_authorization set token=?, updateDate=? where userId=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_authorization where userId=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartmentOperation
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentOperationID from CloudFiles.T_departmentOperation where departmentOperationID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentOperationID, tdepartmen_.departmentID as departme3_3_, tdepartmen_.fileID as fileID3_, tdepartmen_.departmentOperationAuthorityID as departme2_3_ from CloudFiles.T_departmentOperation tdepartmen_ where tdepartmen_.departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_departmentOperation (departmentID, fileID, departmentOperationAuthorityID, departmentOperationID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_departmentOperation set departmentID=?, fileID=?, departmentOperationAuthorityID=? where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_departmentOperation where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentShareID from CloudFiles.T_sentShare where sentShareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsentshare_.sentShareID, tsentshare_.shareID as shareID7_, tsentshare_.sentShareReceiveID as sentShar7_7_, tsentshare_.sentShareSentPersonID as sentShar8_7_, tsentshare_.isChecked as isChecked7_, tsentshare_.sentShareTime as sentShar3_7_, tsentshare_.sentShareUserName as sentShar4_7_, tsentshare_.shareName as shareName7_ from CloudFiles.T_sentShare tsentshare_ where tsentshare_.sentShareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentShare (shareID, sentShareReceiveID, sentShareSentPersonID, isChecked, sentShareTime, sentShareUserName, shareName, sentShareID) values (?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentShare set shareID=?, sentShareReceiveID=?, sentShareSentPersonID=?, isChecked=?, sentShareTime=?, sentShareUserName=?, shareName=? where sentShareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentShare where sentShareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentTransactionID from CloudFiles.T_sentTransaction where sentTransactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsenttrans_.sentTransactionID, tsenttrans_.transactionID as transact4_8_, tsenttrans_.receiveTransactionPersonID as receiveT5_8_, tsenttrans_.sentTransactioncolPersonID as sentTran6_8_, tsenttrans_.sentTransactionTime as sentTran2_8_, tsenttrans_.transactionState as transact3_8_ from CloudFiles.T_sentTransaction tsenttrans_ where tsenttrans_.sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentTransaction (transactionID, receiveTransactionPersonID, sentTransactioncolPersonID, sentTransactionTime, transactionState, sentTransactionID) values (?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentTransaction set transactionID=?, receiveTransactionPersonID=?, sentTransactioncolPersonID=?, sentTransactionTime=?, transactionState=? where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentTransaction where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransactionMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionMessageID from CloudFiles.T_transactionMessage where transactionMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionMessageID, ttransacti_.transactionID as transact4_11_, ttransacti_.userID as userID11_, ttransacti_.transactionMessageSentContent as transact2_11_, ttransacti_.transactionMessageSentTime as transact3_11_ from CloudFiles.T_transactionMessage ttransacti_ where ttransacti_.transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transactionMessage (transactionID, userID, transactionMessageSentContent, transactionMessageSentTime, transactionMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transactionMessage set transactionID=?, userID=?, transactionMessageSentContent=?, transactionMessageSentTime=? where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transactionMessage where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartment
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentID from CloudFiles.T_department where departmentID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentID, tdepartmen_.departmentDescription as departme2_2_, tdepartmen_.departmentName as departme3_2_, tdepartmen_.departmentSpaceSize as departme4_2_, tdepartmen_.departmentUsedSpace as departme5_2_ from CloudFiles.T_department tdepartmen_ where tdepartmen_.departmentID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_department (departmentDescription, departmentName, departmentSpaceSize, departmentUsedSpace, departmentID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_department set departmentDescription=?, departmentName=?, departmentSpaceSize=?, departmentUsedSpace=? where departmentID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_department where departmentID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TUser
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userID from CloudFiles.T_user where userID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tuser_.userID, tuser_.departmentID as departm12_12_, tuser_.userAuthority as userAuth2_12_, tuser_.userHeadportrait as userHead3_12_, tuser_.userMailbox as userMail4_12_, tuser_.userName as userName12_, tuser_.userPassword as userPass6_12_, tuser_.userSex as userSex12_, tuser_.userSkin as userSkin12_, tuser_.userSpaceSize as userSpac9_12_, tuser_.userTelephone as userTel10_12_, tuser_.userUsedSpace as userUse11_12_ from CloudFiles.T_user tuser_ where tuser_.userID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_user (departmentID, userAuthority, userHeadportrait, userMailbox, userName, userPassword, userSex, userSkin, userSpaceSize, userTelephone, userUsedSpace, userID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_user set departmentID=?, userAuthority=?, userHeadportrait=?, userMailbox=?, userName=?, userPassword=?, userSex=?, userSkin=?, userSpaceSize=?, userTelephone=?, userUsedSpace=? where userID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_user where userID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TPrivateMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select privateMessageID from CloudFiles.T_privateMessage where privateMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tprivateme_.privateMessageID, tprivateme_.receivePersonID as receiveP4_6_, tprivateme_.sentPersonID as sentPers5_6_, tprivateme_.privateMessageSentContent as privateM2_6_, tprivateme_.privateMessageSentTime as privateM3_6_ from CloudFiles.T_privateMessage tprivateme_ where tprivateme_.privateMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_privateMessage (receivePersonID, sentPersonID, privateMessageSentContent, privateMessageSentTime, privateMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_privateMessage set receivePersonID=?, sentPersonID=?, privateMessageSentContent=?, privateMessageSentTime=? where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_privateMessage where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TCompany
DEBUG (AbstractEntityPersister.java:3491)  Version select: select companyID from CloudFiles.T_company where companyID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tcompany_.companyID, tcompany_.companyAddress as companyA2_1_, tcompany_.companyName as companyN3_1_, tcompany_.companyPassword as companyP4_1_, tcompany_.companySpaceSize as companyS5_1_, tcompany_.companyUsedSpace as companyU6_1_, tcompany_.linkMan as linkMan1_, tcompany_.linkManTelephone as linkManT8_1_, tcompany_.logoAddress as logoAddr9_1_, tcompany_.organizationCode as organiz10_1_ from CloudFiles.T_company tcompany_ where tcompany_.companyID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_company (companyAddress, companyName, companyPassword, companySpaceSize, companyUsedSpace, linkMan, linkManTelephone, logoAddress, organizationCode, companyID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_company set companyAddress=?, companyName=?, companyPassword=?, companySpaceSize=?, companyUsedSpace=?, linkMan=?, linkManTelephone=?, logoAddress=?, organizationCode=? where companyID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_company where companyID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileDepartmentID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_user set departmentID=? where userID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_user set departmentID=null where departmentID=? and userID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_user set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_draft set draftPersonID=? where draftID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=? and draftID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set sentPersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set transactionID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set userID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set userID=null where userID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set userID=null where userID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_share set sentShareSentPersonID=? where shareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=? and shareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set departmentID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareReceiveID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareSentPersonID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set fileID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set shareID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set shareID=null where shareID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set shareID=null where shareID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set transactionID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileUserID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileUserID=null where fileUserID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileUserID=null where fileUserID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set receivePersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set folderID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set folderID=null where folderID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set folderID=null where folderID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [NONE]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [READ]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE_NOWAIT]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [FORCE]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_READ]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_WRITE]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_10_0_, ttransacti0_.transactionAttachmentAddress as transact2_10_0_, ttransacti0_.transactionContent as transact3_10_0_, ttransacti0_.transactionName as transact4_10_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [NONE]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [READ]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE_NOWAIT]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [FORCE]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_READ]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_WRITE]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID5_0_, tfile0_.fileDepartmentID as fileDep12_5_0_, tfile0_.folderID as folderID5_0_, tfile0_.fileUserID as fileUserID5_0_, tfile0_.fileAttribute as fileAttr2_5_0_, tfile0_.fileExtension as fileExte3_5_0_, tfile0_.fileMD5 as fileMD4_5_0_, tfile0_.fileName as fileName5_0_, tfile0_.fileNewTime as fileNewT6_5_0_, tfile0_.filePath as filePath5_0_, tfile0_.filePrimaryPath as filePrim8_5_0_, tfile0_.fileSize as fileSize5_0_, tfile0_.fileStoragePath as fileSto10_5_0_, tfile0_.fileType as fileType5_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [NONE]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [READ]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE_NOWAIT]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [FORCE]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_READ]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_WRITE]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID4_0_, tdraft0_.draftPersonID as draftPer4_4_0_, tdraft0_.draftNewTime as draftNew2_4_0_, tdraft0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [NONE]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [READ]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE_NOWAIT]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [FORCE]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_READ]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_WRITE]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID9_0_, tshare0_.sentShareSentPersonID as sentSha10_9_0_, tshare0_.fileID as fileID9_0_, tshare0_.filetype as filetype9_0_, tshare0_.folderID as folderID9_0_, tshare0_.isSecretShare as isSecret5_9_0_, tshare0_.sentShareTime as sentShar6_9_0_, tshare0_.shareAddress as shareAdd7_9_0_, tshare0_.shareName as shareName9_0_, tshare0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [NONE]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [READ]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE_NOWAIT]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [FORCE]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_READ]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_WRITE]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId0_0_, tauthoriza0_.token as token0_0_, tauthoriza0_.updateDate as updateDate0_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [NONE]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [READ]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE_NOWAIT]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [FORCE]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_READ]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [NONE]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [READ]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE_NOWAIT]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [FORCE]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_READ]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_WRITE]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [NONE]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [READ]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE_NOWAIT]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [FORCE]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_READ]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_WRITE]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [NONE]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [READ]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE_NOWAIT]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [FORCE]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_READ]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_WRITE]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [NONE]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [READ]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE_NOWAIT]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [FORCE]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_READ]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_2_0_, tdepartmen0_.departmentDescription as departme2_2_0_, tdepartmen0_.departmentName as departme3_2_0_, tdepartmen0_.departmentSpaceSize as departme4_2_0_, tdepartmen0_.departmentUsedSpace as departme5_2_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [NONE]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [READ]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE_NOWAIT]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [FORCE]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_READ]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_WRITE]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID12_0_, tuser0_.departmentID as departm12_12_0_, tuser0_.userAuthority as userAuth2_12_0_, tuser0_.userHeadportrait as userHead3_12_0_, tuser0_.userMailbox as userMail4_12_0_, tuser0_.userName as userName12_0_, tuser0_.userPassword as userPass6_12_0_, tuser0_.userSex as userSex12_0_, tuser0_.userSkin as userSkin12_0_, tuser0_.userSpaceSize as userSpac9_12_0_, tuser0_.userTelephone as userTel10_12_0_, tuser0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [NONE]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [READ]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE_NOWAIT]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [FORCE]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_READ]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_WRITE]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [NONE]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [READ]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE_NOWAIT]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [FORCE]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_READ]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_WRITE]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID1_0_, tcompany0_.companyAddress as companyA2_1_0_, tcompany0_.companyName as companyN3_1_0_, tcompany0_.companyPassword as companyP4_1_0_, tcompany0_.companySpaceSize as companyS5_1_0_, tcompany0_.companyUsedSpace as companyU6_1_0_, tcompany0_.linkMan as linkMan1_0_, tcompany0_.linkManTelephone as linkManT8_1_0_, tcompany0_.logoAddress as logoAddr9_1_0_, tcompany0_.organizationCode as organiz10_1_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TFiles: select tfiles0_.fileDepartmentID as fileDep12_2_1_, tfiles0_.fileID as fileID5_1_, tfiles0_.fileID as fileID5_0_, tfiles0_.fileDepartmentID as fileDep12_5_0_, tfiles0_.folderID as folderID5_0_, tfiles0_.fileUserID as fileUserID5_0_, tfiles0_.fileAttribute as fileAttr2_5_0_, tfiles0_.fileExtension as fileExte3_5_0_, tfiles0_.fileMD5 as fileMD4_5_0_, tfiles0_.fileName as fileName5_0_, tfiles0_.fileNewTime as fileNewT6_5_0_, tfiles0_.filePath as filePath5_0_, tfiles0_.filePrimaryPath as filePrim8_5_0_, tfiles0_.fileSize as fileSize5_0_, tfiles0_.fileStoragePath as fileSto10_5_0_, tfiles0_.fileType as fileType5_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileDepartmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TUsers: select tusers0_.departmentID as departm12_2_1_, tusers0_.userID as userID12_1_, tusers0_.userID as userID12_0_, tusers0_.departmentID as departm12_12_0_, tusers0_.userAuthority as userAuth2_12_0_, tusers0_.userHeadportrait as userHead3_12_0_, tusers0_.userMailbox as userMail4_12_0_, tusers0_.userName as userName12_0_, tusers0_.userPassword as userPass6_12_0_, tusers0_.userSex as userSex12_0_, tusers0_.userSkin as userSkin12_0_, tusers0_.userSpaceSize as userSpac9_12_0_, tusers0_.userTelephone as userTel10_12_0_, tusers0_.userUsedSpace as userUse11_12_0_ from CloudFiles.T_user tusers0_ where tusers0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TDrafts: select tdrafts0_.draftPersonID as draftPer4_12_1_, tdrafts0_.draftID as draftID4_1_, tdrafts0_.draftID as draftID4_0_, tdrafts0_.draftPersonID as draftPer4_4_0_, tdrafts0_.draftNewTime as draftNew2_4_0_, tdrafts0_.draftTransactionID as draftTra3_4_0_ from CloudFiles.T_draft tdrafts0_ where tdrafts0_.draftPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId: select tprivateme0_.sentPersonID as sentPers5_12_1_, tprivateme0_.privateMessageID as privateM1_6_1_, tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.sentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId: select tsenttrans0_.receiveTransactionPersonID as receiveT5_12_1_, tsenttrans0_.sentTransactionID as sentTran1_8_1_, tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.receiveTransactionPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TTransactionMessages: select ttransacti0_.transactionID as transact4_10_1_, ttransacti0_.transactionMessageID as transact1_11_1_, ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TTransactionMessages: select ttransacti0_.userID as userID12_1_, ttransacti0_.transactionMessageID as transact1_11_1_, ttransacti0_.transactionMessageID as transact1_11_0_, ttransacti0_.transactionID as transact4_11_0_, ttransacti0_.userID as userID11_0_, ttransacti0_.transactionMessageSentContent as transact2_11_0_, ttransacti0_.transactionMessageSentTime as transact3_11_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.userID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TShares: select tshares0_.sentShareSentPersonID as sentSha10_12_1_, tshares0_.shareID as shareID9_1_, tshares0_.shareID as shareID9_0_, tshares0_.sentShareSentPersonID as sentSha10_9_0_, tshares0_.fileID as fileID9_0_, tshares0_.filetype as filetype9_0_, tshares0_.folderID as folderID9_0_, tshares0_.isSecretShare as isSecret5_9_0_, tshares0_.sentShareTime as sentShar6_9_0_, tshares0_.shareAddress as shareAdd7_9_0_, tshares0_.shareName as shareName9_0_, tshares0_.sharePassword as sharePas9_9_0_ from CloudFiles.T_share tshares0_ where tshares0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TDepartmentOperations: select tdepartmen0_.departmentID as departme3_2_1_, tdepartmen0_.departmentOperationID as departme1_3_1_, tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId: select tsentshare0_.sentShareReceiveID as sentShar7_12_1_, tsentshare0_.sentShareID as sentShar1_7_1_, tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareReceiveID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId: select tsentshare0_.sentShareSentPersonID as sentShar8_12_1_, tsentshare0_.sentShareID as sentShar1_7_1_, tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TFiles: select tfiles0_.fileUserID as fileUserID12_1_, tfiles0_.fileID as fileID5_1_, tfiles0_.fileID as fileID5_0_, tfiles0_.fileDepartmentID as fileDep12_5_0_, tfiles0_.folderID as folderID5_0_, tfiles0_.fileUserID as fileUserID5_0_, tfiles0_.fileAttribute as fileAttr2_5_0_, tfiles0_.fileExtension as fileExte3_5_0_, tfiles0_.fileMD5 as fileMD4_5_0_, tfiles0_.fileName as fileName5_0_, tfiles0_.fileNewTime as fileNewT6_5_0_, tfiles0_.filePath as filePath5_0_, tfiles0_.filePrimaryPath as filePrim8_5_0_, tfiles0_.fileSize as fileSize5_0_, tfiles0_.fileStoragePath as fileSto10_5_0_, tfiles0_.fileType as fileType5_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileUserID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TSentTransactions: select tsenttrans0_.transactionID as transact4_10_1_, tsenttrans0_.sentTransactionID as sentTran1_8_1_, tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TShare.TSentShares: select tsentshare0_.shareID as shareID9_1_, tsentshare0_.sentShareID as sentShar1_7_1_, tsentshare0_.sentShareID as sentShar1_7_0_, tsentshare0_.shareID as shareID7_0_, tsentshare0_.sentShareReceiveID as sentShar7_7_0_, tsentshare0_.sentShareSentPersonID as sentShar8_7_0_, tsentshare0_.isChecked as isChecked7_0_, tsentshare0_.sentShareTime as sentShar3_7_0_, tsentshare0_.sentShareUserName as sentShar4_7_0_, tsentshare0_.shareName as shareName7_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.shareID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId: select tsenttrans0_.sentTransactioncolPersonID as sentTran6_12_1_, tsenttrans0_.sentTransactionID as sentTran1_8_1_, tsenttrans0_.sentTransactionID as sentTran1_8_0_, tsenttrans0_.transactionID as transact4_8_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_8_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_8_0_, tsenttrans0_.sentTransactionTime as sentTran2_8_0_, tsenttrans0_.transactionState as transact3_8_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactioncolPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TDepartmentOperations: select tdepartmen0_.fileID as fileID5_1_, tdepartmen0_.departmentOperationID as departme1_3_1_, tdepartmen0_.departmentOperationID as departme1_3_0_, tdepartmen0_.departmentID as departme3_3_0_, tdepartmen0_.fileID as fileID3_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_3_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.fileID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId: select tprivateme0_.receivePersonID as receiveP4_12_1_, tprivateme0_.privateMessageID as privateM1_6_1_, tprivateme0_.privateMessageID as privateM1_6_0_, tprivateme0_.receivePersonID as receiveP4_6_0_, tprivateme0_.sentPersonID as sentPers5_6_0_, tprivateme0_.privateMessageSentContent as privateM2_6_0_, tprivateme0_.privateMessageSentTime as privateM3_6_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.receivePersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TFiles: select tfiles0_.folderID as folderID5_1_, tfiles0_.fileID as fileID5_1_, tfiles0_.fileID as fileID5_0_, tfiles0_.fileDepartmentID as fileDep12_5_0_, tfiles0_.folderID as folderID5_0_, tfiles0_.fileUserID as fileUserID5_0_, tfiles0_.fileAttribute as fileAttr2_5_0_, tfiles0_.fileExtension as fileExte3_5_0_, tfiles0_.fileMD5 as fileMD4_5_0_, tfiles0_.fileName as fileName5_0_, tfiles0_.fileNewTime as fileNewT6_5_0_, tfiles0_.filePath as filePath5_0_, tfiles0_.filePrimaryPath as filePrim8_5_0_, tfiles0_.fileSize as fileSize5_0_, tfiles0_.fileStoragePath as fileSto10_5_0_, tfiles0_.fileType as fileType5_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.folderID=?
DEBUG (SessionFactoryRegistry.java:62) Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@f2d3fd
DEBUG (SessionFactoryRegistry.java:75) Registering SessionFactory: f441d78f-2b03-42bf-ade2-25148c276ed9 (&lt;unnamed&gt;)
DEBUG (SessionFactoryRegistry.java:82) Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG (SessionFactoryImpl.java:484) Instantiated session factory
 INFO (SchemaUpdate.java:182) HHH000228: Running hbm2ddl schema update
 INFO (SchemaUpdate.java:193) HHH000102: Fetching database metadata
 INFO (SchemaUpdate.java:205) HHH000396: Updating schema
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_authorization
 INFO (TableMetadata.java:66) HHH000037: Columns: [token, userid, updatedate]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, userid]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_company
 INFO (TableMetadata.java:66) HHH000037: Columns: [companyusedspace, logoaddress, companyid, linkmantelephone, organizationcode, companypassword, companyaddress, linkman, companyspacesize, companyname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_department
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentusedspace, departmentid, departmentdescription, departmentspacesize, departmentname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_departmentOperation
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentid, departmentoperationid, fileid, departmentoperationauthorityid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [departmentoperation_file, departmentoperation_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [departmentoperation_file_idx, primary, departmentoperation_department_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_draft
 INFO (TableMetadata.java:66) HHH000037: Columns: [draftid, draftnewtime, drafttransactionid, draftpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [draft_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, draft_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_file
 INFO (TableMetadata.java:66) HHH000037: Columns: [filestoragepath, filepath, fileattribute, folderid, filemd5, fileuserid, fileid, filenewtime, fileprimarypath, filesize, fileextension, filename, filetype, filedepartmentid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [file_file, file_user, file_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [file_user_idx, primary, file_department_idx, file_file_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_privateMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [privatemessageid, privatemessagesentcontent, privatemessagesenttime, receivepersonid, sentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [privatemessagereceiveperson_user, privatemessagesentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, privatemessagesentperson_user_idx, privatemessagereceiveperson_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentShare
 INFO (TableMetadata.java:66) HHH000037: Columns: [sentshareid, sentsharetime, shareid, sentsharereceiveid, sharename, ischecked, sentsharesentpersonid, sentshareusername]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [sentshare_share, sentsharesentperson_user, sentsharereceive_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [sentshare_share_idx, sentshare_user_idx, sentshare_user_idx1, primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentTransaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionname, senttransactiontime, transactionid, receivetransactionpersonid, transactionstate, senttransactionid, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [senttransactionreceiveperson_user, senttransaction_transaction, senttransactionsentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [senttransaction_user_idx, primary, senttransactionreceiveperson_user_idx, senttransaction_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_share
 INFO (TableMetadata.java:66) HHH000037: Columns: [folderid, sentsharetime, sharepassword, shareaddress, issecretshare, shareid, filetype, fileid, sharename, sentsharesentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [fk_t_share_t_user1]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, fk_t_share_t_user1_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [senttransactiontime, transactionname, transactionid, transactionattachmentaddress, transactioncontent, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transaction_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transaction_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transactionMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionmessagesenttime, transactionmessagesentcontent, transactionid, userid, transactionmessageid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transactionmessage_transaction, transactionmessage_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transactionmessage_user_idx, transactionmessage_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_user
 INFO (TableMetadata.java:66) HHH000037: Columns: [userusedspace, userspacesize, userpassword, username, departmentid, usersex, userid, userheadportrait, usertelephone, usermailbox, userauthority, userskin]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [user_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [user_department_idx, primary]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
 INFO (SchemaUpdate.java:240) HHH000232: Schema update complete
DEBUG (SessionFactoryImpl.java:1021) Checking 0 named HQL queries
DEBUG (SessionFactoryImpl.java:1044) Checking 0 named SQL queries
DEBUG (StatisticsInitiator.java:110) Statistics initialized [enabled=false]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;baseDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;fileDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;fileDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.FileDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;fileDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;fileDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;fileDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;fileDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.TAuthorizationDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;TAuthorizationDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;TAuthorizationDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;TAuthorizationDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;login&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;login&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;login&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.UserServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userService&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userService&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionAdvice&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionManager&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionManager&apos;
 INFO (HibernateTransactionManager.java:268) Using DataSource [{
	CreateTime:&quot;2015-05-15 10:49:40&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:22978863, ConnectTime:&quot;2015-05-15 10:49:43&quot;, UseCount:2, LastActiveTime:&quot;2015-05-15 10:49:44&quot;}
	]
}] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [move*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [repair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [deleteAndRepair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [find*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [load*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [search*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [datagrid*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;userService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.UserServiceImpl@10f2e02]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;userService&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.TokenServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;tokenService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;tokenService&apos;: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;tokenService&apos; to bean named &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;tokenService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.TokenServiceImpl@2863d7]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;tokenService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;login&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personal&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Personal]: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personal&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personal&apos;: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personFile&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;fileDao&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;personFile&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.personal.impl.PersonFileServiceImpl@140a262]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personFile&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personal&apos; to bean named &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userService&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;timeTask&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;timeTask&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractApplicationContext.java:850) Unable to locate LifecycleProcessor with name &apos;lifecycleProcessor&apos;: using default [org.springframework.context.support.DefaultLifecycleProcessor@1d9d5ff]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;lifecycleProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
</system-out>
  </testcase>
  <testcase time="0.991" classname="com.bigroad.dao.impl.FileDaoImplTest" name="testGetrecycle">
    <error message="No Session found for current thread" type="org.hibernate.HibernateException">org.hibernate.HibernateException: No Session found for current thread
	at org.springframework.orm.hibernate4.SpringSessionContext.currentSession(SpringSessionContext.java:97)
	at org.hibernate.internal.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:941)
	at com.bigroad.dao.impl.BaseDaoImpl.getCurrentSession(BaseDaoImpl.java:28)
	at com.bigroad.dao.impl.BaseDaoImpl.find(BaseDaoImpl.java:89)
	at com.bigroad.dao.impl.FileDaoImpl.getRecycle(FileDaoImpl.java:28)
	at com.bigroad.dao.impl.FileDaoImplTest.testGetrecycle(FileDaoImplTest.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (AbstractApplicationContext.java:500) Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@183dcf3: startup date [Fri May 15 10:49:44 CST 2015]; root of context hierarchy
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:140) Loading schema mappings from [META-INF/spring.schemas]
DEBUG (PluggableSchemaResolver.java:146) Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (DefaultNamespaceHandlerResolver.java:156) Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\control] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\enterprise] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\information] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\letter] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\transaction] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/*/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\FileDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\UserDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl\TokenServiceImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\BaseDAOI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\DepartmentDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\FileDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\DepartmentDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\SentShareDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TokenTimerUpDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\SentShareDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\TAuthorizationDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\UserDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\CloudFileCon.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\Test.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileShareI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\TokenServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\UserServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\Command.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\FreshToken.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\JinTask.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MD5Check.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\PageResults.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\RowMapper.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\TokenProcessor.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\UserToken.class]]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class]
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 16 bean definitions from location pattern [spring.xml]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring-hibernate.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-2.5.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;dataSource&apos; as bean name and [] as aliases
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;transactionManager&apos; as bean name and [] as aliases
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 7 bean definitions from location pattern [spring-hibernate.xml]
DEBUG (AbstractApplicationContext.java:530) Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@183dcf3: org.springframework.beans.factory.support.DefaultListableBeanFactory@6fc417: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0]; root of factory hierarchy
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (MutablePropertySources.java:104) Adding [environmentProperties] PropertySource with lowest search precedence
 INFO (PropertiesLoaderSupport.java:177) Loading properties file from class path resource [config.properties]
DEBUG (MutablePropertySources.java:104) Adding [localProperties] PropertySource with lowest search precedence
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_url&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_url&apos; in [localProperties] with type [String] and value &apos;jdbc:mysql://172.31.34.115:3306/CloudFiles??useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_username&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_username&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_password&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_password&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;validationQuery&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;validationQuery&apos; in [localProperties] with type [String] and value &apos;SELECT 1&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.format_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.format_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.show_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.show_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.dialect&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.dialect&apos; in [localProperties] with type [String] and value &apos;org.hibernate.dialect.MySQLDialect&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.hbm2ddl.auto&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties] with type [String] and value &apos;update&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractApplicationContext.java:799) Unable to locate MessageSource with name &apos;messageSource&apos;: using default [org.springframework.context.support.DelegatingMessageSource@ce6203]
DEBUG (AbstractApplicationContext.java:823) Unable to locate ApplicationEventMulticaster with name &apos;applicationEventMulticaster&apos;: using default [org.springframework.context.event.SimpleApplicationEventMulticaster@184b986]
 INFO (DefaultListableBeanFactory.java:581) Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6fc417: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;baseDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.BaseDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;baseDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;baseDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;sessionFactory&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;dataSource&apos; to allow for resolving potential circular references
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
ERROR (DruidAbstractDataSource.java:935) maxIdle is deprecated
DEBUG (AbstractAutowireCapableBeanFactory.java:1555) Invoking init method  &apos;init&apos; on bean with name &apos;dataSource&apos;
 INFO (DruidDataSource.java:669) {dataSource-2} inited
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;sessionFactory&apos;
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration numeric_boolean -&gt; org.hibernate.type.NumericBooleanType@fecba2
DEBUG (BasicTypeRegistry.java:143) Adding type registration true_false -&gt; org.hibernate.type.TrueFalseType@801853
DEBUG (BasicTypeRegistry.java:143) Adding type registration yes_no -&gt; org.hibernate.type.YesNoType@f73e09
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration char -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration int -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_decimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigDecimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_integer -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigInteger -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration string -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.String -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration url -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.net.URL -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Date -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration dbtimestamp -&gt; org.hibernate.type.DbTimestampType@242102
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.GregorianCalendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar_date -&gt; org.hibernate.type.CalendarDateType@1efedd5
DEBUG (BasicTypeRegistry.java:143) Adding type registration locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration timezone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.TimeZone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-binary -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.UUID -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-char -&gt; org.hibernate.type.UUIDCharType@168bc8d
DEBUG (BasicTypeRegistry.java:143) Adding type registration pg-uuid -&gt; org.hibernate.type.PostgresUUIDType@12e827b
DEBUG (BasicTypeRegistry.java:143) Adding type registration binary -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte[] -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration [B -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-binary -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration Byte[] -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Byte; -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration image -&gt; org.hibernate.type.ImageType@1c5acda
DEBUG (BasicTypeRegistry.java:143) Adding type registration characters -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration char[] -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration [C -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-characters -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Character; -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration Character[] -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration text -&gt; org.hibernate.type.TextType@ac86bb
DEBUG (BasicTypeRegistry.java:143) Adding type registration blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_blob -&gt; org.hibernate.type.MaterializedBlobType@7780c2
DEBUG (BasicTypeRegistry.java:143) Adding type registration clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_clob -&gt; org.hibernate.type.MaterializedClobType@13a2cd7
DEBUG (BasicTypeRegistry.java:143) Adding type registration serializable -&gt; org.hibernate.type.SerializableType@33ee9b
DEBUG (BasicTypeRegistry.java:143) Adding type registration object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_date -&gt; org.hibernate.type.AdaptedImmutableType@1293656
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_time -&gt; org.hibernate.type.AdaptedImmutableType@ae8431
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_timestamp -&gt; org.hibernate.type.AdaptedImmutableType@168e09a
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_dbtimestamp -&gt; org.hibernate.type.AdaptedImmutableType@71dec8
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar -&gt; org.hibernate.type.AdaptedImmutableType@1d95624
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar_date -&gt; org.hibernate.type.AdaptedImmutableType@1a67848
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_binary -&gt; org.hibernate.type.AdaptedImmutableType@22f942
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_serializable -&gt; org.hibernate.type.AdaptedImmutableType@1a9177
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid2] -&gt; [org.hibernate.id.UUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [guid] -&gt; [org.hibernate.id.GUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid.hex] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [hilo] -&gt; [org.hibernate.id.TableHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [assigned] -&gt; [org.hibernate.id.Assigned]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [identity] -&gt; [org.hibernate.id.IdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [select] -&gt; [org.hibernate.id.SelectGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence] -&gt; [org.hibernate.id.SequenceGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [seqhilo] -&gt; [org.hibernate.id.SequenceHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [increment] -&gt; [org.hibernate.id.IncrementGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [foreign] -&gt; [org.hibernate.id.ForeignGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence-identity] -&gt; [org.hibernate.id.SequenceIdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-sequence] -&gt; [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-table] -&gt; [org.hibernate.id.enhanced.TableGenerator]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/model/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class]]
DEBUG (IntegratorServiceImpl.java:59) Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG (Configuration.java:1735) Preparing to build session factory with filters : {}
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TAuthorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TAuthorization
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TAuthorization on table T_authorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=userId, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=token, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property token with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for token
DEBUG (PropertyBinder.java:259) Building property token
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=updateDate, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property updateDate with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for updateDate
DEBUG (PropertyBinder.java:259) Building property updateDate
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TCompany
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TCompany
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TCompany on table T_company
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyId
DEBUG (PropertyBinder.java:259) Building property companyId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyAddress
DEBUG (PropertyBinder.java:259) Building property companyAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyName
DEBUG (PropertyBinder.java:259) Building property companyName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyPassword
DEBUG (PropertyBinder.java:259) Building property companyPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companySpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companySpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companySpaceSize
DEBUG (PropertyBinder.java:259) Building property companySpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyUsedSpace
DEBUG (PropertyBinder.java:259) Building property companyUsedSpace
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkMan, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkMan with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkMan
DEBUG (PropertyBinder.java:259) Building property linkMan
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkManTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkManTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkManTelephone
DEBUG (PropertyBinder.java:259) Building property linkManTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=logoAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property logoAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for logoAddress
DEBUG (PropertyBinder.java:259) Building property logoAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=organizationCode, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property organizationCode with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for organizationCode
DEBUG (PropertyBinder.java:259) Building property organizationCode
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartment
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartment on table T_department
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentId
DEBUG (PropertyBinder.java:259) Building property departmentId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TUsers_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TUsers
DEBUG (PropertyBinder.java:259) Building property TUsers
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentDescription, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentDescription with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentDescription
DEBUG (PropertyBinder.java:259) Building property departmentDescription
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentName
DEBUG (PropertyBinder.java:259) Building property departmentName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentSpaceSize
DEBUG (PropertyBinder.java:259) Building property departmentSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentUsedSpace
DEBUG (PropertyBinder.java:259) Building property departmentUsedSpace
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartmentOperation
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartmentOperation on table T_departmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationId
DEBUG (PropertyBinder.java:259) Building property departmentOperationId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationAuthorityID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationAuthorityId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationAuthorityId
DEBUG (PropertyBinder.java:259) Building property departmentOperationAuthorityId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDraft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDraft
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDraft on table T_draft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftId
DEBUG (PropertyBinder.java:259) Building property draftId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;draftPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftNewTime
DEBUG (PropertyBinder.java:259) Building property draftNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftTransactionID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftTransactionId
DEBUG (PropertyBinder.java:259) Building property draftTransactionId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TFile
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TFile on table T_file
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileDepartmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;folderID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileUserID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileAttribute, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileAttribute with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileAttribute
DEBUG (PropertyBinder.java:259) Building property fileAttribute
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileExtension, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileExtension with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileExtension
DEBUG (PropertyBinder.java:259) Building property fileExtension
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileMD5, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileMd5 with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileMd5
DEBUG (PropertyBinder.java:259) Building property fileMd5
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileName
DEBUG (PropertyBinder.java:259) Building property fileName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileNewTime
DEBUG (PropertyBinder.java:259) Building property fileNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePath
DEBUG (PropertyBinder.java:259) Building property filePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePrimaryPath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePrimaryPath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePrimaryPath
DEBUG (PropertyBinder.java:259) Building property filePrimaryPath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileSize
DEBUG (PropertyBinder.java:259) Building property fileSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileStoragePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileStoragePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileStoragePath
DEBUG (PropertyBinder.java:259) Building property fileStoragePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileType, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileType with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileType
DEBUG (PropertyBinder.java:259) Building property fileType
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TPrivateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TPrivateMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TPrivateMessage on table T_privateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageId
DEBUG (PropertyBinder.java:259) Building property privateMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receivePersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserByReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserBySentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentContent
DEBUG (PropertyBinder.java:259) Building property privateMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentTime
DEBUG (PropertyBinder.java:259) Building property privateMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentShare on table T_sentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareId
DEBUG (PropertyBinder.java:259) Building property sentShareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;shareID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareReceiveID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=isChecked, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isChecked with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isChecked
DEBUG (PropertyBinder.java:259) Building property isChecked
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareUserName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareUserName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareUserName
DEBUG (PropertyBinder.java:259) Building property sentShareUserName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentTransaction on table T_sentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionId
DEBUG (PropertyBinder.java:259) Building property sentTransactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receiveTransactionPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserByReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentTransactioncolPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserBySentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionTime
DEBUG (PropertyBinder.java:259) Building property sentTransactionTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=transactionState, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionState with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionState
DEBUG (PropertyBinder.java:259) Building property transactionState
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TShare on table T_share
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareId
DEBUG (PropertyBinder.java:259) Building property shareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TShare.TSentShares
DEBUG (PropertyBinder.java:259) Building property TSentShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=fileID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=filetype, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filetype with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filetype
DEBUG (PropertyBinder.java:259) Building property filetype
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=folderID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property folderId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for folderId
DEBUG (PropertyBinder.java:259) Building property folderId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=isSecretShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isSecretShare with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isSecretShare
DEBUG (PropertyBinder.java:259) Building property isSecretShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareAddress
DEBUG (PropertyBinder.java:259) Building property shareAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sharePassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sharePassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sharePassword
DEBUG (PropertyBinder.java:259) Building property sharePassword
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransaction on table T_transaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionId
DEBUG (PropertyBinder.java:259) Building property transactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactions_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (PropertyBinder.java:259) Building property TSentTransactions
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionAttachmentAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionAttachmentAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionAttachmentAddress
DEBUG (PropertyBinder.java:259) Building property transactionAttachmentAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionContent
DEBUG (PropertyBinder.java:259) Building property transactionContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionName
DEBUG (PropertyBinder.java:259) Building property transactionName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransactionMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransactionMessage on table T_transactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageId
DEBUG (PropertyBinder.java:259) Building property transactionMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;userID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentContent
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentTime
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TUser
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TUser on table T_user
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDrafts_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TDrafts
DEBUG (PropertyBinder.java:259) Building property TDrafts
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForReceivePersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareReceiveId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForReceiveTransactionPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForSentTransactioncolPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForSentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TShares
DEBUG (PropertyBinder.java:259) Building property TShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userAuthority, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userAuthority with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userAuthority
DEBUG (PropertyBinder.java:259) Building property userAuthority
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userHeadportrait, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userHeadportrait with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userHeadportrait
DEBUG (PropertyBinder.java:259) Building property userHeadportrait
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userMailbox, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userMailbox with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userMailbox
DEBUG (PropertyBinder.java:259) Building property userMailbox
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userName
DEBUG (PropertyBinder.java:259) Building property userName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userPassword
DEBUG (PropertyBinder.java:259) Building property userPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSex, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSex with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSex
DEBUG (PropertyBinder.java:259) Building property userSex
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSkin, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSkin with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSkin
DEBUG (PropertyBinder.java:259) Building property userSkin
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSpaceSize
DEBUG (PropertyBinder.java:259) Building property userSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userTelephone
DEBUG (PropertyBinder.java:259) Building property userTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userUsedSpace
DEBUG (PropertyBinder.java:259) Building property userUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for token
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for updateDate
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companySpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkMan
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkManTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for logoAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for organizationCode
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentDescription
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationAuthorityId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileAttribute
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileExtension
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileMd5
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePrimaryPath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileStoragePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileType
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isChecked
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareUserName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionState
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filetype
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for folderId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isSecretShare
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sharePassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionAttachmentAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userAuthority
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userHeadportrait
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userMailbox
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSex
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSkin
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userUsedSpace
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileDepartmentID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TUsers through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TUsers -&gt; T_user
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TUser.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TUser
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: folderID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TShare.TSentShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TShare.TSentShares -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TShare
DEBUG (CollectionSecondPass.java:80) Mapped collection key: shareID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TSentTransactions through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TSentTransactions -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TDrafts through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TDrafts -&gt; T_draft
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDraft.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: draftPersonID, one-to-many: com.bigroad.model.db.TDraft
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileUserID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserByReceivePersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receivePersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserBySentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentPersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareReceiveId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareReceiveID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareSentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserByReceiveTransactionPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receiveTransactionPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserBySentTransactioncolPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentTransactioncolPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TShares -&gt; T_share
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TShare.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: userID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (JdbcServicesImpl.java:121) Database -&gt;
       name : MySQL
    version : 5.5.41-0ubuntu0.14.04.1
      major : 5
      minor : 5
DEBUG (JdbcServicesImpl.java:127) Driver -&gt;
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.34 ( Revision: jess.balint@oracle.com-20141014163213-wqbwpf1ok2kvo1om )
      major : 5
      minor : 1
DEBUG (JdbcServicesImpl.java:133) JDBC version : 4.0
 INFO (Dialect.java:125) HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG (SettingsFactory.java:102) Automatic flush during beforeCompletion(): disabled
DEBUG (SettingsFactory.java:108) Automatic session close at end of transaction: disabled
DEBUG (SettingsFactory.java:119) JDBC batch size: 15
DEBUG (SettingsFactory.java:125) JDBC batch updates for versioned data: disabled
DEBUG (SettingsFactory.java:135) Scrollable result sets: enabled
DEBUG (SettingsFactory.java:141) Wrap result sets: disabled
DEBUG (SettingsFactory.java:147) JDBC3 getGeneratedKeys(): enabled
DEBUG (SettingsFactory.java:159) multi-tenancy strategy : NONE
DEBUG (SettingsFactory.java:165) Connection release mode: auto
 INFO (TransactionFactoryInitiator.java:68) HHH000399: Using default transaction strategy (direct JDBC transactions)
DEBUG (SettingsFactory.java:201) Maximum outer join fetch depth: 2
DEBUG (SettingsFactory.java:207) Default batch fetch size: 1
DEBUG (SettingsFactory.java:213) Generate SQL with comments: disabled
DEBUG (SettingsFactory.java:219) Order SQL updates by primary key: disabled
DEBUG (SettingsFactory.java:225) Order SQL inserts for batching: disabled
DEBUG (SettingsFactory.java:450) Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
 INFO (ASTQueryTranslatorFactory.java:48) HHH000397: Using ASTQueryTranslatorFactory
DEBUG (SettingsFactory.java:235) Query language substitutions: {}
DEBUG (SettingsFactory.java:241) JPA-QL strict compliance: disabled
DEBUG (SettingsFactory.java:249) Second-level cache: enabled
DEBUG (SettingsFactory.java:255) Query cache: disabled
DEBUG (SettingsFactory.java:390) Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG (SettingsFactory.java:400) org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
DEBUG (SettingsFactory.java:270) Optimize cache for minimal puts: disabled
DEBUG (SettingsFactory.java:285) Structured second-level cache entries: disabled
DEBUG (SettingsFactory.java:294) Statistics: disabled
DEBUG (SettingsFactory.java:300) Deleted entity synthetic identifier rollback: disabled
DEBUG (SettingsFactory.java:324) Default entity-mode: pojo
DEBUG (SettingsFactory.java:330) Named query checking : enabled
DEBUG (SettingsFactory.java:336) Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG (SessionFactoryImpl.java:223) Building session factory
DEBUG (SessionFactoryImpl.java:275) Session factory constructed with filter configurations : {}
DEBUG (SessionFactoryImpl.java:276) Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin, java.vm.version=21.0-b17, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\eclipse_yjs_all\20150515\cloudfiles, java.runtime.version=1.7.0-b147, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=F:\eclipse_yjs_all\20150515\cloudfiles, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar, java.io.tmpdir=C:\Users\LIUHON~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=GBK, java.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0/bin/../jre/lib/i386;C:\Program Files\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.7.0\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Common Files\Thunder Network\KanKan\Codecs;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;D:\20129162336\ration rose\rr2\common;c:\Program Files\Common Files\Ulead Systems\MPEG;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;D:\20129162336\TortoiseSVN\bin;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\runtime\win32;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\bin;C:\Program Files\Cracklock\Bin;D:\20129162336\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;., hibernate.connection.datasource={
	CreateTime:&quot;2015-05-15 10:49:44&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:22862353, ConnectTime:&quot;2015-05-15 10:49:45&quot;, UseCount:1, LastActiveTime:&quot;2015-05-15 10:49:45&quot;}
	]
}, surefire.test.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\liuhonghua, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=GBK, hibernate.format_sql=true, user.name=liuhonghua, java.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@12940b3, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0\jre, sun.java.command=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire4193884015818501124tmp F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire_05322085908533930276tmp, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0, java.ext.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\liuhonghua\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionID from CloudFiles.T_transaction where transactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionID, ttransacti_.transactionAttachmentAddress as transact2_36_, ttransacti_.transactionContent as transact3_36_, ttransacti_.transactionName as transact4_36_ from CloudFiles.T_transaction ttransacti_ where ttransacti_.transactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transaction (transactionAttachmentAddress, transactionContent, transactionName, transactionID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transaction set transactionAttachmentAddress=?, transactionContent=?, transactionName=? where transactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transaction where transactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TFile
DEBUG (AbstractEntityPersister.java:3491)  Version select: select fileID from CloudFiles.T_file where fileID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tfile_.fileID, tfile_.fileDepartmentID as fileDep12_31_, tfile_.folderID as folderID31_, tfile_.fileUserID as fileUserID31_, tfile_.fileAttribute as fileAttr2_31_, tfile_.fileExtension as fileExte3_31_, tfile_.fileMD5 as fileMD4_31_, tfile_.fileName as fileName31_, tfile_.fileNewTime as fileNewT6_31_, tfile_.filePath as filePath31_, tfile_.filePrimaryPath as filePrim8_31_, tfile_.fileSize as fileSize31_, tfile_.fileStoragePath as fileSto10_31_, tfile_.fileType as fileType31_ from CloudFiles.T_file tfile_ where tfile_.fileID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_file (fileDepartmentID, folderID, fileUserID, fileAttribute, fileExtension, fileMD5, fileName, fileNewTime, filePath, filePrimaryPath, fileSize, fileStoragePath, fileType, fileID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_file set fileDepartmentID=?, folderID=?, fileUserID=?, fileAttribute=?, fileExtension=?, fileMD5=?, fileName=?, fileNewTime=?, filePath=?, filePrimaryPath=?, fileSize=?, fileStoragePath=?, fileType=? where fileID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_file where fileID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDraft
DEBUG (AbstractEntityPersister.java:3491)  Version select: select draftID from CloudFiles.T_draft where draftID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdraft_.draftID, tdraft_.draftPersonID as draftPer4_30_, tdraft_.draftNewTime as draftNew2_30_, tdraft_.draftTransactionID as draftTra3_30_ from CloudFiles.T_draft tdraft_ where tdraft_.draftID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_draft (draftPersonID, draftNewTime, draftTransactionID, draftID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_draft set draftPersonID=?, draftNewTime=?, draftTransactionID=? where draftID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_draft where draftID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select shareID from CloudFiles.T_share where shareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tshare_.shareID, tshare_.sentShareSentPersonID as sentSha10_35_, tshare_.fileID as fileID35_, tshare_.filetype as filetype35_, tshare_.folderID as folderID35_, tshare_.isSecretShare as isSecret5_35_, tshare_.sentShareTime as sentShar6_35_, tshare_.shareAddress as shareAdd7_35_, tshare_.shareName as shareName35_, tshare_.sharePassword as sharePas9_35_ from CloudFiles.T_share tshare_ where tshare_.shareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_share (sentShareSentPersonID, fileID, filetype, folderID, isSecretShare, sentShareTime, shareAddress, shareName, sharePassword, shareID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_share set sentShareSentPersonID=?, fileID=?, filetype=?, folderID=?, isSecretShare=?, sentShareTime=?, shareAddress=?, shareName=?, sharePassword=? where shareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_share where shareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TAuthorization
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userId from CloudFiles.T_authorization where userId =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tauthoriza_.userId, tauthoriza_.token as token26_, tauthoriza_.updateDate as updateDate26_ from CloudFiles.T_authorization tauthoriza_ where tauthoriza_.userId=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_authorization (token, updateDate, userId) values (?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_authorization set token=?, updateDate=? where userId=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_authorization where userId=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartmentOperation
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentOperationID from CloudFiles.T_departmentOperation where departmentOperationID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentOperationID, tdepartmen_.departmentID as departme3_29_, tdepartmen_.fileID as fileID29_, tdepartmen_.departmentOperationAuthorityID as departme2_29_ from CloudFiles.T_departmentOperation tdepartmen_ where tdepartmen_.departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_departmentOperation (departmentID, fileID, departmentOperationAuthorityID, departmentOperationID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_departmentOperation set departmentID=?, fileID=?, departmentOperationAuthorityID=? where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_departmentOperation where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentShareID from CloudFiles.T_sentShare where sentShareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsentshare_.sentShareID, tsentshare_.shareID as shareID33_, tsentshare_.sentShareReceiveID as sentShar7_33_, tsentshare_.sentShareSentPersonID as sentShar8_33_, tsentshare_.isChecked as isChecked33_, tsentshare_.sentShareTime as sentShar3_33_, tsentshare_.sentShareUserName as sentShar4_33_, tsentshare_.shareName as shareName33_ from CloudFiles.T_sentShare tsentshare_ where tsentshare_.sentShareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentShare (shareID, sentShareReceiveID, sentShareSentPersonID, isChecked, sentShareTime, sentShareUserName, shareName, sentShareID) values (?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentShare set shareID=?, sentShareReceiveID=?, sentShareSentPersonID=?, isChecked=?, sentShareTime=?, sentShareUserName=?, shareName=? where sentShareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentShare where sentShareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentTransactionID from CloudFiles.T_sentTransaction where sentTransactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsenttrans_.sentTransactionID, tsenttrans_.transactionID as transact4_34_, tsenttrans_.receiveTransactionPersonID as receiveT5_34_, tsenttrans_.sentTransactioncolPersonID as sentTran6_34_, tsenttrans_.sentTransactionTime as sentTran2_34_, tsenttrans_.transactionState as transact3_34_ from CloudFiles.T_sentTransaction tsenttrans_ where tsenttrans_.sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentTransaction (transactionID, receiveTransactionPersonID, sentTransactioncolPersonID, sentTransactionTime, transactionState, sentTransactionID) values (?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentTransaction set transactionID=?, receiveTransactionPersonID=?, sentTransactioncolPersonID=?, sentTransactionTime=?, transactionState=? where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentTransaction where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransactionMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionMessageID from CloudFiles.T_transactionMessage where transactionMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionMessageID, ttransacti_.transactionID as transact4_37_, ttransacti_.userID as userID37_, ttransacti_.transactionMessageSentContent as transact2_37_, ttransacti_.transactionMessageSentTime as transact3_37_ from CloudFiles.T_transactionMessage ttransacti_ where ttransacti_.transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transactionMessage (transactionID, userID, transactionMessageSentContent, transactionMessageSentTime, transactionMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transactionMessage set transactionID=?, userID=?, transactionMessageSentContent=?, transactionMessageSentTime=? where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transactionMessage where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartment
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentID from CloudFiles.T_department where departmentID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentID, tdepartmen_.departmentDescription as departme2_28_, tdepartmen_.departmentName as departme3_28_, tdepartmen_.departmentSpaceSize as departme4_28_, tdepartmen_.departmentUsedSpace as departme5_28_ from CloudFiles.T_department tdepartmen_ where tdepartmen_.departmentID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_department (departmentDescription, departmentName, departmentSpaceSize, departmentUsedSpace, departmentID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_department set departmentDescription=?, departmentName=?, departmentSpaceSize=?, departmentUsedSpace=? where departmentID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_department where departmentID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TUser
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userID from CloudFiles.T_user where userID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tuser_.userID, tuser_.departmentID as departm12_38_, tuser_.userAuthority as userAuth2_38_, tuser_.userHeadportrait as userHead3_38_, tuser_.userMailbox as userMail4_38_, tuser_.userName as userName38_, tuser_.userPassword as userPass6_38_, tuser_.userSex as userSex38_, tuser_.userSkin as userSkin38_, tuser_.userSpaceSize as userSpac9_38_, tuser_.userTelephone as userTel10_38_, tuser_.userUsedSpace as userUse11_38_ from CloudFiles.T_user tuser_ where tuser_.userID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_user (departmentID, userAuthority, userHeadportrait, userMailbox, userName, userPassword, userSex, userSkin, userSpaceSize, userTelephone, userUsedSpace, userID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_user set departmentID=?, userAuthority=?, userHeadportrait=?, userMailbox=?, userName=?, userPassword=?, userSex=?, userSkin=?, userSpaceSize=?, userTelephone=?, userUsedSpace=? where userID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_user where userID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TPrivateMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select privateMessageID from CloudFiles.T_privateMessage where privateMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tprivateme_.privateMessageID, tprivateme_.receivePersonID as receiveP4_32_, tprivateme_.sentPersonID as sentPers5_32_, tprivateme_.privateMessageSentContent as privateM2_32_, tprivateme_.privateMessageSentTime as privateM3_32_ from CloudFiles.T_privateMessage tprivateme_ where tprivateme_.privateMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_privateMessage (receivePersonID, sentPersonID, privateMessageSentContent, privateMessageSentTime, privateMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_privateMessage set receivePersonID=?, sentPersonID=?, privateMessageSentContent=?, privateMessageSentTime=? where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_privateMessage where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TCompany
DEBUG (AbstractEntityPersister.java:3491)  Version select: select companyID from CloudFiles.T_company where companyID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tcompany_.companyID, tcompany_.companyAddress as companyA2_27_, tcompany_.companyName as companyN3_27_, tcompany_.companyPassword as companyP4_27_, tcompany_.companySpaceSize as companyS5_27_, tcompany_.companyUsedSpace as companyU6_27_, tcompany_.linkMan as linkMan27_, tcompany_.linkManTelephone as linkManT8_27_, tcompany_.logoAddress as logoAddr9_27_, tcompany_.organizationCode as organiz10_27_ from CloudFiles.T_company tcompany_ where tcompany_.companyID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_company (companyAddress, companyName, companyPassword, companySpaceSize, companyUsedSpace, linkMan, linkManTelephone, logoAddress, organizationCode, companyID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_company set companyAddress=?, companyName=?, companyPassword=?, companySpaceSize=?, companyUsedSpace=?, linkMan=?, linkManTelephone=?, logoAddress=?, organizationCode=? where companyID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_company where companyID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileDepartmentID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_user set departmentID=? where userID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_user set departmentID=null where departmentID=? and userID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_user set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_draft set draftPersonID=? where draftID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=? and draftID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set sentPersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set transactionID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set userID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set userID=null where userID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set userID=null where userID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_share set sentShareSentPersonID=? where shareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=? and shareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set departmentID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareReceiveID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareSentPersonID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set fileID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set shareID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set shareID=null where shareID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set shareID=null where shareID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set transactionID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileUserID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileUserID=null where fileUserID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileUserID=null where fileUserID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set receivePersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set folderID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set folderID=null where folderID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set folderID=null where folderID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [NONE]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [READ]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE_NOWAIT]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [FORCE]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_READ]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_WRITE]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_36_0_, ttransacti0_.transactionAttachmentAddress as transact2_36_0_, ttransacti0_.transactionContent as transact3_36_0_, ttransacti0_.transactionName as transact4_36_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [NONE]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [READ]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE_NOWAIT]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [FORCE]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_READ]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_WRITE]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID31_0_, tfile0_.fileDepartmentID as fileDep12_31_0_, tfile0_.folderID as folderID31_0_, tfile0_.fileUserID as fileUserID31_0_, tfile0_.fileAttribute as fileAttr2_31_0_, tfile0_.fileExtension as fileExte3_31_0_, tfile0_.fileMD5 as fileMD4_31_0_, tfile0_.fileName as fileName31_0_, tfile0_.fileNewTime as fileNewT6_31_0_, tfile0_.filePath as filePath31_0_, tfile0_.filePrimaryPath as filePrim8_31_0_, tfile0_.fileSize as fileSize31_0_, tfile0_.fileStoragePath as fileSto10_31_0_, tfile0_.fileType as fileType31_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [NONE]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [READ]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE_NOWAIT]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [FORCE]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_READ]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_WRITE]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID30_0_, tdraft0_.draftPersonID as draftPer4_30_0_, tdraft0_.draftNewTime as draftNew2_30_0_, tdraft0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [NONE]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [READ]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE_NOWAIT]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [FORCE]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_READ]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_WRITE]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID35_0_, tshare0_.sentShareSentPersonID as sentSha10_35_0_, tshare0_.fileID as fileID35_0_, tshare0_.filetype as filetype35_0_, tshare0_.folderID as folderID35_0_, tshare0_.isSecretShare as isSecret5_35_0_, tshare0_.sentShareTime as sentShar6_35_0_, tshare0_.shareAddress as shareAdd7_35_0_, tshare0_.shareName as shareName35_0_, tshare0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [NONE]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [READ]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE_NOWAIT]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [FORCE]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_READ]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_WRITE]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId26_0_, tauthoriza0_.token as token26_0_, tauthoriza0_.updateDate as updateDate26_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [NONE]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [READ]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE_NOWAIT]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [FORCE]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_READ]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [NONE]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [READ]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE_NOWAIT]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [FORCE]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_READ]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_WRITE]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [NONE]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [READ]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE_NOWAIT]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [FORCE]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_READ]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_WRITE]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [NONE]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [READ]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE_NOWAIT]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [FORCE]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_READ]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_WRITE]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [NONE]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [READ]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE_NOWAIT]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [FORCE]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_READ]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_28_0_, tdepartmen0_.departmentDescription as departme2_28_0_, tdepartmen0_.departmentName as departme3_28_0_, tdepartmen0_.departmentSpaceSize as departme4_28_0_, tdepartmen0_.departmentUsedSpace as departme5_28_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [NONE]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [READ]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE_NOWAIT]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [FORCE]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_READ]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_WRITE]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID38_0_, tuser0_.departmentID as departm12_38_0_, tuser0_.userAuthority as userAuth2_38_0_, tuser0_.userHeadportrait as userHead3_38_0_, tuser0_.userMailbox as userMail4_38_0_, tuser0_.userName as userName38_0_, tuser0_.userPassword as userPass6_38_0_, tuser0_.userSex as userSex38_0_, tuser0_.userSkin as userSkin38_0_, tuser0_.userSpaceSize as userSpac9_38_0_, tuser0_.userTelephone as userTel10_38_0_, tuser0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [NONE]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [READ]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE_NOWAIT]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [FORCE]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_READ]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_WRITE]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [NONE]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [READ]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE_NOWAIT]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [FORCE]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_READ]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_WRITE]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID27_0_, tcompany0_.companyAddress as companyA2_27_0_, tcompany0_.companyName as companyN3_27_0_, tcompany0_.companyPassword as companyP4_27_0_, tcompany0_.companySpaceSize as companyS5_27_0_, tcompany0_.companyUsedSpace as companyU6_27_0_, tcompany0_.linkMan as linkMan27_0_, tcompany0_.linkManTelephone as linkManT8_27_0_, tcompany0_.logoAddress as logoAddr9_27_0_, tcompany0_.organizationCode as organiz10_27_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TFiles: select tfiles0_.fileDepartmentID as fileDep12_28_1_, tfiles0_.fileID as fileID31_1_, tfiles0_.fileID as fileID31_0_, tfiles0_.fileDepartmentID as fileDep12_31_0_, tfiles0_.folderID as folderID31_0_, tfiles0_.fileUserID as fileUserID31_0_, tfiles0_.fileAttribute as fileAttr2_31_0_, tfiles0_.fileExtension as fileExte3_31_0_, tfiles0_.fileMD5 as fileMD4_31_0_, tfiles0_.fileName as fileName31_0_, tfiles0_.fileNewTime as fileNewT6_31_0_, tfiles0_.filePath as filePath31_0_, tfiles0_.filePrimaryPath as filePrim8_31_0_, tfiles0_.fileSize as fileSize31_0_, tfiles0_.fileStoragePath as fileSto10_31_0_, tfiles0_.fileType as fileType31_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileDepartmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TUsers: select tusers0_.departmentID as departm12_28_1_, tusers0_.userID as userID38_1_, tusers0_.userID as userID38_0_, tusers0_.departmentID as departm12_38_0_, tusers0_.userAuthority as userAuth2_38_0_, tusers0_.userHeadportrait as userHead3_38_0_, tusers0_.userMailbox as userMail4_38_0_, tusers0_.userName as userName38_0_, tusers0_.userPassword as userPass6_38_0_, tusers0_.userSex as userSex38_0_, tusers0_.userSkin as userSkin38_0_, tusers0_.userSpaceSize as userSpac9_38_0_, tusers0_.userTelephone as userTel10_38_0_, tusers0_.userUsedSpace as userUse11_38_0_ from CloudFiles.T_user tusers0_ where tusers0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TDrafts: select tdrafts0_.draftPersonID as draftPer4_38_1_, tdrafts0_.draftID as draftID30_1_, tdrafts0_.draftID as draftID30_0_, tdrafts0_.draftPersonID as draftPer4_30_0_, tdrafts0_.draftNewTime as draftNew2_30_0_, tdrafts0_.draftTransactionID as draftTra3_30_0_ from CloudFiles.T_draft tdrafts0_ where tdrafts0_.draftPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId: select tprivateme0_.sentPersonID as sentPers5_38_1_, tprivateme0_.privateMessageID as privateM1_32_1_, tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.sentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId: select tsenttrans0_.receiveTransactionPersonID as receiveT5_38_1_, tsenttrans0_.sentTransactionID as sentTran1_34_1_, tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.receiveTransactionPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TTransactionMessages: select ttransacti0_.transactionID as transact4_36_1_, ttransacti0_.transactionMessageID as transact1_37_1_, ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TTransactionMessages: select ttransacti0_.userID as userID38_1_, ttransacti0_.transactionMessageID as transact1_37_1_, ttransacti0_.transactionMessageID as transact1_37_0_, ttransacti0_.transactionID as transact4_37_0_, ttransacti0_.userID as userID37_0_, ttransacti0_.transactionMessageSentContent as transact2_37_0_, ttransacti0_.transactionMessageSentTime as transact3_37_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.userID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TShares: select tshares0_.sentShareSentPersonID as sentSha10_38_1_, tshares0_.shareID as shareID35_1_, tshares0_.shareID as shareID35_0_, tshares0_.sentShareSentPersonID as sentSha10_35_0_, tshares0_.fileID as fileID35_0_, tshares0_.filetype as filetype35_0_, tshares0_.folderID as folderID35_0_, tshares0_.isSecretShare as isSecret5_35_0_, tshares0_.sentShareTime as sentShar6_35_0_, tshares0_.shareAddress as shareAdd7_35_0_, tshares0_.shareName as shareName35_0_, tshares0_.sharePassword as sharePas9_35_0_ from CloudFiles.T_share tshares0_ where tshares0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TDepartmentOperations: select tdepartmen0_.departmentID as departme3_28_1_, tdepartmen0_.departmentOperationID as departme1_29_1_, tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId: select tsentshare0_.sentShareReceiveID as sentShar7_38_1_, tsentshare0_.sentShareID as sentShar1_33_1_, tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareReceiveID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId: select tsentshare0_.sentShareSentPersonID as sentShar8_38_1_, tsentshare0_.sentShareID as sentShar1_33_1_, tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TFiles: select tfiles0_.fileUserID as fileUserID38_1_, tfiles0_.fileID as fileID31_1_, tfiles0_.fileID as fileID31_0_, tfiles0_.fileDepartmentID as fileDep12_31_0_, tfiles0_.folderID as folderID31_0_, tfiles0_.fileUserID as fileUserID31_0_, tfiles0_.fileAttribute as fileAttr2_31_0_, tfiles0_.fileExtension as fileExte3_31_0_, tfiles0_.fileMD5 as fileMD4_31_0_, tfiles0_.fileName as fileName31_0_, tfiles0_.fileNewTime as fileNewT6_31_0_, tfiles0_.filePath as filePath31_0_, tfiles0_.filePrimaryPath as filePrim8_31_0_, tfiles0_.fileSize as fileSize31_0_, tfiles0_.fileStoragePath as fileSto10_31_0_, tfiles0_.fileType as fileType31_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileUserID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TSentTransactions: select tsenttrans0_.transactionID as transact4_36_1_, tsenttrans0_.sentTransactionID as sentTran1_34_1_, tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TShare.TSentShares: select tsentshare0_.shareID as shareID35_1_, tsentshare0_.sentShareID as sentShar1_33_1_, tsentshare0_.sentShareID as sentShar1_33_0_, tsentshare0_.shareID as shareID33_0_, tsentshare0_.sentShareReceiveID as sentShar7_33_0_, tsentshare0_.sentShareSentPersonID as sentShar8_33_0_, tsentshare0_.isChecked as isChecked33_0_, tsentshare0_.sentShareTime as sentShar3_33_0_, tsentshare0_.sentShareUserName as sentShar4_33_0_, tsentshare0_.shareName as shareName33_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.shareID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId: select tsenttrans0_.sentTransactioncolPersonID as sentTran6_38_1_, tsenttrans0_.sentTransactionID as sentTran1_34_1_, tsenttrans0_.sentTransactionID as sentTran1_34_0_, tsenttrans0_.transactionID as transact4_34_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_34_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_34_0_, tsenttrans0_.sentTransactionTime as sentTran2_34_0_, tsenttrans0_.transactionState as transact3_34_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactioncolPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TDepartmentOperations: select tdepartmen0_.fileID as fileID31_1_, tdepartmen0_.departmentOperationID as departme1_29_1_, tdepartmen0_.departmentOperationID as departme1_29_0_, tdepartmen0_.departmentID as departme3_29_0_, tdepartmen0_.fileID as fileID29_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_29_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.fileID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId: select tprivateme0_.receivePersonID as receiveP4_38_1_, tprivateme0_.privateMessageID as privateM1_32_1_, tprivateme0_.privateMessageID as privateM1_32_0_, tprivateme0_.receivePersonID as receiveP4_32_0_, tprivateme0_.sentPersonID as sentPers5_32_0_, tprivateme0_.privateMessageSentContent as privateM2_32_0_, tprivateme0_.privateMessageSentTime as privateM3_32_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.receivePersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TFiles: select tfiles0_.folderID as folderID31_1_, tfiles0_.fileID as fileID31_1_, tfiles0_.fileID as fileID31_0_, tfiles0_.fileDepartmentID as fileDep12_31_0_, tfiles0_.folderID as folderID31_0_, tfiles0_.fileUserID as fileUserID31_0_, tfiles0_.fileAttribute as fileAttr2_31_0_, tfiles0_.fileExtension as fileExte3_31_0_, tfiles0_.fileMD5 as fileMD4_31_0_, tfiles0_.fileName as fileName31_0_, tfiles0_.fileNewTime as fileNewT6_31_0_, tfiles0_.filePath as filePath31_0_, tfiles0_.filePrimaryPath as filePrim8_31_0_, tfiles0_.fileSize as fileSize31_0_, tfiles0_.fileStoragePath as fileSto10_31_0_, tfiles0_.fileType as fileType31_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.folderID=?
DEBUG (SessionFactoryRegistry.java:75) Registering SessionFactory: 3a67b50e-4c2f-47f9-9431-8d84431f8433 (&lt;unnamed&gt;)
DEBUG (SessionFactoryRegistry.java:82) Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG (SessionFactoryImpl.java:484) Instantiated session factory
 INFO (SchemaUpdate.java:182) HHH000228: Running hbm2ddl schema update
 INFO (SchemaUpdate.java:193) HHH000102: Fetching database metadata
 INFO (SchemaUpdate.java:205) HHH000396: Updating schema
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_authorization
 INFO (TableMetadata.java:66) HHH000037: Columns: [token, userid, updatedate]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, userid]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_company
 INFO (TableMetadata.java:66) HHH000037: Columns: [companyusedspace, logoaddress, companyid, linkmantelephone, organizationcode, companypassword, companyaddress, linkman, companyspacesize, companyname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_department
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentusedspace, departmentid, departmentdescription, departmentspacesize, departmentname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_departmentOperation
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentid, departmentoperationid, fileid, departmentoperationauthorityid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [departmentoperation_file, departmentoperation_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [departmentoperation_file_idx, primary, departmentoperation_department_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_draft
 INFO (TableMetadata.java:66) HHH000037: Columns: [draftid, draftnewtime, drafttransactionid, draftpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [draft_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, draft_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_file
 INFO (TableMetadata.java:66) HHH000037: Columns: [filestoragepath, filepath, fileattribute, folderid, filemd5, fileuserid, fileid, filenewtime, fileprimarypath, filesize, fileextension, filename, filetype, filedepartmentid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [file_file, file_user, file_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [file_user_idx, primary, file_department_idx, file_file_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_privateMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [privatemessageid, privatemessagesentcontent, privatemessagesenttime, receivepersonid, sentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [privatemessagereceiveperson_user, privatemessagesentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, privatemessagesentperson_user_idx, privatemessagereceiveperson_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentShare
 INFO (TableMetadata.java:66) HHH000037: Columns: [sentshareid, sentsharetime, shareid, sentsharereceiveid, sharename, ischecked, sentsharesentpersonid, sentshareusername]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [sentshare_share, sentsharesentperson_user, sentsharereceive_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [sentshare_share_idx, sentshare_user_idx, sentshare_user_idx1, primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentTransaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionname, senttransactiontime, transactionid, receivetransactionpersonid, transactionstate, senttransactionid, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [senttransactionreceiveperson_user, senttransaction_transaction, senttransactionsentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [senttransaction_user_idx, primary, senttransactionreceiveperson_user_idx, senttransaction_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_share
 INFO (TableMetadata.java:66) HHH000037: Columns: [folderid, sentsharetime, sharepassword, shareaddress, issecretshare, shareid, filetype, fileid, sharename, sentsharesentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [fk_t_share_t_user1]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, fk_t_share_t_user1_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [senttransactiontime, transactionname, transactionid, transactionattachmentaddress, transactioncontent, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transaction_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transaction_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transactionMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionmessagesenttime, transactionmessagesentcontent, transactionid, userid, transactionmessageid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transactionmessage_transaction, transactionmessage_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transactionmessage_user_idx, transactionmessage_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_user
 INFO (TableMetadata.java:66) HHH000037: Columns: [userusedspace, userspacesize, userpassword, username, departmentid, usersex, userid, userheadportrait, usertelephone, usermailbox, userauthority, userskin]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [user_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [user_department_idx, primary]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
 INFO (SchemaUpdate.java:240) HHH000232: Schema update complete
DEBUG (SessionFactoryImpl.java:1021) Checking 0 named HQL queries
DEBUG (SessionFactoryImpl.java:1044) Checking 0 named SQL queries
DEBUG (StatisticsInitiator.java:110) Statistics initialized [enabled=false]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;baseDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;fileDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;fileDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.FileDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;fileDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;fileDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;fileDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;fileDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.TAuthorizationDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;TAuthorizationDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;TAuthorizationDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;TAuthorizationDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;login&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;login&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;login&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.UserServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userService&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userService&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionAdvice&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionManager&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionManager&apos;
 INFO (HibernateTransactionManager.java:268) Using DataSource [{
	CreateTime:&quot;2015-05-15 10:49:44&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:22862353, ConnectTime:&quot;2015-05-15 10:49:45&quot;, UseCount:2, LastActiveTime:&quot;2015-05-15 10:49:45&quot;}
	]
}] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [move*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [repair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [deleteAndRepair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [find*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [load*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [search*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [datagrid*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;userService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.UserServiceImpl@d57fc7]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;userService&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.TokenServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;tokenService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;tokenService&apos;: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;tokenService&apos; to bean named &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;tokenService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.TokenServiceImpl@b8020b]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;tokenService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;login&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personal&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Personal]: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personal&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personal&apos;: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personFile&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;fileDao&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;personFile&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.personal.impl.PersonFileServiceImpl@152f7bf]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personFile&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personal&apos; to bean named &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userService&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;timeTask&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;timeTask&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractApplicationContext.java:850) Unable to locate LifecycleProcessor with name &apos;lifecycleProcessor&apos;: using default [org.springframework.context.support.DefaultLifecycleProcessor@75ad3]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;lifecycleProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
</system-out>
  </testcase>
  <testcase time="1.154" classname="com.bigroad.dao.impl.FileDaoImplTest" name="testgetAllChildMethod">
    <error message="No Session found for current thread" type="org.hibernate.HibernateException">org.hibernate.HibernateException: No Session found for current thread
	at org.springframework.orm.hibernate4.SpringSessionContext.currentSession(SpringSessionContext.java:97)
	at org.hibernate.internal.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:941)
	at com.bigroad.dao.impl.BaseDaoImpl.getCurrentSession(BaseDaoImpl.java:28)
	at com.bigroad.dao.impl.BaseDaoImpl.get(BaseDaoImpl.java:52)
	at com.bigroad.dao.impl.FileDaoImpl.getTfileByID(FileDaoImpl.java:127)
	at com.bigroad.dao.impl.FileDaoImpl.getAllChildFile(FileDaoImpl.java:134)
	at com.bigroad.dao.impl.FileDaoImplTest.testgetAllChildMethod(FileDaoImplTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (AbstractApplicationContext.java:500) Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@fda72a: startup date [Fri May 15 10:49:45 CST 2015]; root of context hierarchy
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:140) Loading schema mappings from [META-INF/spring.schemas]
DEBUG (PluggableSchemaResolver.java:146) Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (DefaultNamespaceHandlerResolver.java:156) Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\control] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\enterprise] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\information] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\letter] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\transaction] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/*/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\FileDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\UserDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl\TokenServiceImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\BaseDAOI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\DepartmentDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\FileDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\DepartmentDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\SentShareDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TokenTimerUpDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\SentShareDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\TAuthorizationDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\UserDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\CloudFileCon.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\Test.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileShareI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\TokenServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\UserServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\Command.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\FreshToken.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\JinTask.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MD5Check.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\PageResults.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\RowMapper.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\TokenProcessor.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\UserToken.class]]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class]
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 16 bean definitions from location pattern [spring.xml]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring-hibernate.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-2.5.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;dataSource&apos; as bean name and [] as aliases
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;transactionManager&apos; as bean name and [] as aliases
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 7 bean definitions from location pattern [spring-hibernate.xml]
DEBUG (AbstractApplicationContext.java:530) Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@fda72a: org.springframework.beans.factory.support.DefaultListableBeanFactory@7cfb62: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0]; root of factory hierarchy
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (MutablePropertySources.java:104) Adding [environmentProperties] PropertySource with lowest search precedence
 INFO (PropertiesLoaderSupport.java:177) Loading properties file from class path resource [config.properties]
DEBUG (MutablePropertySources.java:104) Adding [localProperties] PropertySource with lowest search precedence
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_url&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_url&apos; in [localProperties] with type [String] and value &apos;jdbc:mysql://172.31.34.115:3306/CloudFiles??useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_username&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_username&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_password&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_password&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;validationQuery&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;validationQuery&apos; in [localProperties] with type [String] and value &apos;SELECT 1&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.format_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.format_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.show_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.show_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.dialect&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.dialect&apos; in [localProperties] with type [String] and value &apos;org.hibernate.dialect.MySQLDialect&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.hbm2ddl.auto&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties] with type [String] and value &apos;update&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractApplicationContext.java:799) Unable to locate MessageSource with name &apos;messageSource&apos;: using default [org.springframework.context.support.DelegatingMessageSource@179cd9c]
DEBUG (AbstractApplicationContext.java:823) Unable to locate ApplicationEventMulticaster with name &apos;applicationEventMulticaster&apos;: using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1a9fb12]
 INFO (DefaultListableBeanFactory.java:581) Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7cfb62: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;baseDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.BaseDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;baseDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;baseDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;sessionFactory&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;dataSource&apos; to allow for resolving potential circular references
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
ERROR (DruidAbstractDataSource.java:935) maxIdle is deprecated
DEBUG (AbstractAutowireCapableBeanFactory.java:1555) Invoking init method  &apos;init&apos; on bean with name &apos;dataSource&apos;
 INFO (DruidDataSource.java:669) {dataSource-3} inited
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;sessionFactory&apos;
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration numeric_boolean -&gt; org.hibernate.type.NumericBooleanType@fecba2
DEBUG (BasicTypeRegistry.java:143) Adding type registration true_false -&gt; org.hibernate.type.TrueFalseType@801853
DEBUG (BasicTypeRegistry.java:143) Adding type registration yes_no -&gt; org.hibernate.type.YesNoType@f73e09
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration char -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration int -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_decimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigDecimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_integer -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigInteger -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration string -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.String -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration url -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.net.URL -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Date -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration dbtimestamp -&gt; org.hibernate.type.DbTimestampType@242102
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.GregorianCalendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar_date -&gt; org.hibernate.type.CalendarDateType@1efedd5
DEBUG (BasicTypeRegistry.java:143) Adding type registration locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration timezone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.TimeZone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-binary -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.UUID -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-char -&gt; org.hibernate.type.UUIDCharType@168bc8d
DEBUG (BasicTypeRegistry.java:143) Adding type registration pg-uuid -&gt; org.hibernate.type.PostgresUUIDType@12e827b
DEBUG (BasicTypeRegistry.java:143) Adding type registration binary -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte[] -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration [B -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-binary -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration Byte[] -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Byte; -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration image -&gt; org.hibernate.type.ImageType@1c5acda
DEBUG (BasicTypeRegistry.java:143) Adding type registration characters -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration char[] -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration [C -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-characters -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Character; -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration Character[] -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration text -&gt; org.hibernate.type.TextType@ac86bb
DEBUG (BasicTypeRegistry.java:143) Adding type registration blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_blob -&gt; org.hibernate.type.MaterializedBlobType@7780c2
DEBUG (BasicTypeRegistry.java:143) Adding type registration clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_clob -&gt; org.hibernate.type.MaterializedClobType@13a2cd7
DEBUG (BasicTypeRegistry.java:143) Adding type registration serializable -&gt; org.hibernate.type.SerializableType@33ee9b
DEBUG (BasicTypeRegistry.java:143) Adding type registration object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_date -&gt; org.hibernate.type.AdaptedImmutableType@1174b0a
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_time -&gt; org.hibernate.type.AdaptedImmutableType@3f98c1
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_timestamp -&gt; org.hibernate.type.AdaptedImmutableType@145ad2f
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_dbtimestamp -&gt; org.hibernate.type.AdaptedImmutableType@16cfac0
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar -&gt; org.hibernate.type.AdaptedImmutableType@1c26da0
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar_date -&gt; org.hibernate.type.AdaptedImmutableType@1ab3ff9
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_binary -&gt; org.hibernate.type.AdaptedImmutableType@1f51410
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_serializable -&gt; org.hibernate.type.AdaptedImmutableType@f8421c
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid2] -&gt; [org.hibernate.id.UUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [guid] -&gt; [org.hibernate.id.GUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid.hex] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [hilo] -&gt; [org.hibernate.id.TableHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [assigned] -&gt; [org.hibernate.id.Assigned]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [identity] -&gt; [org.hibernate.id.IdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [select] -&gt; [org.hibernate.id.SelectGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence] -&gt; [org.hibernate.id.SequenceGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [seqhilo] -&gt; [org.hibernate.id.SequenceHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [increment] -&gt; [org.hibernate.id.IncrementGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [foreign] -&gt; [org.hibernate.id.ForeignGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence-identity] -&gt; [org.hibernate.id.SequenceIdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-sequence] -&gt; [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-table] -&gt; [org.hibernate.id.enhanced.TableGenerator]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/model/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class]]
DEBUG (IntegratorServiceImpl.java:59) Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG (Configuration.java:1735) Preparing to build session factory with filters : {}
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TAuthorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TAuthorization
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TAuthorization on table T_authorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=userId, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=token, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property token with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for token
DEBUG (PropertyBinder.java:259) Building property token
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=updateDate, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property updateDate with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for updateDate
DEBUG (PropertyBinder.java:259) Building property updateDate
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TCompany
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TCompany
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TCompany on table T_company
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyId
DEBUG (PropertyBinder.java:259) Building property companyId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyAddress
DEBUG (PropertyBinder.java:259) Building property companyAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyName
DEBUG (PropertyBinder.java:259) Building property companyName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyPassword
DEBUG (PropertyBinder.java:259) Building property companyPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companySpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companySpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companySpaceSize
DEBUG (PropertyBinder.java:259) Building property companySpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyUsedSpace
DEBUG (PropertyBinder.java:259) Building property companyUsedSpace
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkMan, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkMan with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkMan
DEBUG (PropertyBinder.java:259) Building property linkMan
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkManTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkManTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkManTelephone
DEBUG (PropertyBinder.java:259) Building property linkManTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=logoAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property logoAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for logoAddress
DEBUG (PropertyBinder.java:259) Building property logoAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=organizationCode, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property organizationCode with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for organizationCode
DEBUG (PropertyBinder.java:259) Building property organizationCode
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartment
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartment on table T_department
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentId
DEBUG (PropertyBinder.java:259) Building property departmentId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TUsers_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TUsers
DEBUG (PropertyBinder.java:259) Building property TUsers
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentDescription, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentDescription with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentDescription
DEBUG (PropertyBinder.java:259) Building property departmentDescription
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentName
DEBUG (PropertyBinder.java:259) Building property departmentName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentSpaceSize
DEBUG (PropertyBinder.java:259) Building property departmentSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentUsedSpace
DEBUG (PropertyBinder.java:259) Building property departmentUsedSpace
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartmentOperation
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartmentOperation on table T_departmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationId
DEBUG (PropertyBinder.java:259) Building property departmentOperationId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationAuthorityID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationAuthorityId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationAuthorityId
DEBUG (PropertyBinder.java:259) Building property departmentOperationAuthorityId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDraft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDraft
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDraft on table T_draft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftId
DEBUG (PropertyBinder.java:259) Building property draftId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;draftPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftNewTime
DEBUG (PropertyBinder.java:259) Building property draftNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftTransactionID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftTransactionId
DEBUG (PropertyBinder.java:259) Building property draftTransactionId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TFile
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TFile on table T_file
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileDepartmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;folderID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileUserID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileAttribute, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileAttribute with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileAttribute
DEBUG (PropertyBinder.java:259) Building property fileAttribute
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileExtension, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileExtension with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileExtension
DEBUG (PropertyBinder.java:259) Building property fileExtension
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileMD5, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileMd5 with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileMd5
DEBUG (PropertyBinder.java:259) Building property fileMd5
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileName
DEBUG (PropertyBinder.java:259) Building property fileName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileNewTime
DEBUG (PropertyBinder.java:259) Building property fileNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePath
DEBUG (PropertyBinder.java:259) Building property filePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePrimaryPath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePrimaryPath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePrimaryPath
DEBUG (PropertyBinder.java:259) Building property filePrimaryPath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileSize
DEBUG (PropertyBinder.java:259) Building property fileSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileStoragePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileStoragePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileStoragePath
DEBUG (PropertyBinder.java:259) Building property fileStoragePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileType, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileType with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileType
DEBUG (PropertyBinder.java:259) Building property fileType
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TPrivateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TPrivateMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TPrivateMessage on table T_privateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageId
DEBUG (PropertyBinder.java:259) Building property privateMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receivePersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserByReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserBySentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentContent
DEBUG (PropertyBinder.java:259) Building property privateMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentTime
DEBUG (PropertyBinder.java:259) Building property privateMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentShare on table T_sentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareId
DEBUG (PropertyBinder.java:259) Building property sentShareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;shareID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareReceiveID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=isChecked, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isChecked with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isChecked
DEBUG (PropertyBinder.java:259) Building property isChecked
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareUserName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareUserName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareUserName
DEBUG (PropertyBinder.java:259) Building property sentShareUserName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentTransaction on table T_sentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionId
DEBUG (PropertyBinder.java:259) Building property sentTransactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receiveTransactionPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserByReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentTransactioncolPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserBySentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionTime
DEBUG (PropertyBinder.java:259) Building property sentTransactionTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=transactionState, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionState with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionState
DEBUG (PropertyBinder.java:259) Building property transactionState
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TShare on table T_share
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareId
DEBUG (PropertyBinder.java:259) Building property shareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TShare.TSentShares
DEBUG (PropertyBinder.java:259) Building property TSentShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=fileID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=filetype, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filetype with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filetype
DEBUG (PropertyBinder.java:259) Building property filetype
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=folderID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property folderId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for folderId
DEBUG (PropertyBinder.java:259) Building property folderId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=isSecretShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isSecretShare with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isSecretShare
DEBUG (PropertyBinder.java:259) Building property isSecretShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareAddress
DEBUG (PropertyBinder.java:259) Building property shareAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sharePassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sharePassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sharePassword
DEBUG (PropertyBinder.java:259) Building property sharePassword
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransaction on table T_transaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionId
DEBUG (PropertyBinder.java:259) Building property transactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactions_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (PropertyBinder.java:259) Building property TSentTransactions
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionAttachmentAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionAttachmentAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionAttachmentAddress
DEBUG (PropertyBinder.java:259) Building property transactionAttachmentAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionContent
DEBUG (PropertyBinder.java:259) Building property transactionContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionName
DEBUG (PropertyBinder.java:259) Building property transactionName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransactionMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransactionMessage on table T_transactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageId
DEBUG (PropertyBinder.java:259) Building property transactionMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;userID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentContent
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentTime
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TUser
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TUser on table T_user
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDrafts_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TDrafts
DEBUG (PropertyBinder.java:259) Building property TDrafts
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForReceivePersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareReceiveId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForReceiveTransactionPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForSentTransactioncolPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForSentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TShares
DEBUG (PropertyBinder.java:259) Building property TShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userAuthority, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userAuthority with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userAuthority
DEBUG (PropertyBinder.java:259) Building property userAuthority
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userHeadportrait, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userHeadportrait with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userHeadportrait
DEBUG (PropertyBinder.java:259) Building property userHeadportrait
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userMailbox, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userMailbox with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userMailbox
DEBUG (PropertyBinder.java:259) Building property userMailbox
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userName
DEBUG (PropertyBinder.java:259) Building property userName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userPassword
DEBUG (PropertyBinder.java:259) Building property userPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSex, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSex with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSex
DEBUG (PropertyBinder.java:259) Building property userSex
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSkin, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSkin with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSkin
DEBUG (PropertyBinder.java:259) Building property userSkin
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSpaceSize
DEBUG (PropertyBinder.java:259) Building property userSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userTelephone
DEBUG (PropertyBinder.java:259) Building property userTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userUsedSpace
DEBUG (PropertyBinder.java:259) Building property userUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for token
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for updateDate
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companySpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkMan
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkManTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for logoAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for organizationCode
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentDescription
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationAuthorityId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileAttribute
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileExtension
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileMd5
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePrimaryPath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileStoragePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileType
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isChecked
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareUserName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionState
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filetype
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for folderId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isSecretShare
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sharePassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionAttachmentAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userAuthority
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userHeadportrait
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userMailbox
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSex
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSkin
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userUsedSpace
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileDepartmentID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TUsers through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TUsers -&gt; T_user
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TUser.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TUser
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: folderID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TShare.TSentShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TShare.TSentShares -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TShare
DEBUG (CollectionSecondPass.java:80) Mapped collection key: shareID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TSentTransactions through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TSentTransactions -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TDrafts through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TDrafts -&gt; T_draft
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDraft.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: draftPersonID, one-to-many: com.bigroad.model.db.TDraft
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileUserID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserByReceivePersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receivePersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserBySentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentPersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareReceiveId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareReceiveID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareSentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserByReceiveTransactionPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receiveTransactionPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserBySentTransactioncolPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentTransactioncolPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TShares -&gt; T_share
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TShare.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: userID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (JdbcServicesImpl.java:121) Database -&gt;
       name : MySQL
    version : 5.5.41-0ubuntu0.14.04.1
      major : 5
      minor : 5
DEBUG (JdbcServicesImpl.java:127) Driver -&gt;
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.34 ( Revision: jess.balint@oracle.com-20141014163213-wqbwpf1ok2kvo1om )
      major : 5
      minor : 1
DEBUG (JdbcServicesImpl.java:133) JDBC version : 4.0
 INFO (Dialect.java:125) HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG (SettingsFactory.java:102) Automatic flush during beforeCompletion(): disabled
DEBUG (SettingsFactory.java:108) Automatic session close at end of transaction: disabled
DEBUG (SettingsFactory.java:119) JDBC batch size: 15
DEBUG (SettingsFactory.java:125) JDBC batch updates for versioned data: disabled
DEBUG (SettingsFactory.java:135) Scrollable result sets: enabled
DEBUG (SettingsFactory.java:141) Wrap result sets: disabled
DEBUG (SettingsFactory.java:147) JDBC3 getGeneratedKeys(): enabled
DEBUG (SettingsFactory.java:159) multi-tenancy strategy : NONE
DEBUG (SettingsFactory.java:165) Connection release mode: auto
 INFO (TransactionFactoryInitiator.java:68) HHH000399: Using default transaction strategy (direct JDBC transactions)
DEBUG (SettingsFactory.java:201) Maximum outer join fetch depth: 2
DEBUG (SettingsFactory.java:207) Default batch fetch size: 1
DEBUG (SettingsFactory.java:213) Generate SQL with comments: disabled
DEBUG (SettingsFactory.java:219) Order SQL updates by primary key: disabled
DEBUG (SettingsFactory.java:225) Order SQL inserts for batching: disabled
DEBUG (SettingsFactory.java:450) Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
 INFO (ASTQueryTranslatorFactory.java:48) HHH000397: Using ASTQueryTranslatorFactory
DEBUG (SettingsFactory.java:235) Query language substitutions: {}
DEBUG (SettingsFactory.java:241) JPA-QL strict compliance: disabled
DEBUG (SettingsFactory.java:249) Second-level cache: enabled
DEBUG (SettingsFactory.java:255) Query cache: disabled
DEBUG (SettingsFactory.java:390) Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG (SettingsFactory.java:400) org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
DEBUG (SettingsFactory.java:270) Optimize cache for minimal puts: disabled
DEBUG (SettingsFactory.java:285) Structured second-level cache entries: disabled
DEBUG (SettingsFactory.java:294) Statistics: disabled
DEBUG (SettingsFactory.java:300) Deleted entity synthetic identifier rollback: disabled
DEBUG (SettingsFactory.java:324) Default entity-mode: pojo
DEBUG (SettingsFactory.java:330) Named query checking : enabled
DEBUG (SettingsFactory.java:336) Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG (SessionFactoryImpl.java:223) Building session factory
DEBUG (SessionFactoryImpl.java:275) Session factory constructed with filter configurations : {}
DEBUG (SessionFactoryImpl.java:276) Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin, java.vm.version=21.0-b17, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\eclipse_yjs_all\20150515\cloudfiles, java.runtime.version=1.7.0-b147, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=F:\eclipse_yjs_all\20150515\cloudfiles, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar, java.io.tmpdir=C:\Users\LIUHON~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=GBK, java.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0/bin/../jre/lib/i386;C:\Program Files\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.7.0\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Common Files\Thunder Network\KanKan\Codecs;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;D:\20129162336\ration rose\rr2\common;c:\Program Files\Common Files\Ulead Systems\MPEG;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;D:\20129162336\TortoiseSVN\bin;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\runtime\win32;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\bin;C:\Program Files\Cracklock\Bin;D:\20129162336\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;., hibernate.connection.datasource={
	CreateTime:&quot;2015-05-15 10:49:45&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:3616494, ConnectTime:&quot;2015-05-15 10:49:46&quot;, UseCount:1, LastActiveTime:&quot;2015-05-15 10:49:46&quot;}
	]
}, surefire.test.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\liuhonghua, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=GBK, hibernate.format_sql=true, user.name=liuhonghua, java.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@12940b3, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0\jre, sun.java.command=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire4193884015818501124tmp F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire_05322085908533930276tmp, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0, java.ext.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\liuhonghua\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionID from CloudFiles.T_transaction where transactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionID, ttransacti_.transactionAttachmentAddress as transact2_62_, ttransacti_.transactionContent as transact3_62_, ttransacti_.transactionName as transact4_62_ from CloudFiles.T_transaction ttransacti_ where ttransacti_.transactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transaction (transactionAttachmentAddress, transactionContent, transactionName, transactionID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transaction set transactionAttachmentAddress=?, transactionContent=?, transactionName=? where transactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transaction where transactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TFile
DEBUG (AbstractEntityPersister.java:3491)  Version select: select fileID from CloudFiles.T_file where fileID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tfile_.fileID, tfile_.fileDepartmentID as fileDep12_57_, tfile_.folderID as folderID57_, tfile_.fileUserID as fileUserID57_, tfile_.fileAttribute as fileAttr2_57_, tfile_.fileExtension as fileExte3_57_, tfile_.fileMD5 as fileMD4_57_, tfile_.fileName as fileName57_, tfile_.fileNewTime as fileNewT6_57_, tfile_.filePath as filePath57_, tfile_.filePrimaryPath as filePrim8_57_, tfile_.fileSize as fileSize57_, tfile_.fileStoragePath as fileSto10_57_, tfile_.fileType as fileType57_ from CloudFiles.T_file tfile_ where tfile_.fileID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_file (fileDepartmentID, folderID, fileUserID, fileAttribute, fileExtension, fileMD5, fileName, fileNewTime, filePath, filePrimaryPath, fileSize, fileStoragePath, fileType, fileID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_file set fileDepartmentID=?, folderID=?, fileUserID=?, fileAttribute=?, fileExtension=?, fileMD5=?, fileName=?, fileNewTime=?, filePath=?, filePrimaryPath=?, fileSize=?, fileStoragePath=?, fileType=? where fileID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_file where fileID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDraft
DEBUG (AbstractEntityPersister.java:3491)  Version select: select draftID from CloudFiles.T_draft where draftID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdraft_.draftID, tdraft_.draftPersonID as draftPer4_56_, tdraft_.draftNewTime as draftNew2_56_, tdraft_.draftTransactionID as draftTra3_56_ from CloudFiles.T_draft tdraft_ where tdraft_.draftID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_draft (draftPersonID, draftNewTime, draftTransactionID, draftID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_draft set draftPersonID=?, draftNewTime=?, draftTransactionID=? where draftID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_draft where draftID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select shareID from CloudFiles.T_share where shareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tshare_.shareID, tshare_.sentShareSentPersonID as sentSha10_61_, tshare_.fileID as fileID61_, tshare_.filetype as filetype61_, tshare_.folderID as folderID61_, tshare_.isSecretShare as isSecret5_61_, tshare_.sentShareTime as sentShar6_61_, tshare_.shareAddress as shareAdd7_61_, tshare_.shareName as shareName61_, tshare_.sharePassword as sharePas9_61_ from CloudFiles.T_share tshare_ where tshare_.shareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_share (sentShareSentPersonID, fileID, filetype, folderID, isSecretShare, sentShareTime, shareAddress, shareName, sharePassword, shareID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_share set sentShareSentPersonID=?, fileID=?, filetype=?, folderID=?, isSecretShare=?, sentShareTime=?, shareAddress=?, shareName=?, sharePassword=? where shareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_share where shareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TAuthorization
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userId from CloudFiles.T_authorization where userId =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tauthoriza_.userId, tauthoriza_.token as token52_, tauthoriza_.updateDate as updateDate52_ from CloudFiles.T_authorization tauthoriza_ where tauthoriza_.userId=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_authorization (token, updateDate, userId) values (?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_authorization set token=?, updateDate=? where userId=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_authorization where userId=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartmentOperation
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentOperationID from CloudFiles.T_departmentOperation where departmentOperationID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentOperationID, tdepartmen_.departmentID as departme3_55_, tdepartmen_.fileID as fileID55_, tdepartmen_.departmentOperationAuthorityID as departme2_55_ from CloudFiles.T_departmentOperation tdepartmen_ where tdepartmen_.departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_departmentOperation (departmentID, fileID, departmentOperationAuthorityID, departmentOperationID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_departmentOperation set departmentID=?, fileID=?, departmentOperationAuthorityID=? where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_departmentOperation where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentShareID from CloudFiles.T_sentShare where sentShareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsentshare_.sentShareID, tsentshare_.shareID as shareID59_, tsentshare_.sentShareReceiveID as sentShar7_59_, tsentshare_.sentShareSentPersonID as sentShar8_59_, tsentshare_.isChecked as isChecked59_, tsentshare_.sentShareTime as sentShar3_59_, tsentshare_.sentShareUserName as sentShar4_59_, tsentshare_.shareName as shareName59_ from CloudFiles.T_sentShare tsentshare_ where tsentshare_.sentShareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentShare (shareID, sentShareReceiveID, sentShareSentPersonID, isChecked, sentShareTime, sentShareUserName, shareName, sentShareID) values (?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentShare set shareID=?, sentShareReceiveID=?, sentShareSentPersonID=?, isChecked=?, sentShareTime=?, sentShareUserName=?, shareName=? where sentShareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentShare where sentShareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentTransactionID from CloudFiles.T_sentTransaction where sentTransactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsenttrans_.sentTransactionID, tsenttrans_.transactionID as transact4_60_, tsenttrans_.receiveTransactionPersonID as receiveT5_60_, tsenttrans_.sentTransactioncolPersonID as sentTran6_60_, tsenttrans_.sentTransactionTime as sentTran2_60_, tsenttrans_.transactionState as transact3_60_ from CloudFiles.T_sentTransaction tsenttrans_ where tsenttrans_.sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentTransaction (transactionID, receiveTransactionPersonID, sentTransactioncolPersonID, sentTransactionTime, transactionState, sentTransactionID) values (?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentTransaction set transactionID=?, receiveTransactionPersonID=?, sentTransactioncolPersonID=?, sentTransactionTime=?, transactionState=? where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentTransaction where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransactionMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionMessageID from CloudFiles.T_transactionMessage where transactionMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionMessageID, ttransacti_.transactionID as transact4_63_, ttransacti_.userID as userID63_, ttransacti_.transactionMessageSentContent as transact2_63_, ttransacti_.transactionMessageSentTime as transact3_63_ from CloudFiles.T_transactionMessage ttransacti_ where ttransacti_.transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transactionMessage (transactionID, userID, transactionMessageSentContent, transactionMessageSentTime, transactionMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transactionMessage set transactionID=?, userID=?, transactionMessageSentContent=?, transactionMessageSentTime=? where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transactionMessage where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartment
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentID from CloudFiles.T_department where departmentID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentID, tdepartmen_.departmentDescription as departme2_54_, tdepartmen_.departmentName as departme3_54_, tdepartmen_.departmentSpaceSize as departme4_54_, tdepartmen_.departmentUsedSpace as departme5_54_ from CloudFiles.T_department tdepartmen_ where tdepartmen_.departmentID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_department (departmentDescription, departmentName, departmentSpaceSize, departmentUsedSpace, departmentID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_department set departmentDescription=?, departmentName=?, departmentSpaceSize=?, departmentUsedSpace=? where departmentID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_department where departmentID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TUser
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userID from CloudFiles.T_user where userID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tuser_.userID, tuser_.departmentID as departm12_64_, tuser_.userAuthority as userAuth2_64_, tuser_.userHeadportrait as userHead3_64_, tuser_.userMailbox as userMail4_64_, tuser_.userName as userName64_, tuser_.userPassword as userPass6_64_, tuser_.userSex as userSex64_, tuser_.userSkin as userSkin64_, tuser_.userSpaceSize as userSpac9_64_, tuser_.userTelephone as userTel10_64_, tuser_.userUsedSpace as userUse11_64_ from CloudFiles.T_user tuser_ where tuser_.userID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_user (departmentID, userAuthority, userHeadportrait, userMailbox, userName, userPassword, userSex, userSkin, userSpaceSize, userTelephone, userUsedSpace, userID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_user set departmentID=?, userAuthority=?, userHeadportrait=?, userMailbox=?, userName=?, userPassword=?, userSex=?, userSkin=?, userSpaceSize=?, userTelephone=?, userUsedSpace=? where userID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_user where userID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TPrivateMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select privateMessageID from CloudFiles.T_privateMessage where privateMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tprivateme_.privateMessageID, tprivateme_.receivePersonID as receiveP4_58_, tprivateme_.sentPersonID as sentPers5_58_, tprivateme_.privateMessageSentContent as privateM2_58_, tprivateme_.privateMessageSentTime as privateM3_58_ from CloudFiles.T_privateMessage tprivateme_ where tprivateme_.privateMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_privateMessage (receivePersonID, sentPersonID, privateMessageSentContent, privateMessageSentTime, privateMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_privateMessage set receivePersonID=?, sentPersonID=?, privateMessageSentContent=?, privateMessageSentTime=? where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_privateMessage where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TCompany
DEBUG (AbstractEntityPersister.java:3491)  Version select: select companyID from CloudFiles.T_company where companyID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tcompany_.companyID, tcompany_.companyAddress as companyA2_53_, tcompany_.companyName as companyN3_53_, tcompany_.companyPassword as companyP4_53_, tcompany_.companySpaceSize as companyS5_53_, tcompany_.companyUsedSpace as companyU6_53_, tcompany_.linkMan as linkMan53_, tcompany_.linkManTelephone as linkManT8_53_, tcompany_.logoAddress as logoAddr9_53_, tcompany_.organizationCode as organiz10_53_ from CloudFiles.T_company tcompany_ where tcompany_.companyID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_company (companyAddress, companyName, companyPassword, companySpaceSize, companyUsedSpace, linkMan, linkManTelephone, logoAddress, organizationCode, companyID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_company set companyAddress=?, companyName=?, companyPassword=?, companySpaceSize=?, companyUsedSpace=?, linkMan=?, linkManTelephone=?, logoAddress=?, organizationCode=? where companyID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_company where companyID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileDepartmentID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_user set departmentID=? where userID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_user set departmentID=null where departmentID=? and userID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_user set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_draft set draftPersonID=? where draftID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=? and draftID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set sentPersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set transactionID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set userID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set userID=null where userID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set userID=null where userID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_share set sentShareSentPersonID=? where shareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=? and shareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set departmentID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareReceiveID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareSentPersonID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set fileID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set shareID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set shareID=null where shareID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set shareID=null where shareID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set transactionID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileUserID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileUserID=null where fileUserID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileUserID=null where fileUserID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set receivePersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set folderID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set folderID=null where folderID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set folderID=null where folderID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [NONE]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [READ]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE_NOWAIT]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [FORCE]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_READ]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_WRITE]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_62_0_, ttransacti0_.transactionAttachmentAddress as transact2_62_0_, ttransacti0_.transactionContent as transact3_62_0_, ttransacti0_.transactionName as transact4_62_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [NONE]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [READ]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE_NOWAIT]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [FORCE]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_READ]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_WRITE]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID57_0_, tfile0_.fileDepartmentID as fileDep12_57_0_, tfile0_.folderID as folderID57_0_, tfile0_.fileUserID as fileUserID57_0_, tfile0_.fileAttribute as fileAttr2_57_0_, tfile0_.fileExtension as fileExte3_57_0_, tfile0_.fileMD5 as fileMD4_57_0_, tfile0_.fileName as fileName57_0_, tfile0_.fileNewTime as fileNewT6_57_0_, tfile0_.filePath as filePath57_0_, tfile0_.filePrimaryPath as filePrim8_57_0_, tfile0_.fileSize as fileSize57_0_, tfile0_.fileStoragePath as fileSto10_57_0_, tfile0_.fileType as fileType57_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [NONE]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [READ]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE_NOWAIT]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [FORCE]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_READ]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_WRITE]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID56_0_, tdraft0_.draftPersonID as draftPer4_56_0_, tdraft0_.draftNewTime as draftNew2_56_0_, tdraft0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [NONE]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [READ]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE_NOWAIT]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [FORCE]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_READ]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_WRITE]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID61_0_, tshare0_.sentShareSentPersonID as sentSha10_61_0_, tshare0_.fileID as fileID61_0_, tshare0_.filetype as filetype61_0_, tshare0_.folderID as folderID61_0_, tshare0_.isSecretShare as isSecret5_61_0_, tshare0_.sentShareTime as sentShar6_61_0_, tshare0_.shareAddress as shareAdd7_61_0_, tshare0_.shareName as shareName61_0_, tshare0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [NONE]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [READ]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE_NOWAIT]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [FORCE]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_READ]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_WRITE]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId52_0_, tauthoriza0_.token as token52_0_, tauthoriza0_.updateDate as updateDate52_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [NONE]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [READ]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE_NOWAIT]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [FORCE]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_READ]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [NONE]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [READ]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE_NOWAIT]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [FORCE]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_READ]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_WRITE]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [NONE]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [READ]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE_NOWAIT]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [FORCE]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_READ]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_WRITE]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [NONE]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [READ]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE_NOWAIT]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [FORCE]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_READ]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_WRITE]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [NONE]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [READ]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE_NOWAIT]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [FORCE]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_READ]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_54_0_, tdepartmen0_.departmentDescription as departme2_54_0_, tdepartmen0_.departmentName as departme3_54_0_, tdepartmen0_.departmentSpaceSize as departme4_54_0_, tdepartmen0_.departmentUsedSpace as departme5_54_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [NONE]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [READ]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE_NOWAIT]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [FORCE]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_READ]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_WRITE]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID64_0_, tuser0_.departmentID as departm12_64_0_, tuser0_.userAuthority as userAuth2_64_0_, tuser0_.userHeadportrait as userHead3_64_0_, tuser0_.userMailbox as userMail4_64_0_, tuser0_.userName as userName64_0_, tuser0_.userPassword as userPass6_64_0_, tuser0_.userSex as userSex64_0_, tuser0_.userSkin as userSkin64_0_, tuser0_.userSpaceSize as userSpac9_64_0_, tuser0_.userTelephone as userTel10_64_0_, tuser0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [NONE]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [READ]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE_NOWAIT]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [FORCE]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_READ]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_WRITE]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [NONE]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [READ]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE_NOWAIT]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [FORCE]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_READ]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_WRITE]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID53_0_, tcompany0_.companyAddress as companyA2_53_0_, tcompany0_.companyName as companyN3_53_0_, tcompany0_.companyPassword as companyP4_53_0_, tcompany0_.companySpaceSize as companyS5_53_0_, tcompany0_.companyUsedSpace as companyU6_53_0_, tcompany0_.linkMan as linkMan53_0_, tcompany0_.linkManTelephone as linkManT8_53_0_, tcompany0_.logoAddress as logoAddr9_53_0_, tcompany0_.organizationCode as organiz10_53_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TFiles: select tfiles0_.fileDepartmentID as fileDep12_54_1_, tfiles0_.fileID as fileID57_1_, tfiles0_.fileID as fileID57_0_, tfiles0_.fileDepartmentID as fileDep12_57_0_, tfiles0_.folderID as folderID57_0_, tfiles0_.fileUserID as fileUserID57_0_, tfiles0_.fileAttribute as fileAttr2_57_0_, tfiles0_.fileExtension as fileExte3_57_0_, tfiles0_.fileMD5 as fileMD4_57_0_, tfiles0_.fileName as fileName57_0_, tfiles0_.fileNewTime as fileNewT6_57_0_, tfiles0_.filePath as filePath57_0_, tfiles0_.filePrimaryPath as filePrim8_57_0_, tfiles0_.fileSize as fileSize57_0_, tfiles0_.fileStoragePath as fileSto10_57_0_, tfiles0_.fileType as fileType57_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileDepartmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TUsers: select tusers0_.departmentID as departm12_54_1_, tusers0_.userID as userID64_1_, tusers0_.userID as userID64_0_, tusers0_.departmentID as departm12_64_0_, tusers0_.userAuthority as userAuth2_64_0_, tusers0_.userHeadportrait as userHead3_64_0_, tusers0_.userMailbox as userMail4_64_0_, tusers0_.userName as userName64_0_, tusers0_.userPassword as userPass6_64_0_, tusers0_.userSex as userSex64_0_, tusers0_.userSkin as userSkin64_0_, tusers0_.userSpaceSize as userSpac9_64_0_, tusers0_.userTelephone as userTel10_64_0_, tusers0_.userUsedSpace as userUse11_64_0_ from CloudFiles.T_user tusers0_ where tusers0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TDrafts: select tdrafts0_.draftPersonID as draftPer4_64_1_, tdrafts0_.draftID as draftID56_1_, tdrafts0_.draftID as draftID56_0_, tdrafts0_.draftPersonID as draftPer4_56_0_, tdrafts0_.draftNewTime as draftNew2_56_0_, tdrafts0_.draftTransactionID as draftTra3_56_0_ from CloudFiles.T_draft tdrafts0_ where tdrafts0_.draftPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId: select tprivateme0_.sentPersonID as sentPers5_64_1_, tprivateme0_.privateMessageID as privateM1_58_1_, tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.sentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId: select tsenttrans0_.receiveTransactionPersonID as receiveT5_64_1_, tsenttrans0_.sentTransactionID as sentTran1_60_1_, tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.receiveTransactionPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TTransactionMessages: select ttransacti0_.transactionID as transact4_62_1_, ttransacti0_.transactionMessageID as transact1_63_1_, ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TTransactionMessages: select ttransacti0_.userID as userID64_1_, ttransacti0_.transactionMessageID as transact1_63_1_, ttransacti0_.transactionMessageID as transact1_63_0_, ttransacti0_.transactionID as transact4_63_0_, ttransacti0_.userID as userID63_0_, ttransacti0_.transactionMessageSentContent as transact2_63_0_, ttransacti0_.transactionMessageSentTime as transact3_63_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.userID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TShares: select tshares0_.sentShareSentPersonID as sentSha10_64_1_, tshares0_.shareID as shareID61_1_, tshares0_.shareID as shareID61_0_, tshares0_.sentShareSentPersonID as sentSha10_61_0_, tshares0_.fileID as fileID61_0_, tshares0_.filetype as filetype61_0_, tshares0_.folderID as folderID61_0_, tshares0_.isSecretShare as isSecret5_61_0_, tshares0_.sentShareTime as sentShar6_61_0_, tshares0_.shareAddress as shareAdd7_61_0_, tshares0_.shareName as shareName61_0_, tshares0_.sharePassword as sharePas9_61_0_ from CloudFiles.T_share tshares0_ where tshares0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TDepartmentOperations: select tdepartmen0_.departmentID as departme3_54_1_, tdepartmen0_.departmentOperationID as departme1_55_1_, tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId: select tsentshare0_.sentShareReceiveID as sentShar7_64_1_, tsentshare0_.sentShareID as sentShar1_59_1_, tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareReceiveID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId: select tsentshare0_.sentShareSentPersonID as sentShar8_64_1_, tsentshare0_.sentShareID as sentShar1_59_1_, tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TFiles: select tfiles0_.fileUserID as fileUserID64_1_, tfiles0_.fileID as fileID57_1_, tfiles0_.fileID as fileID57_0_, tfiles0_.fileDepartmentID as fileDep12_57_0_, tfiles0_.folderID as folderID57_0_, tfiles0_.fileUserID as fileUserID57_0_, tfiles0_.fileAttribute as fileAttr2_57_0_, tfiles0_.fileExtension as fileExte3_57_0_, tfiles0_.fileMD5 as fileMD4_57_0_, tfiles0_.fileName as fileName57_0_, tfiles0_.fileNewTime as fileNewT6_57_0_, tfiles0_.filePath as filePath57_0_, tfiles0_.filePrimaryPath as filePrim8_57_0_, tfiles0_.fileSize as fileSize57_0_, tfiles0_.fileStoragePath as fileSto10_57_0_, tfiles0_.fileType as fileType57_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileUserID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TSentTransactions: select tsenttrans0_.transactionID as transact4_62_1_, tsenttrans0_.sentTransactionID as sentTran1_60_1_, tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TShare.TSentShares: select tsentshare0_.shareID as shareID61_1_, tsentshare0_.sentShareID as sentShar1_59_1_, tsentshare0_.sentShareID as sentShar1_59_0_, tsentshare0_.shareID as shareID59_0_, tsentshare0_.sentShareReceiveID as sentShar7_59_0_, tsentshare0_.sentShareSentPersonID as sentShar8_59_0_, tsentshare0_.isChecked as isChecked59_0_, tsentshare0_.sentShareTime as sentShar3_59_0_, tsentshare0_.sentShareUserName as sentShar4_59_0_, tsentshare0_.shareName as shareName59_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.shareID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId: select tsenttrans0_.sentTransactioncolPersonID as sentTran6_64_1_, tsenttrans0_.sentTransactionID as sentTran1_60_1_, tsenttrans0_.sentTransactionID as sentTran1_60_0_, tsenttrans0_.transactionID as transact4_60_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_60_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_60_0_, tsenttrans0_.sentTransactionTime as sentTran2_60_0_, tsenttrans0_.transactionState as transact3_60_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactioncolPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TDepartmentOperations: select tdepartmen0_.fileID as fileID57_1_, tdepartmen0_.departmentOperationID as departme1_55_1_, tdepartmen0_.departmentOperationID as departme1_55_0_, tdepartmen0_.departmentID as departme3_55_0_, tdepartmen0_.fileID as fileID55_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_55_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.fileID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId: select tprivateme0_.receivePersonID as receiveP4_64_1_, tprivateme0_.privateMessageID as privateM1_58_1_, tprivateme0_.privateMessageID as privateM1_58_0_, tprivateme0_.receivePersonID as receiveP4_58_0_, tprivateme0_.sentPersonID as sentPers5_58_0_, tprivateme0_.privateMessageSentContent as privateM2_58_0_, tprivateme0_.privateMessageSentTime as privateM3_58_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.receivePersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TFiles: select tfiles0_.folderID as folderID57_1_, tfiles0_.fileID as fileID57_1_, tfiles0_.fileID as fileID57_0_, tfiles0_.fileDepartmentID as fileDep12_57_0_, tfiles0_.folderID as folderID57_0_, tfiles0_.fileUserID as fileUserID57_0_, tfiles0_.fileAttribute as fileAttr2_57_0_, tfiles0_.fileExtension as fileExte3_57_0_, tfiles0_.fileMD5 as fileMD4_57_0_, tfiles0_.fileName as fileName57_0_, tfiles0_.fileNewTime as fileNewT6_57_0_, tfiles0_.filePath as filePath57_0_, tfiles0_.filePrimaryPath as filePrim8_57_0_, tfiles0_.fileSize as fileSize57_0_, tfiles0_.fileStoragePath as fileSto10_57_0_, tfiles0_.fileType as fileType57_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.folderID=?
DEBUG (SessionFactoryRegistry.java:75) Registering SessionFactory: 3e5a745f-c6a1-413e-88c9-e9efb8ce08bb (&lt;unnamed&gt;)
DEBUG (SessionFactoryRegistry.java:82) Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG (SessionFactoryImpl.java:484) Instantiated session factory
 INFO (SchemaUpdate.java:182) HHH000228: Running hbm2ddl schema update
 INFO (SchemaUpdate.java:193) HHH000102: Fetching database metadata
 INFO (SchemaUpdate.java:205) HHH000396: Updating schema
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_authorization
 INFO (TableMetadata.java:66) HHH000037: Columns: [token, userid, updatedate]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, userid]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_company
 INFO (TableMetadata.java:66) HHH000037: Columns: [companyusedspace, logoaddress, companyid, linkmantelephone, organizationcode, companypassword, companyaddress, linkman, companyspacesize, companyname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_department
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentusedspace, departmentid, departmentdescription, departmentspacesize, departmentname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_departmentOperation
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentid, departmentoperationid, fileid, departmentoperationauthorityid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [departmentoperation_file, departmentoperation_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [departmentoperation_file_idx, primary, departmentoperation_department_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_draft
 INFO (TableMetadata.java:66) HHH000037: Columns: [draftid, draftnewtime, drafttransactionid, draftpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [draft_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, draft_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_file
 INFO (TableMetadata.java:66) HHH000037: Columns: [filestoragepath, filepath, fileattribute, folderid, filemd5, fileuserid, fileid, filenewtime, fileprimarypath, filesize, fileextension, filename, filetype, filedepartmentid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [file_file, file_user, file_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [file_user_idx, primary, file_department_idx, file_file_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_privateMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [privatemessageid, privatemessagesentcontent, privatemessagesenttime, receivepersonid, sentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [privatemessagereceiveperson_user, privatemessagesentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, privatemessagesentperson_user_idx, privatemessagereceiveperson_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentShare
 INFO (TableMetadata.java:66) HHH000037: Columns: [sentshareid, sentsharetime, shareid, sentsharereceiveid, sharename, ischecked, sentsharesentpersonid, sentshareusername]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [sentshare_share, sentsharesentperson_user, sentsharereceive_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [sentshare_share_idx, sentshare_user_idx, sentshare_user_idx1, primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentTransaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionname, senttransactiontime, transactionid, receivetransactionpersonid, transactionstate, senttransactionid, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [senttransactionreceiveperson_user, senttransaction_transaction, senttransactionsentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [senttransaction_user_idx, primary, senttransactionreceiveperson_user_idx, senttransaction_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_share
 INFO (TableMetadata.java:66) HHH000037: Columns: [folderid, sentsharetime, sharepassword, shareaddress, issecretshare, shareid, filetype, fileid, sharename, sentsharesentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [fk_t_share_t_user1]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, fk_t_share_t_user1_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [senttransactiontime, transactionname, transactionid, transactionattachmentaddress, transactioncontent, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transaction_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transaction_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transactionMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionmessagesenttime, transactionmessagesentcontent, transactionid, userid, transactionmessageid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transactionmessage_transaction, transactionmessage_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transactionmessage_user_idx, transactionmessage_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_user
 INFO (TableMetadata.java:66) HHH000037: Columns: [userusedspace, userspacesize, userpassword, username, departmentid, usersex, userid, userheadportrait, usertelephone, usermailbox, userauthority, userskin]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [user_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [user_department_idx, primary]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
 INFO (SchemaUpdate.java:240) HHH000232: Schema update complete
DEBUG (SessionFactoryImpl.java:1021) Checking 0 named HQL queries
DEBUG (SessionFactoryImpl.java:1044) Checking 0 named SQL queries
DEBUG (StatisticsInitiator.java:110) Statistics initialized [enabled=false]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;baseDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;fileDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;fileDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.FileDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;fileDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;fileDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;fileDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;fileDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.TAuthorizationDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;TAuthorizationDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;TAuthorizationDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;TAuthorizationDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;login&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;login&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;login&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.UserServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userService&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userService&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionAdvice&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionManager&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionManager&apos;
 INFO (HibernateTransactionManager.java:268) Using DataSource [{
	CreateTime:&quot;2015-05-15 10:49:45&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:3616494, ConnectTime:&quot;2015-05-15 10:49:46&quot;, UseCount:2, LastActiveTime:&quot;2015-05-15 10:49:46&quot;}
	]
}] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [move*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [repair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [deleteAndRepair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [find*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [load*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [search*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [datagrid*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;userService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.UserServiceImpl@60a0aa]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;userService&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.TokenServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;tokenService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;tokenService&apos;: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;tokenService&apos; to bean named &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;tokenService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.TokenServiceImpl@1d40ea2]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;tokenService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;login&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personal&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Personal]: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personal&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personal&apos;: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personFile&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;fileDao&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;personFile&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.personal.impl.PersonFileServiceImpl@165aff9]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personFile&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personal&apos; to bean named &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userService&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;timeTask&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;timeTask&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractApplicationContext.java:850) Unable to locate LifecycleProcessor with name &apos;lifecycleProcessor&apos;: using default [org.springframework.context.support.DefaultLifecycleProcessor@1040d5b]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;lifecycleProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
</system-out>
  </testcase>
  <testcase time="0.915" classname="com.bigroad.dao.impl.FileDaoImplTest" name="testSearchByfileExtension">
    <error message="No Session found for current thread" type="org.hibernate.HibernateException">org.hibernate.HibernateException: No Session found for current thread
	at org.springframework.orm.hibernate4.SpringSessionContext.currentSession(SpringSessionContext.java:97)
	at org.hibernate.internal.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:941)
	at com.bigroad.dao.impl.BaseDaoImpl.getCurrentSession(BaseDaoImpl.java:28)
	at com.bigroad.dao.impl.BaseDaoImpl.find(BaseDaoImpl.java:89)
	at com.bigroad.dao.impl.FileDaoImpl.searchByfileExtension(FileDaoImpl.java:45)
	at com.bigroad.dao.impl.FileDaoImplTest.testSearchByfileExtension(FileDaoImplTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (AbstractApplicationContext.java:500) Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@191b0eb: startup date [Fri May 15 10:49:46 CST 2015]; root of context hierarchy
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:140) Loading schema mappings from [META-INF/spring.schemas]
DEBUG (PluggableSchemaResolver.java:146) Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (DefaultNamespaceHandlerResolver.java:156) Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\control] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\enterprise] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\information] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\letter] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\transaction] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/*/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\FileDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\UserDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl\TokenServiceImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\BaseDAOI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\DepartmentDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\FileDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\DepartmentDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\SentShareDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TokenTimerUpDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\SentShareDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\TAuthorizationDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\UserDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\CloudFileCon.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\Test.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileShareI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\TokenServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\UserServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\Command.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\FreshToken.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\JinTask.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MD5Check.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\PageResults.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\RowMapper.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\TokenProcessor.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\UserToken.class]]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class]
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 16 bean definitions from location pattern [spring.xml]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring-hibernate.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-2.5.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;dataSource&apos; as bean name and [] as aliases
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;transactionManager&apos; as bean name and [] as aliases
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 7 bean definitions from location pattern [spring-hibernate.xml]
DEBUG (AbstractApplicationContext.java:530) Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@191b0eb: org.springframework.beans.factory.support.DefaultListableBeanFactory@e8b3f7: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0]; root of factory hierarchy
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (MutablePropertySources.java:104) Adding [environmentProperties] PropertySource with lowest search precedence
 INFO (PropertiesLoaderSupport.java:177) Loading properties file from class path resource [config.properties]
DEBUG (MutablePropertySources.java:104) Adding [localProperties] PropertySource with lowest search precedence
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_url&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_url&apos; in [localProperties] with type [String] and value &apos;jdbc:mysql://172.31.34.115:3306/CloudFiles??useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_username&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_username&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_password&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_password&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;validationQuery&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;validationQuery&apos; in [localProperties] with type [String] and value &apos;SELECT 1&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.format_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.format_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.show_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.show_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.dialect&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.dialect&apos; in [localProperties] with type [String] and value &apos;org.hibernate.dialect.MySQLDialect&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.hbm2ddl.auto&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties] with type [String] and value &apos;update&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractApplicationContext.java:799) Unable to locate MessageSource with name &apos;messageSource&apos;: using default [org.springframework.context.support.DelegatingMessageSource@1b0dba9]
DEBUG (AbstractApplicationContext.java:823) Unable to locate ApplicationEventMulticaster with name &apos;applicationEventMulticaster&apos;: using default [org.springframework.context.event.SimpleApplicationEventMulticaster@256760]
 INFO (DefaultListableBeanFactory.java:581) Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8b3f7: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;baseDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.BaseDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;baseDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;baseDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;sessionFactory&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;dataSource&apos; to allow for resolving potential circular references
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
ERROR (DruidAbstractDataSource.java:935) maxIdle is deprecated
DEBUG (AbstractAutowireCapableBeanFactory.java:1555) Invoking init method  &apos;init&apos; on bean with name &apos;dataSource&apos;
 INFO (DruidDataSource.java:669) {dataSource-4} inited
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;sessionFactory&apos;
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration numeric_boolean -&gt; org.hibernate.type.NumericBooleanType@fecba2
DEBUG (BasicTypeRegistry.java:143) Adding type registration true_false -&gt; org.hibernate.type.TrueFalseType@801853
DEBUG (BasicTypeRegistry.java:143) Adding type registration yes_no -&gt; org.hibernate.type.YesNoType@f73e09
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration char -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration int -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_decimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigDecimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_integer -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigInteger -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration string -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.String -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration url -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.net.URL -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Date -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration dbtimestamp -&gt; org.hibernate.type.DbTimestampType@242102
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.GregorianCalendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar_date -&gt; org.hibernate.type.CalendarDateType@1efedd5
DEBUG (BasicTypeRegistry.java:143) Adding type registration locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration timezone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.TimeZone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-binary -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.UUID -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-char -&gt; org.hibernate.type.UUIDCharType@168bc8d
DEBUG (BasicTypeRegistry.java:143) Adding type registration pg-uuid -&gt; org.hibernate.type.PostgresUUIDType@12e827b
DEBUG (BasicTypeRegistry.java:143) Adding type registration binary -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte[] -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration [B -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-binary -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration Byte[] -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Byte; -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration image -&gt; org.hibernate.type.ImageType@1c5acda
DEBUG (BasicTypeRegistry.java:143) Adding type registration characters -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration char[] -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration [C -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-characters -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Character; -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration Character[] -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration text -&gt; org.hibernate.type.TextType@ac86bb
DEBUG (BasicTypeRegistry.java:143) Adding type registration blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_blob -&gt; org.hibernate.type.MaterializedBlobType@7780c2
DEBUG (BasicTypeRegistry.java:143) Adding type registration clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_clob -&gt; org.hibernate.type.MaterializedClobType@13a2cd7
DEBUG (BasicTypeRegistry.java:143) Adding type registration serializable -&gt; org.hibernate.type.SerializableType@33ee9b
DEBUG (BasicTypeRegistry.java:143) Adding type registration object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_date -&gt; org.hibernate.type.AdaptedImmutableType@d4ee30
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_time -&gt; org.hibernate.type.AdaptedImmutableType@161a226
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_timestamp -&gt; org.hibernate.type.AdaptedImmutableType@dcac12
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_dbtimestamp -&gt; org.hibernate.type.AdaptedImmutableType@1a4f616
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar -&gt; org.hibernate.type.AdaptedImmutableType@1184005
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar_date -&gt; org.hibernate.type.AdaptedImmutableType@113237e
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_binary -&gt; org.hibernate.type.AdaptedImmutableType@17f4bb3
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_serializable -&gt; org.hibernate.type.AdaptedImmutableType@43009f
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid2] -&gt; [org.hibernate.id.UUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [guid] -&gt; [org.hibernate.id.GUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid.hex] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [hilo] -&gt; [org.hibernate.id.TableHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [assigned] -&gt; [org.hibernate.id.Assigned]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [identity] -&gt; [org.hibernate.id.IdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [select] -&gt; [org.hibernate.id.SelectGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence] -&gt; [org.hibernate.id.SequenceGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [seqhilo] -&gt; [org.hibernate.id.SequenceHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [increment] -&gt; [org.hibernate.id.IncrementGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [foreign] -&gt; [org.hibernate.id.ForeignGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence-identity] -&gt; [org.hibernate.id.SequenceIdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-sequence] -&gt; [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-table] -&gt; [org.hibernate.id.enhanced.TableGenerator]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/model/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class]]
DEBUG (IntegratorServiceImpl.java:59) Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG (Configuration.java:1735) Preparing to build session factory with filters : {}
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TAuthorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TAuthorization
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TAuthorization on table T_authorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=userId, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=token, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property token with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for token
DEBUG (PropertyBinder.java:259) Building property token
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=updateDate, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property updateDate with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for updateDate
DEBUG (PropertyBinder.java:259) Building property updateDate
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TCompany
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TCompany
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TCompany on table T_company
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyId
DEBUG (PropertyBinder.java:259) Building property companyId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyAddress
DEBUG (PropertyBinder.java:259) Building property companyAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyName
DEBUG (PropertyBinder.java:259) Building property companyName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyPassword
DEBUG (PropertyBinder.java:259) Building property companyPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companySpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companySpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companySpaceSize
DEBUG (PropertyBinder.java:259) Building property companySpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyUsedSpace
DEBUG (PropertyBinder.java:259) Building property companyUsedSpace
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkMan, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkMan with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkMan
DEBUG (PropertyBinder.java:259) Building property linkMan
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkManTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkManTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkManTelephone
DEBUG (PropertyBinder.java:259) Building property linkManTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=logoAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property logoAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for logoAddress
DEBUG (PropertyBinder.java:259) Building property logoAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=organizationCode, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property organizationCode with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for organizationCode
DEBUG (PropertyBinder.java:259) Building property organizationCode
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartment
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartment on table T_department
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentId
DEBUG (PropertyBinder.java:259) Building property departmentId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TUsers_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TUsers
DEBUG (PropertyBinder.java:259) Building property TUsers
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentDescription, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentDescription with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentDescription
DEBUG (PropertyBinder.java:259) Building property departmentDescription
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentName
DEBUG (PropertyBinder.java:259) Building property departmentName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentSpaceSize
DEBUG (PropertyBinder.java:259) Building property departmentSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentUsedSpace
DEBUG (PropertyBinder.java:259) Building property departmentUsedSpace
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartmentOperation
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartmentOperation on table T_departmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationId
DEBUG (PropertyBinder.java:259) Building property departmentOperationId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationAuthorityID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationAuthorityId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationAuthorityId
DEBUG (PropertyBinder.java:259) Building property departmentOperationAuthorityId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDraft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDraft
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDraft on table T_draft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftId
DEBUG (PropertyBinder.java:259) Building property draftId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;draftPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftNewTime
DEBUG (PropertyBinder.java:259) Building property draftNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftTransactionID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftTransactionId
DEBUG (PropertyBinder.java:259) Building property draftTransactionId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TFile
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TFile on table T_file
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileDepartmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;folderID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileUserID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileAttribute, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileAttribute with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileAttribute
DEBUG (PropertyBinder.java:259) Building property fileAttribute
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileExtension, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileExtension with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileExtension
DEBUG (PropertyBinder.java:259) Building property fileExtension
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileMD5, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileMd5 with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileMd5
DEBUG (PropertyBinder.java:259) Building property fileMd5
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileName
DEBUG (PropertyBinder.java:259) Building property fileName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileNewTime
DEBUG (PropertyBinder.java:259) Building property fileNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePath
DEBUG (PropertyBinder.java:259) Building property filePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePrimaryPath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePrimaryPath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePrimaryPath
DEBUG (PropertyBinder.java:259) Building property filePrimaryPath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileSize
DEBUG (PropertyBinder.java:259) Building property fileSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileStoragePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileStoragePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileStoragePath
DEBUG (PropertyBinder.java:259) Building property fileStoragePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileType, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileType with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileType
DEBUG (PropertyBinder.java:259) Building property fileType
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TPrivateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TPrivateMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TPrivateMessage on table T_privateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageId
DEBUG (PropertyBinder.java:259) Building property privateMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receivePersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserByReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserBySentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentContent
DEBUG (PropertyBinder.java:259) Building property privateMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentTime
DEBUG (PropertyBinder.java:259) Building property privateMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentShare on table T_sentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareId
DEBUG (PropertyBinder.java:259) Building property sentShareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;shareID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareReceiveID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=isChecked, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isChecked with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isChecked
DEBUG (PropertyBinder.java:259) Building property isChecked
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareUserName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareUserName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareUserName
DEBUG (PropertyBinder.java:259) Building property sentShareUserName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentTransaction on table T_sentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionId
DEBUG (PropertyBinder.java:259) Building property sentTransactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receiveTransactionPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserByReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentTransactioncolPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserBySentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionTime
DEBUG (PropertyBinder.java:259) Building property sentTransactionTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=transactionState, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionState with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionState
DEBUG (PropertyBinder.java:259) Building property transactionState
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TShare on table T_share
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareId
DEBUG (PropertyBinder.java:259) Building property shareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TShare.TSentShares
DEBUG (PropertyBinder.java:259) Building property TSentShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=fileID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=filetype, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filetype with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filetype
DEBUG (PropertyBinder.java:259) Building property filetype
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=folderID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property folderId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for folderId
DEBUG (PropertyBinder.java:259) Building property folderId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=isSecretShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isSecretShare with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isSecretShare
DEBUG (PropertyBinder.java:259) Building property isSecretShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareAddress
DEBUG (PropertyBinder.java:259) Building property shareAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sharePassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sharePassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sharePassword
DEBUG (PropertyBinder.java:259) Building property sharePassword
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransaction on table T_transaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionId
DEBUG (PropertyBinder.java:259) Building property transactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactions_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (PropertyBinder.java:259) Building property TSentTransactions
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionAttachmentAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionAttachmentAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionAttachmentAddress
DEBUG (PropertyBinder.java:259) Building property transactionAttachmentAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionContent
DEBUG (PropertyBinder.java:259) Building property transactionContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionName
DEBUG (PropertyBinder.java:259) Building property transactionName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransactionMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransactionMessage on table T_transactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageId
DEBUG (PropertyBinder.java:259) Building property transactionMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;userID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentContent
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentTime
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TUser
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TUser on table T_user
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDrafts_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TDrafts
DEBUG (PropertyBinder.java:259) Building property TDrafts
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForReceivePersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareReceiveId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForReceiveTransactionPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForSentTransactioncolPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForSentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TShares
DEBUG (PropertyBinder.java:259) Building property TShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userAuthority, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userAuthority with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userAuthority
DEBUG (PropertyBinder.java:259) Building property userAuthority
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userHeadportrait, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userHeadportrait with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userHeadportrait
DEBUG (PropertyBinder.java:259) Building property userHeadportrait
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userMailbox, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userMailbox with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userMailbox
DEBUG (PropertyBinder.java:259) Building property userMailbox
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userName
DEBUG (PropertyBinder.java:259) Building property userName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userPassword
DEBUG (PropertyBinder.java:259) Building property userPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSex, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSex with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSex
DEBUG (PropertyBinder.java:259) Building property userSex
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSkin, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSkin with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSkin
DEBUG (PropertyBinder.java:259) Building property userSkin
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSpaceSize
DEBUG (PropertyBinder.java:259) Building property userSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userTelephone
DEBUG (PropertyBinder.java:259) Building property userTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userUsedSpace
DEBUG (PropertyBinder.java:259) Building property userUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for token
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for updateDate
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companySpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkMan
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkManTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for logoAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for organizationCode
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentDescription
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationAuthorityId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileAttribute
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileExtension
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileMd5
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePrimaryPath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileStoragePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileType
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isChecked
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareUserName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionState
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filetype
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for folderId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isSecretShare
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sharePassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionAttachmentAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userAuthority
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userHeadportrait
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userMailbox
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSex
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSkin
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userUsedSpace
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileDepartmentID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TUsers through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TUsers -&gt; T_user
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TUser.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TUser
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: folderID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TShare.TSentShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TShare.TSentShares -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TShare
DEBUG (CollectionSecondPass.java:80) Mapped collection key: shareID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TSentTransactions through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TSentTransactions -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TDrafts through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TDrafts -&gt; T_draft
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDraft.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: draftPersonID, one-to-many: com.bigroad.model.db.TDraft
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileUserID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserByReceivePersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receivePersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserBySentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentPersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareReceiveId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareReceiveID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareSentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserByReceiveTransactionPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receiveTransactionPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserBySentTransactioncolPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentTransactioncolPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TShares -&gt; T_share
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TShare.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: userID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (JdbcServicesImpl.java:121) Database -&gt;
       name : MySQL
    version : 5.5.41-0ubuntu0.14.04.1
      major : 5
      minor : 5
DEBUG (JdbcServicesImpl.java:127) Driver -&gt;
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.34 ( Revision: jess.balint@oracle.com-20141014163213-wqbwpf1ok2kvo1om )
      major : 5
      minor : 1
DEBUG (JdbcServicesImpl.java:133) JDBC version : 4.0
 INFO (Dialect.java:125) HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG (SettingsFactory.java:102) Automatic flush during beforeCompletion(): disabled
DEBUG (SettingsFactory.java:108) Automatic session close at end of transaction: disabled
DEBUG (SettingsFactory.java:119) JDBC batch size: 15
DEBUG (SettingsFactory.java:125) JDBC batch updates for versioned data: disabled
DEBUG (SettingsFactory.java:135) Scrollable result sets: enabled
DEBUG (SettingsFactory.java:141) Wrap result sets: disabled
DEBUG (SettingsFactory.java:147) JDBC3 getGeneratedKeys(): enabled
DEBUG (SettingsFactory.java:159) multi-tenancy strategy : NONE
DEBUG (SettingsFactory.java:165) Connection release mode: auto
 INFO (TransactionFactoryInitiator.java:68) HHH000399: Using default transaction strategy (direct JDBC transactions)
DEBUG (SettingsFactory.java:201) Maximum outer join fetch depth: 2
DEBUG (SettingsFactory.java:207) Default batch fetch size: 1
DEBUG (SettingsFactory.java:213) Generate SQL with comments: disabled
DEBUG (SettingsFactory.java:219) Order SQL updates by primary key: disabled
DEBUG (SettingsFactory.java:225) Order SQL inserts for batching: disabled
DEBUG (SettingsFactory.java:450) Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
 INFO (ASTQueryTranslatorFactory.java:48) HHH000397: Using ASTQueryTranslatorFactory
DEBUG (SettingsFactory.java:235) Query language substitutions: {}
DEBUG (SettingsFactory.java:241) JPA-QL strict compliance: disabled
DEBUG (SettingsFactory.java:249) Second-level cache: enabled
DEBUG (SettingsFactory.java:255) Query cache: disabled
DEBUG (SettingsFactory.java:390) Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG (SettingsFactory.java:400) org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
DEBUG (SettingsFactory.java:270) Optimize cache for minimal puts: disabled
DEBUG (SettingsFactory.java:285) Structured second-level cache entries: disabled
DEBUG (SettingsFactory.java:294) Statistics: disabled
DEBUG (SettingsFactory.java:300) Deleted entity synthetic identifier rollback: disabled
DEBUG (SettingsFactory.java:324) Default entity-mode: pojo
DEBUG (SettingsFactory.java:330) Named query checking : enabled
DEBUG (SettingsFactory.java:336) Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG (SessionFactoryImpl.java:223) Building session factory
DEBUG (SessionFactoryImpl.java:275) Session factory constructed with filter configurations : {}
DEBUG (SessionFactoryImpl.java:276) Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin, java.vm.version=21.0-b17, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\eclipse_yjs_all\20150515\cloudfiles, java.runtime.version=1.7.0-b147, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=F:\eclipse_yjs_all\20150515\cloudfiles, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar, java.io.tmpdir=C:\Users\LIUHON~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=GBK, java.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0/bin/../jre/lib/i386;C:\Program Files\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.7.0\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Common Files\Thunder Network\KanKan\Codecs;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;D:\20129162336\ration rose\rr2\common;c:\Program Files\Common Files\Ulead Systems\MPEG;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;D:\20129162336\TortoiseSVN\bin;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\runtime\win32;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\bin;C:\Program Files\Cracklock\Bin;D:\20129162336\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;., hibernate.connection.datasource={
	CreateTime:&quot;2015-05-15 10:49:46&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:8065487, ConnectTime:&quot;2015-05-15 10:49:47&quot;, UseCount:1, LastActiveTime:&quot;2015-05-15 10:49:47&quot;}
	]
}, surefire.test.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\liuhonghua, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=GBK, hibernate.format_sql=true, user.name=liuhonghua, java.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@12940b3, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0\jre, sun.java.command=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire4193884015818501124tmp F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire_05322085908533930276tmp, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0, java.ext.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\liuhonghua\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionID from CloudFiles.T_transaction where transactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionID, ttransacti_.transactionAttachmentAddress as transact2_88_, ttransacti_.transactionContent as transact3_88_, ttransacti_.transactionName as transact4_88_ from CloudFiles.T_transaction ttransacti_ where ttransacti_.transactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transaction (transactionAttachmentAddress, transactionContent, transactionName, transactionID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transaction set transactionAttachmentAddress=?, transactionContent=?, transactionName=? where transactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transaction where transactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TFile
DEBUG (AbstractEntityPersister.java:3491)  Version select: select fileID from CloudFiles.T_file where fileID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tfile_.fileID, tfile_.fileDepartmentID as fileDep12_83_, tfile_.folderID as folderID83_, tfile_.fileUserID as fileUserID83_, tfile_.fileAttribute as fileAttr2_83_, tfile_.fileExtension as fileExte3_83_, tfile_.fileMD5 as fileMD4_83_, tfile_.fileName as fileName83_, tfile_.fileNewTime as fileNewT6_83_, tfile_.filePath as filePath83_, tfile_.filePrimaryPath as filePrim8_83_, tfile_.fileSize as fileSize83_, tfile_.fileStoragePath as fileSto10_83_, tfile_.fileType as fileType83_ from CloudFiles.T_file tfile_ where tfile_.fileID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_file (fileDepartmentID, folderID, fileUserID, fileAttribute, fileExtension, fileMD5, fileName, fileNewTime, filePath, filePrimaryPath, fileSize, fileStoragePath, fileType, fileID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_file set fileDepartmentID=?, folderID=?, fileUserID=?, fileAttribute=?, fileExtension=?, fileMD5=?, fileName=?, fileNewTime=?, filePath=?, filePrimaryPath=?, fileSize=?, fileStoragePath=?, fileType=? where fileID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_file where fileID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDraft
DEBUG (AbstractEntityPersister.java:3491)  Version select: select draftID from CloudFiles.T_draft where draftID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdraft_.draftID, tdraft_.draftPersonID as draftPer4_82_, tdraft_.draftNewTime as draftNew2_82_, tdraft_.draftTransactionID as draftTra3_82_ from CloudFiles.T_draft tdraft_ where tdraft_.draftID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_draft (draftPersonID, draftNewTime, draftTransactionID, draftID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_draft set draftPersonID=?, draftNewTime=?, draftTransactionID=? where draftID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_draft where draftID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select shareID from CloudFiles.T_share where shareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tshare_.shareID, tshare_.sentShareSentPersonID as sentSha10_87_, tshare_.fileID as fileID87_, tshare_.filetype as filetype87_, tshare_.folderID as folderID87_, tshare_.isSecretShare as isSecret5_87_, tshare_.sentShareTime as sentShar6_87_, tshare_.shareAddress as shareAdd7_87_, tshare_.shareName as shareName87_, tshare_.sharePassword as sharePas9_87_ from CloudFiles.T_share tshare_ where tshare_.shareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_share (sentShareSentPersonID, fileID, filetype, folderID, isSecretShare, sentShareTime, shareAddress, shareName, sharePassword, shareID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_share set sentShareSentPersonID=?, fileID=?, filetype=?, folderID=?, isSecretShare=?, sentShareTime=?, shareAddress=?, shareName=?, sharePassword=? where shareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_share where shareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TAuthorization
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userId from CloudFiles.T_authorization where userId =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tauthoriza_.userId, tauthoriza_.token as token78_, tauthoriza_.updateDate as updateDate78_ from CloudFiles.T_authorization tauthoriza_ where tauthoriza_.userId=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_authorization (token, updateDate, userId) values (?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_authorization set token=?, updateDate=? where userId=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_authorization where userId=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartmentOperation
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentOperationID from CloudFiles.T_departmentOperation where departmentOperationID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentOperationID, tdepartmen_.departmentID as departme3_81_, tdepartmen_.fileID as fileID81_, tdepartmen_.departmentOperationAuthorityID as departme2_81_ from CloudFiles.T_departmentOperation tdepartmen_ where tdepartmen_.departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_departmentOperation (departmentID, fileID, departmentOperationAuthorityID, departmentOperationID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_departmentOperation set departmentID=?, fileID=?, departmentOperationAuthorityID=? where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_departmentOperation where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentShareID from CloudFiles.T_sentShare where sentShareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsentshare_.sentShareID, tsentshare_.shareID as shareID85_, tsentshare_.sentShareReceiveID as sentShar7_85_, tsentshare_.sentShareSentPersonID as sentShar8_85_, tsentshare_.isChecked as isChecked85_, tsentshare_.sentShareTime as sentShar3_85_, tsentshare_.sentShareUserName as sentShar4_85_, tsentshare_.shareName as shareName85_ from CloudFiles.T_sentShare tsentshare_ where tsentshare_.sentShareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentShare (shareID, sentShareReceiveID, sentShareSentPersonID, isChecked, sentShareTime, sentShareUserName, shareName, sentShareID) values (?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentShare set shareID=?, sentShareReceiveID=?, sentShareSentPersonID=?, isChecked=?, sentShareTime=?, sentShareUserName=?, shareName=? where sentShareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentShare where sentShareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentTransactionID from CloudFiles.T_sentTransaction where sentTransactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsenttrans_.sentTransactionID, tsenttrans_.transactionID as transact4_86_, tsenttrans_.receiveTransactionPersonID as receiveT5_86_, tsenttrans_.sentTransactioncolPersonID as sentTran6_86_, tsenttrans_.sentTransactionTime as sentTran2_86_, tsenttrans_.transactionState as transact3_86_ from CloudFiles.T_sentTransaction tsenttrans_ where tsenttrans_.sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentTransaction (transactionID, receiveTransactionPersonID, sentTransactioncolPersonID, sentTransactionTime, transactionState, sentTransactionID) values (?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentTransaction set transactionID=?, receiveTransactionPersonID=?, sentTransactioncolPersonID=?, sentTransactionTime=?, transactionState=? where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentTransaction where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransactionMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionMessageID from CloudFiles.T_transactionMessage where transactionMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionMessageID, ttransacti_.transactionID as transact4_89_, ttransacti_.userID as userID89_, ttransacti_.transactionMessageSentContent as transact2_89_, ttransacti_.transactionMessageSentTime as transact3_89_ from CloudFiles.T_transactionMessage ttransacti_ where ttransacti_.transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transactionMessage (transactionID, userID, transactionMessageSentContent, transactionMessageSentTime, transactionMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transactionMessage set transactionID=?, userID=?, transactionMessageSentContent=?, transactionMessageSentTime=? where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transactionMessage where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartment
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentID from CloudFiles.T_department where departmentID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentID, tdepartmen_.departmentDescription as departme2_80_, tdepartmen_.departmentName as departme3_80_, tdepartmen_.departmentSpaceSize as departme4_80_, tdepartmen_.departmentUsedSpace as departme5_80_ from CloudFiles.T_department tdepartmen_ where tdepartmen_.departmentID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_department (departmentDescription, departmentName, departmentSpaceSize, departmentUsedSpace, departmentID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_department set departmentDescription=?, departmentName=?, departmentSpaceSize=?, departmentUsedSpace=? where departmentID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_department where departmentID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TUser
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userID from CloudFiles.T_user where userID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tuser_.userID, tuser_.departmentID as departm12_90_, tuser_.userAuthority as userAuth2_90_, tuser_.userHeadportrait as userHead3_90_, tuser_.userMailbox as userMail4_90_, tuser_.userName as userName90_, tuser_.userPassword as userPass6_90_, tuser_.userSex as userSex90_, tuser_.userSkin as userSkin90_, tuser_.userSpaceSize as userSpac9_90_, tuser_.userTelephone as userTel10_90_, tuser_.userUsedSpace as userUse11_90_ from CloudFiles.T_user tuser_ where tuser_.userID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_user (departmentID, userAuthority, userHeadportrait, userMailbox, userName, userPassword, userSex, userSkin, userSpaceSize, userTelephone, userUsedSpace, userID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_user set departmentID=?, userAuthority=?, userHeadportrait=?, userMailbox=?, userName=?, userPassword=?, userSex=?, userSkin=?, userSpaceSize=?, userTelephone=?, userUsedSpace=? where userID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_user where userID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TPrivateMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select privateMessageID from CloudFiles.T_privateMessage where privateMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tprivateme_.privateMessageID, tprivateme_.receivePersonID as receiveP4_84_, tprivateme_.sentPersonID as sentPers5_84_, tprivateme_.privateMessageSentContent as privateM2_84_, tprivateme_.privateMessageSentTime as privateM3_84_ from CloudFiles.T_privateMessage tprivateme_ where tprivateme_.privateMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_privateMessage (receivePersonID, sentPersonID, privateMessageSentContent, privateMessageSentTime, privateMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_privateMessage set receivePersonID=?, sentPersonID=?, privateMessageSentContent=?, privateMessageSentTime=? where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_privateMessage where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TCompany
DEBUG (AbstractEntityPersister.java:3491)  Version select: select companyID from CloudFiles.T_company where companyID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tcompany_.companyID, tcompany_.companyAddress as companyA2_79_, tcompany_.companyName as companyN3_79_, tcompany_.companyPassword as companyP4_79_, tcompany_.companySpaceSize as companyS5_79_, tcompany_.companyUsedSpace as companyU6_79_, tcompany_.linkMan as linkMan79_, tcompany_.linkManTelephone as linkManT8_79_, tcompany_.logoAddress as logoAddr9_79_, tcompany_.organizationCode as organiz10_79_ from CloudFiles.T_company tcompany_ where tcompany_.companyID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_company (companyAddress, companyName, companyPassword, companySpaceSize, companyUsedSpace, linkMan, linkManTelephone, logoAddress, organizationCode, companyID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_company set companyAddress=?, companyName=?, companyPassword=?, companySpaceSize=?, companyUsedSpace=?, linkMan=?, linkManTelephone=?, logoAddress=?, organizationCode=? where companyID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_company where companyID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileDepartmentID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_user set departmentID=? where userID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_user set departmentID=null where departmentID=? and userID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_user set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_draft set draftPersonID=? where draftID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=? and draftID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set sentPersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set transactionID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set userID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set userID=null where userID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set userID=null where userID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_share set sentShareSentPersonID=? where shareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=? and shareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set departmentID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareReceiveID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareSentPersonID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set fileID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set shareID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set shareID=null where shareID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set shareID=null where shareID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set transactionID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileUserID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileUserID=null where fileUserID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileUserID=null where fileUserID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set receivePersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set folderID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set folderID=null where folderID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set folderID=null where folderID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [NONE]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [READ]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE_NOWAIT]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [FORCE]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_READ]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_WRITE]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_88_0_, ttransacti0_.transactionAttachmentAddress as transact2_88_0_, ttransacti0_.transactionContent as transact3_88_0_, ttransacti0_.transactionName as transact4_88_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [NONE]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [READ]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE_NOWAIT]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [FORCE]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_READ]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_WRITE]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID83_0_, tfile0_.fileDepartmentID as fileDep12_83_0_, tfile0_.folderID as folderID83_0_, tfile0_.fileUserID as fileUserID83_0_, tfile0_.fileAttribute as fileAttr2_83_0_, tfile0_.fileExtension as fileExte3_83_0_, tfile0_.fileMD5 as fileMD4_83_0_, tfile0_.fileName as fileName83_0_, tfile0_.fileNewTime as fileNewT6_83_0_, tfile0_.filePath as filePath83_0_, tfile0_.filePrimaryPath as filePrim8_83_0_, tfile0_.fileSize as fileSize83_0_, tfile0_.fileStoragePath as fileSto10_83_0_, tfile0_.fileType as fileType83_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [NONE]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [READ]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE_NOWAIT]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [FORCE]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_READ]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_WRITE]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID82_0_, tdraft0_.draftPersonID as draftPer4_82_0_, tdraft0_.draftNewTime as draftNew2_82_0_, tdraft0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [NONE]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [READ]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE_NOWAIT]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [FORCE]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_READ]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_WRITE]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID87_0_, tshare0_.sentShareSentPersonID as sentSha10_87_0_, tshare0_.fileID as fileID87_0_, tshare0_.filetype as filetype87_0_, tshare0_.folderID as folderID87_0_, tshare0_.isSecretShare as isSecret5_87_0_, tshare0_.sentShareTime as sentShar6_87_0_, tshare0_.shareAddress as shareAdd7_87_0_, tshare0_.shareName as shareName87_0_, tshare0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [NONE]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [READ]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE_NOWAIT]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [FORCE]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_READ]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_WRITE]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId78_0_, tauthoriza0_.token as token78_0_, tauthoriza0_.updateDate as updateDate78_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [NONE]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [READ]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE_NOWAIT]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [FORCE]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_READ]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [NONE]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [READ]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE_NOWAIT]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [FORCE]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_READ]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_WRITE]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [NONE]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [READ]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE_NOWAIT]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [FORCE]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_READ]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_WRITE]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [NONE]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [READ]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE_NOWAIT]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [FORCE]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_READ]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_WRITE]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [NONE]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [READ]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE_NOWAIT]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [FORCE]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_READ]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_80_0_, tdepartmen0_.departmentDescription as departme2_80_0_, tdepartmen0_.departmentName as departme3_80_0_, tdepartmen0_.departmentSpaceSize as departme4_80_0_, tdepartmen0_.departmentUsedSpace as departme5_80_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [NONE]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [READ]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE_NOWAIT]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [FORCE]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_READ]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_WRITE]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID90_0_, tuser0_.departmentID as departm12_90_0_, tuser0_.userAuthority as userAuth2_90_0_, tuser0_.userHeadportrait as userHead3_90_0_, tuser0_.userMailbox as userMail4_90_0_, tuser0_.userName as userName90_0_, tuser0_.userPassword as userPass6_90_0_, tuser0_.userSex as userSex90_0_, tuser0_.userSkin as userSkin90_0_, tuser0_.userSpaceSize as userSpac9_90_0_, tuser0_.userTelephone as userTel10_90_0_, tuser0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [NONE]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [READ]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE_NOWAIT]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [FORCE]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_READ]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_WRITE]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [NONE]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [READ]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE_NOWAIT]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [FORCE]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_READ]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_WRITE]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID79_0_, tcompany0_.companyAddress as companyA2_79_0_, tcompany0_.companyName as companyN3_79_0_, tcompany0_.companyPassword as companyP4_79_0_, tcompany0_.companySpaceSize as companyS5_79_0_, tcompany0_.companyUsedSpace as companyU6_79_0_, tcompany0_.linkMan as linkMan79_0_, tcompany0_.linkManTelephone as linkManT8_79_0_, tcompany0_.logoAddress as logoAddr9_79_0_, tcompany0_.organizationCode as organiz10_79_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TFiles: select tfiles0_.fileDepartmentID as fileDep12_80_1_, tfiles0_.fileID as fileID83_1_, tfiles0_.fileID as fileID83_0_, tfiles0_.fileDepartmentID as fileDep12_83_0_, tfiles0_.folderID as folderID83_0_, tfiles0_.fileUserID as fileUserID83_0_, tfiles0_.fileAttribute as fileAttr2_83_0_, tfiles0_.fileExtension as fileExte3_83_0_, tfiles0_.fileMD5 as fileMD4_83_0_, tfiles0_.fileName as fileName83_0_, tfiles0_.fileNewTime as fileNewT6_83_0_, tfiles0_.filePath as filePath83_0_, tfiles0_.filePrimaryPath as filePrim8_83_0_, tfiles0_.fileSize as fileSize83_0_, tfiles0_.fileStoragePath as fileSto10_83_0_, tfiles0_.fileType as fileType83_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileDepartmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TUsers: select tusers0_.departmentID as departm12_80_1_, tusers0_.userID as userID90_1_, tusers0_.userID as userID90_0_, tusers0_.departmentID as departm12_90_0_, tusers0_.userAuthority as userAuth2_90_0_, tusers0_.userHeadportrait as userHead3_90_0_, tusers0_.userMailbox as userMail4_90_0_, tusers0_.userName as userName90_0_, tusers0_.userPassword as userPass6_90_0_, tusers0_.userSex as userSex90_0_, tusers0_.userSkin as userSkin90_0_, tusers0_.userSpaceSize as userSpac9_90_0_, tusers0_.userTelephone as userTel10_90_0_, tusers0_.userUsedSpace as userUse11_90_0_ from CloudFiles.T_user tusers0_ where tusers0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TDrafts: select tdrafts0_.draftPersonID as draftPer4_90_1_, tdrafts0_.draftID as draftID82_1_, tdrafts0_.draftID as draftID82_0_, tdrafts0_.draftPersonID as draftPer4_82_0_, tdrafts0_.draftNewTime as draftNew2_82_0_, tdrafts0_.draftTransactionID as draftTra3_82_0_ from CloudFiles.T_draft tdrafts0_ where tdrafts0_.draftPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId: select tprivateme0_.sentPersonID as sentPers5_90_1_, tprivateme0_.privateMessageID as privateM1_84_1_, tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.sentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId: select tsenttrans0_.receiveTransactionPersonID as receiveT5_90_1_, tsenttrans0_.sentTransactionID as sentTran1_86_1_, tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.receiveTransactionPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TTransactionMessages: select ttransacti0_.transactionID as transact4_88_1_, ttransacti0_.transactionMessageID as transact1_89_1_, ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TTransactionMessages: select ttransacti0_.userID as userID90_1_, ttransacti0_.transactionMessageID as transact1_89_1_, ttransacti0_.transactionMessageID as transact1_89_0_, ttransacti0_.transactionID as transact4_89_0_, ttransacti0_.userID as userID89_0_, ttransacti0_.transactionMessageSentContent as transact2_89_0_, ttransacti0_.transactionMessageSentTime as transact3_89_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.userID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TShares: select tshares0_.sentShareSentPersonID as sentSha10_90_1_, tshares0_.shareID as shareID87_1_, tshares0_.shareID as shareID87_0_, tshares0_.sentShareSentPersonID as sentSha10_87_0_, tshares0_.fileID as fileID87_0_, tshares0_.filetype as filetype87_0_, tshares0_.folderID as folderID87_0_, tshares0_.isSecretShare as isSecret5_87_0_, tshares0_.sentShareTime as sentShar6_87_0_, tshares0_.shareAddress as shareAdd7_87_0_, tshares0_.shareName as shareName87_0_, tshares0_.sharePassword as sharePas9_87_0_ from CloudFiles.T_share tshares0_ where tshares0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TDepartmentOperations: select tdepartmen0_.departmentID as departme3_80_1_, tdepartmen0_.departmentOperationID as departme1_81_1_, tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId: select tsentshare0_.sentShareReceiveID as sentShar7_90_1_, tsentshare0_.sentShareID as sentShar1_85_1_, tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareReceiveID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId: select tsentshare0_.sentShareSentPersonID as sentShar8_90_1_, tsentshare0_.sentShareID as sentShar1_85_1_, tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TFiles: select tfiles0_.fileUserID as fileUserID90_1_, tfiles0_.fileID as fileID83_1_, tfiles0_.fileID as fileID83_0_, tfiles0_.fileDepartmentID as fileDep12_83_0_, tfiles0_.folderID as folderID83_0_, tfiles0_.fileUserID as fileUserID83_0_, tfiles0_.fileAttribute as fileAttr2_83_0_, tfiles0_.fileExtension as fileExte3_83_0_, tfiles0_.fileMD5 as fileMD4_83_0_, tfiles0_.fileName as fileName83_0_, tfiles0_.fileNewTime as fileNewT6_83_0_, tfiles0_.filePath as filePath83_0_, tfiles0_.filePrimaryPath as filePrim8_83_0_, tfiles0_.fileSize as fileSize83_0_, tfiles0_.fileStoragePath as fileSto10_83_0_, tfiles0_.fileType as fileType83_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileUserID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TSentTransactions: select tsenttrans0_.transactionID as transact4_88_1_, tsenttrans0_.sentTransactionID as sentTran1_86_1_, tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TShare.TSentShares: select tsentshare0_.shareID as shareID87_1_, tsentshare0_.sentShareID as sentShar1_85_1_, tsentshare0_.sentShareID as sentShar1_85_0_, tsentshare0_.shareID as shareID85_0_, tsentshare0_.sentShareReceiveID as sentShar7_85_0_, tsentshare0_.sentShareSentPersonID as sentShar8_85_0_, tsentshare0_.isChecked as isChecked85_0_, tsentshare0_.sentShareTime as sentShar3_85_0_, tsentshare0_.sentShareUserName as sentShar4_85_0_, tsentshare0_.shareName as shareName85_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.shareID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId: select tsenttrans0_.sentTransactioncolPersonID as sentTran6_90_1_, tsenttrans0_.sentTransactionID as sentTran1_86_1_, tsenttrans0_.sentTransactionID as sentTran1_86_0_, tsenttrans0_.transactionID as transact4_86_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_86_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_86_0_, tsenttrans0_.sentTransactionTime as sentTran2_86_0_, tsenttrans0_.transactionState as transact3_86_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactioncolPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TDepartmentOperations: select tdepartmen0_.fileID as fileID83_1_, tdepartmen0_.departmentOperationID as departme1_81_1_, tdepartmen0_.departmentOperationID as departme1_81_0_, tdepartmen0_.departmentID as departme3_81_0_, tdepartmen0_.fileID as fileID81_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_81_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.fileID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId: select tprivateme0_.receivePersonID as receiveP4_90_1_, tprivateme0_.privateMessageID as privateM1_84_1_, tprivateme0_.privateMessageID as privateM1_84_0_, tprivateme0_.receivePersonID as receiveP4_84_0_, tprivateme0_.sentPersonID as sentPers5_84_0_, tprivateme0_.privateMessageSentContent as privateM2_84_0_, tprivateme0_.privateMessageSentTime as privateM3_84_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.receivePersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TFiles: select tfiles0_.folderID as folderID83_1_, tfiles0_.fileID as fileID83_1_, tfiles0_.fileID as fileID83_0_, tfiles0_.fileDepartmentID as fileDep12_83_0_, tfiles0_.folderID as folderID83_0_, tfiles0_.fileUserID as fileUserID83_0_, tfiles0_.fileAttribute as fileAttr2_83_0_, tfiles0_.fileExtension as fileExte3_83_0_, tfiles0_.fileMD5 as fileMD4_83_0_, tfiles0_.fileName as fileName83_0_, tfiles0_.fileNewTime as fileNewT6_83_0_, tfiles0_.filePath as filePath83_0_, tfiles0_.filePrimaryPath as filePrim8_83_0_, tfiles0_.fileSize as fileSize83_0_, tfiles0_.fileStoragePath as fileSto10_83_0_, tfiles0_.fileType as fileType83_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.folderID=?
DEBUG (SessionFactoryRegistry.java:75) Registering SessionFactory: 54069bca-4614-4c84-a90b-965ef3b97127 (&lt;unnamed&gt;)
DEBUG (SessionFactoryRegistry.java:82) Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG (SessionFactoryImpl.java:484) Instantiated session factory
 INFO (SchemaUpdate.java:182) HHH000228: Running hbm2ddl schema update
 INFO (SchemaUpdate.java:193) HHH000102: Fetching database metadata
 INFO (SchemaUpdate.java:205) HHH000396: Updating schema
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_authorization
 INFO (TableMetadata.java:66) HHH000037: Columns: [token, userid, updatedate]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, userid]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_company
 INFO (TableMetadata.java:66) HHH000037: Columns: [companyusedspace, logoaddress, companyid, linkmantelephone, organizationcode, companypassword, companyaddress, linkman, companyspacesize, companyname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_department
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentusedspace, departmentid, departmentdescription, departmentspacesize, departmentname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_departmentOperation
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentid, departmentoperationid, fileid, departmentoperationauthorityid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [departmentoperation_file, departmentoperation_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [departmentoperation_file_idx, primary, departmentoperation_department_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_draft
 INFO (TableMetadata.java:66) HHH000037: Columns: [draftid, draftnewtime, drafttransactionid, draftpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [draft_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, draft_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_file
 INFO (TableMetadata.java:66) HHH000037: Columns: [filestoragepath, filepath, fileattribute, folderid, filemd5, fileuserid, fileid, filenewtime, fileprimarypath, filesize, fileextension, filename, filetype, filedepartmentid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [file_file, file_user, file_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [file_user_idx, primary, file_department_idx, file_file_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_privateMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [privatemessageid, privatemessagesentcontent, privatemessagesenttime, receivepersonid, sentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [privatemessagereceiveperson_user, privatemessagesentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, privatemessagesentperson_user_idx, privatemessagereceiveperson_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentShare
 INFO (TableMetadata.java:66) HHH000037: Columns: [sentshareid, sentsharetime, shareid, sentsharereceiveid, sharename, ischecked, sentsharesentpersonid, sentshareusername]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [sentshare_share, sentsharesentperson_user, sentsharereceive_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [sentshare_share_idx, sentshare_user_idx, sentshare_user_idx1, primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentTransaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionname, senttransactiontime, transactionid, receivetransactionpersonid, transactionstate, senttransactionid, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [senttransactionreceiveperson_user, senttransaction_transaction, senttransactionsentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [senttransaction_user_idx, primary, senttransactionreceiveperson_user_idx, senttransaction_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_share
 INFO (TableMetadata.java:66) HHH000037: Columns: [folderid, sentsharetime, sharepassword, shareaddress, issecretshare, shareid, filetype, fileid, sharename, sentsharesentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [fk_t_share_t_user1]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, fk_t_share_t_user1_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [senttransactiontime, transactionname, transactionid, transactionattachmentaddress, transactioncontent, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transaction_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transaction_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transactionMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionmessagesenttime, transactionmessagesentcontent, transactionid, userid, transactionmessageid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transactionmessage_transaction, transactionmessage_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transactionmessage_user_idx, transactionmessage_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_user
 INFO (TableMetadata.java:66) HHH000037: Columns: [userusedspace, userspacesize, userpassword, username, departmentid, usersex, userid, userheadportrait, usertelephone, usermailbox, userauthority, userskin]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [user_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [user_department_idx, primary]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
 INFO (SchemaUpdate.java:240) HHH000232: Schema update complete
DEBUG (SessionFactoryImpl.java:1021) Checking 0 named HQL queries
DEBUG (SessionFactoryImpl.java:1044) Checking 0 named SQL queries
DEBUG (StatisticsInitiator.java:110) Statistics initialized [enabled=false]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;baseDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;fileDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;fileDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.FileDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;fileDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;fileDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;fileDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;fileDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.TAuthorizationDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;TAuthorizationDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;TAuthorizationDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;TAuthorizationDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;login&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;login&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;login&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.UserServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userService&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userService&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionAdvice&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionManager&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionManager&apos;
 INFO (HibernateTransactionManager.java:268) Using DataSource [{
	CreateTime:&quot;2015-05-15 10:49:46&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:8065487, ConnectTime:&quot;2015-05-15 10:49:47&quot;, UseCount:2, LastActiveTime:&quot;2015-05-15 10:49:47&quot;}
	]
}] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [move*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [repair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [deleteAndRepair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [find*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [load*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [search*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [datagrid*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;userService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.UserServiceImpl@1c0b2eb]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;userService&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.TokenServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;tokenService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;tokenService&apos;: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;tokenService&apos; to bean named &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;tokenService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.TokenServiceImpl@227089]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;tokenService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;login&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personal&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Personal]: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personal&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personal&apos;: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personFile&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;fileDao&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;personFile&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.personal.impl.PersonFileServiceImpl@7d8933]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personFile&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personal&apos; to bean named &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userService&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;timeTask&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;timeTask&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractApplicationContext.java:850) Unable to locate LifecycleProcessor with name &apos;lifecycleProcessor&apos;: using default [org.springframework.context.support.DefaultLifecycleProcessor@332ac9]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;lifecycleProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
</system-out>
  </testcase>
  <testcase time="0.881" classname="com.bigroad.dao.impl.FileDaoImplTest" name="testGetByFolderID">
    <error message="No Session found for current thread" type="org.hibernate.HibernateException">org.hibernate.HibernateException: No Session found for current thread
	at org.springframework.orm.hibernate4.SpringSessionContext.currentSession(SpringSessionContext.java:97)
	at org.hibernate.internal.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:941)
	at com.bigroad.dao.impl.BaseDaoImpl.getCurrentSession(BaseDaoImpl.java:28)
	at com.bigroad.dao.impl.BaseDaoImpl.find(BaseDaoImpl.java:89)
	at com.bigroad.dao.impl.FileDaoImpl.getByFolderID(FileDaoImpl.java:23)
	at com.bigroad.dao.impl.FileDaoImplTest.testGetByFolderID(FileDaoImplTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (AbstractApplicationContext.java:500) Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7c6e3a: startup date [Fri May 15 10:49:47 CST 2015]; root of context hierarchy
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:140) Loading schema mappings from [META-INF/spring.schemas]
DEBUG (PluggableSchemaResolver.java:146) Loaded schema mappings: {http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (DefaultNamespaceHandlerResolver.java:156) Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/test-classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\control] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\enterprise] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\information] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\letter] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\transaction] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/*/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/*/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\FileDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\dao\impl\UserDaoImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes\com\bigroad\service\user\impl\TokenServiceImplTest.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\BaseDAOI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\DepartmentDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\FileDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\DepartmentDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\SentShareDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TokenTimerUpDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\SentShareDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\TAuthorizationDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\UserDaoI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\CloudFileCon.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\httpclient\Test.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\PersonFileShareI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\TokenServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\UserServiceI.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\Command.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\FreshToken.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\JinTask.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MD5Check.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\PageResults.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\RowMapper.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\TokenProcessor.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\UserToken.class]]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\BaseDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\FileDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\TAuthorizationDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\dao\impl\UserDaoImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Login.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\resource\Personal.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\personal\impl\PersonFileServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\TokenServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\service\user\impl\UserServiceImpl.class]
DEBUG (ClassPathScanningCandidateComponentProvider.java:244) Identified candidate component class: file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\util\MyTestService.class]
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 16 bean definitions from location pattern [spring.xml]
 INFO (XmlBeanDefinitionReader.java:315) Loading XML bean definitions from class path resource [spring-hibernate.xml]
DEBUG (DefaultDocumentLoader.java:72) Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.1.xsd
DEBUG (PluggableSchemaResolver.java:118) Found XML schema [http://www.springframework.org/schema/aop/spring-aop.xsd] in classpath: org/springframework/aop/config/spring-aop-2.5.xsd
DEBUG (DefaultBeanDefinitionDocumentReader.java:108) Loading bean definitions
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;dataSource&apos; as bean name and [] as aliases
DEBUG (BeanDefinitionParserDelegate.java:467) No XML &apos;id&apos; specified - using &apos;transactionManager&apos; as bean name and [] as aliases
DEBUG (AbstractBeanDefinitionReader.java:216) Loaded 7 bean definitions from location pattern [spring-hibernate.xml]
DEBUG (AbstractApplicationContext.java:530) Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@7c6e3a: org.springframework.beans.factory.support.DefaultListableBeanFactory@1a8407b: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0]; root of factory hierarchy
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (MutablePropertySources.java:104) Adding [environmentProperties] PropertySource with lowest search precedence
 INFO (PropertiesLoaderSupport.java:177) Loading properties file from class path resource [config.properties]
DEBUG (MutablePropertySources.java:104) Adding [localProperties] PropertySource with lowest search precedence
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_url&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_url&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_url&apos; in [localProperties] with type [String] and value &apos;jdbc:mysql://172.31.34.115:3306/CloudFiles??useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_username&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_username&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_username&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;jdbc_password&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;jdbc_password&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;jdbc_password&apos; in [localProperties] with type [String] and value &apos;root&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;validationQuery&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;validationQuery&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;validationQuery&apos; in [localProperties] with type [String] and value &apos;SELECT 1&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.format_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.format_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.format_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.show_sql&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.show_sql&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.show_sql&apos; in [localProperties] with type [String] and value &apos;true&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.dialect&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.dialect&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.dialect&apos; in [localProperties] with type [String] and value &apos;org.hibernate.dialect.MySQLDialect&apos;
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [environmentProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemProperties]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [systemEnvironment]
DEBUG (PropertySourcesPropertyResolver.java:93) Could not find key &apos;hibernate.hbm2ddl.auto&apos; in any property source. Returning [null]
DEBUG (PropertySourcesPropertyResolver.java:70) Searching for key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties]
DEBUG (PropertySourcesPropertyResolver.java:79) Found key &apos;hibernate.hbm2ddl.auto&apos; in [localProperties] with type [String] and value &apos;update&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractApplicationContext.java:799) Unable to locate MessageSource with name &apos;messageSource&apos;: using default [org.springframework.context.support.DelegatingMessageSource@1697a63]
DEBUG (AbstractApplicationContext.java:823) Unable to locate ApplicationEventMulticaster with name &apos;applicationEventMulticaster&apos;: using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1e22fa6]
 INFO (DefaultListableBeanFactory.java:581) Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a8407b: defining beans [org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,baseDao,fileDao,TAuthorizationDao,userDao,login,personal,personFile,tokenService,userService,timeTask,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,dataSource,sessionFactory,transactionManager,transactionAdvice,org.springframework.aop.config.internalAutoProxyCreator,transactionPointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;baseDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos; to allow for resolving potential circular references
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionPointcut&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.BaseDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;baseDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;baseDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;sessionFactory&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;dataSource&apos; to allow for resolving potential circular references
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
ERROR (DruidAbstractDataSource.java:935) maxIdle is deprecated
DEBUG (AbstractAutowireCapableBeanFactory.java:1555) Invoking init method  &apos;init&apos; on bean with name &apos;dataSource&apos;
 INFO (DruidDataSource.java:669) {dataSource-5} inited
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;dataSource&apos;
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractEnvironment.java:114) Initializing new StandardEnvironment
DEBUG (MutablePropertySources.java:104) Adding [systemProperties] PropertySource with lowest search precedence
DEBUG (MutablePropertySources.java:104) Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG (AbstractEnvironment.java:120) Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;sessionFactory&apos;
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Boolean -&gt; org.hibernate.type.BooleanType@1889cda
DEBUG (BasicTypeRegistry.java:143) Adding type registration numeric_boolean -&gt; org.hibernate.type.NumericBooleanType@fecba2
DEBUG (BasicTypeRegistry.java:143) Adding type registration true_false -&gt; org.hibernate.type.TrueFalseType@801853
DEBUG (BasicTypeRegistry.java:143) Adding type registration yes_no -&gt; org.hibernate.type.YesNoType@f73e09
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Byte -&gt; org.hibernate.type.ByteType@16486a6
DEBUG (BasicTypeRegistry.java:143) Adding type registration character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration char -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Character -&gt; org.hibernate.type.CharacterType@1d47dde
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Short -&gt; org.hibernate.type.ShortType@9ef237
DEBUG (BasicTypeRegistry.java:143) Adding type registration integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration int -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Integer -&gt; org.hibernate.type.IntegerType@7ebc39
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Long -&gt; org.hibernate.type.LongType@1b75165
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Float -&gt; org.hibernate.type.FloatType@199c9ac
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Double -&gt; org.hibernate.type.DoubleType@8df350
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_decimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigDecimal -&gt; org.hibernate.type.BigDecimalType@135958b
DEBUG (BasicTypeRegistry.java:143) Adding type registration big_integer -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.math.BigInteger -&gt; org.hibernate.type.BigIntegerType@12e8138
DEBUG (BasicTypeRegistry.java:143) Adding type registration string -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.String -&gt; org.hibernate.type.StringType@e6423f
DEBUG (BasicTypeRegistry.java:143) Adding type registration url -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.net.URL -&gt; org.hibernate.type.UrlType@613b3a
DEBUG (BasicTypeRegistry.java:143) Adding type registration date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Date -&gt; org.hibernate.type.DateType@f5da83
DEBUG (BasicTypeRegistry.java:143) Adding type registration time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Time -&gt; org.hibernate.type.TimeType@485d22
DEBUG (BasicTypeRegistry.java:143) Adding type registration timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Timestamp -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Date -&gt; org.hibernate.type.TimestampType@1ce2fd8
DEBUG (BasicTypeRegistry.java:143) Adding type registration dbtimestamp -&gt; org.hibernate.type.DbTimestampType@242102
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Calendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.GregorianCalendar -&gt; org.hibernate.type.CalendarType@12354e4
DEBUG (BasicTypeRegistry.java:143) Adding type registration calendar_date -&gt; org.hibernate.type.CalendarDateType@1efedd5
DEBUG (BasicTypeRegistry.java:143) Adding type registration locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Locale -&gt; org.hibernate.type.LocaleType@8296a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.Currency -&gt; org.hibernate.type.CurrencyType@1cc67fd
DEBUG (BasicTypeRegistry.java:143) Adding type registration timezone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.TimeZone -&gt; org.hibernate.type.TimeZoneType@32177e
DEBUG (BasicTypeRegistry.java:143) Adding type registration class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Class -&gt; org.hibernate.type.ClassType@44aeeb
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-binary -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.util.UUID -&gt; org.hibernate.type.UUIDBinaryType@7f498c
DEBUG (BasicTypeRegistry.java:143) Adding type registration uuid-char -&gt; org.hibernate.type.UUIDCharType@168bc8d
DEBUG (BasicTypeRegistry.java:143) Adding type registration pg-uuid -&gt; org.hibernate.type.PostgresUUIDType@12e827b
DEBUG (BasicTypeRegistry.java:143) Adding type registration binary -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration byte[] -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration [B -&gt; org.hibernate.type.BinaryType@1d07f92
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-binary -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration Byte[] -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Byte; -&gt; org.hibernate.type.WrapperBinaryType@b51c44
DEBUG (BasicTypeRegistry.java:143) Adding type registration image -&gt; org.hibernate.type.ImageType@1c5acda
DEBUG (BasicTypeRegistry.java:143) Adding type registration characters -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration char[] -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration [C -&gt; org.hibernate.type.CharArrayType@1e5e4a4
DEBUG (BasicTypeRegistry.java:143) Adding type registration wrapper-characters -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration [Ljava.lang.Character; -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration Character[] -&gt; org.hibernate.type.CharacterArrayType@19702b5
DEBUG (BasicTypeRegistry.java:143) Adding type registration text -&gt; org.hibernate.type.TextType@ac86bb
DEBUG (BasicTypeRegistry.java:143) Adding type registration blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Blob -&gt; org.hibernate.type.BlobType@13d0a3e
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_blob -&gt; org.hibernate.type.MaterializedBlobType@7780c2
DEBUG (BasicTypeRegistry.java:143) Adding type registration clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.sql.Clob -&gt; org.hibernate.type.ClobType@64c7b
DEBUG (BasicTypeRegistry.java:143) Adding type registration materialized_clob -&gt; org.hibernate.type.MaterializedClobType@13a2cd7
DEBUG (BasicTypeRegistry.java:143) Adding type registration serializable -&gt; org.hibernate.type.SerializableType@33ee9b
DEBUG (BasicTypeRegistry.java:143) Adding type registration object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration java.lang.Object -&gt; org.hibernate.type.ObjectType@1a1567b
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_date -&gt; org.hibernate.type.AdaptedImmutableType@e23f4b
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_time -&gt; org.hibernate.type.AdaptedImmutableType@1a96cf9
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_timestamp -&gt; org.hibernate.type.AdaptedImmutableType@31535d
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_dbtimestamp -&gt; org.hibernate.type.AdaptedImmutableType@5800d1
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar -&gt; org.hibernate.type.AdaptedImmutableType@19dbb5e
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_calendar_date -&gt; org.hibernate.type.AdaptedImmutableType@782889
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_binary -&gt; org.hibernate.type.AdaptedImmutableType@ad512e
DEBUG (BasicTypeRegistry.java:143) Adding type registration imm_serializable -&gt; org.hibernate.type.AdaptedImmutableType@aca568
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid2] -&gt; [org.hibernate.id.UUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [guid] -&gt; [org.hibernate.id.GUIDGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [uuid.hex] -&gt; [org.hibernate.id.UUIDHexGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [hilo] -&gt; [org.hibernate.id.TableHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [assigned] -&gt; [org.hibernate.id.Assigned]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [identity] -&gt; [org.hibernate.id.IdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [select] -&gt; [org.hibernate.id.SelectGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence] -&gt; [org.hibernate.id.SequenceGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [seqhilo] -&gt; [org.hibernate.id.SequenceHiLoGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [increment] -&gt; [org.hibernate.id.IncrementGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [foreign] -&gt; [org.hibernate.id.ForeignGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [sequence-identity] -&gt; [org.hibernate.id.SequenceIdentityGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-sequence] -&gt; [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG (DefaultIdentifierGeneratorFactory.java:93) Registering IdentifierGenerator strategy [enhanced-table] -&gt; [org.hibernate.id.enhanced.TableGenerator]
DEBUG (PathMatchingResourcePatternResolver.java:550) Looking for matching resources in directory tree [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:612) Searching directory [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res] for files matching pattern [F:/eclipse_yjs_all/20150515/cloudfiles/target/classes/com/bigroad/model/**/*.class]
DEBUG (PathMatchingResourcePatternResolver.java:351) Resolved location pattern [classpath*:com/bigroad/model/**/*.class] to resources [file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TAuthorization.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TCompany.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartment.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDepartmentOperation.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TDraft.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TFile.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TPrivateMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TSentTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TShare.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransaction.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TTransactionMessage.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\db\TUser.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\DepartmentInfJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\FolderListJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\PersonFileJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\ShareJson.class], file [F:\eclipse_yjs_all\20150515\cloudfiles\target\classes\com\bigroad\model\res\UserInfJson.class]]
DEBUG (IntegratorServiceImpl.java:59) Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG (Configuration.java:1735) Preparing to build session factory with filters : {}
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TAuthorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TAuthorization
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TAuthorization on table T_authorization
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=userId, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=token, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property token with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for token
DEBUG (PropertyBinder.java:259) Building property token
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_authorization), mappingColumn=updateDate, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property updateDate with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for updateDate
DEBUG (PropertyBinder.java:259) Building property updateDate
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TCompany
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TCompany
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TCompany on table T_company
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyId
DEBUG (PropertyBinder.java:259) Building property companyId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyAddress
DEBUG (PropertyBinder.java:259) Building property companyAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyName
DEBUG (PropertyBinder.java:259) Building property companyName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyPassword
DEBUG (PropertyBinder.java:259) Building property companyPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companySpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companySpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companySpaceSize
DEBUG (PropertyBinder.java:259) Building property companySpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=companyUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property companyUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for companyUsedSpace
DEBUG (PropertyBinder.java:259) Building property companyUsedSpace
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkMan, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkMan with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkMan
DEBUG (PropertyBinder.java:259) Building property linkMan
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=linkManTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property linkManTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for linkManTelephone
DEBUG (PropertyBinder.java:259) Building property linkManTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=logoAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property logoAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for logoAddress
DEBUG (PropertyBinder.java:259) Building property logoAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_company), mappingColumn=organizationCode, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property organizationCode with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for organizationCode
DEBUG (PropertyBinder.java:259) Building property organizationCode
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartment
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartment on table T_department
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentId
DEBUG (PropertyBinder.java:259) Building property departmentId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=TUsers_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TUsers_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TDepartment&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TDepartment.TUsers
DEBUG (PropertyBinder.java:259) Building property TUsers
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentDescription, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentDescription with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentDescription
DEBUG (PropertyBinder.java:259) Building property departmentDescription
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentName
DEBUG (PropertyBinder.java:259) Building property departmentName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentSpaceSize
DEBUG (PropertyBinder.java:259) Building property departmentSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_department), mappingColumn=departmentUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentUsedSpace
DEBUG (PropertyBinder.java:259) Building property departmentUsedSpace
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDepartmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDepartmentOperation
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDepartmentOperation on table T_departmentOperation
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationId
DEBUG (PropertyBinder.java:259) Building property departmentOperationId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_departmentOperation), mappingColumn=departmentOperationAuthorityID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property departmentOperationAuthorityId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for departmentOperationAuthorityId
DEBUG (PropertyBinder.java:259) Building property departmentOperationAuthorityId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TDraft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TDraft
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TDraft on table T_draft
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftId
DEBUG (PropertyBinder.java:259) Building property draftId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;draftPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftNewTime
DEBUG (PropertyBinder.java:259) Building property draftNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_draft), mappingColumn=draftTransactionID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property draftTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for draftTransactionId
DEBUG (PropertyBinder.java:259) Building property draftTransactionId
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TFile
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TFile on table T_file
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileDepartmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TDepartmentOperations_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDepartmentOperations_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (PropertyBinder.java:259) Building property TDepartmentOperations
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;folderID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFile, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TFile
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TFile&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TFile.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;fileUserID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileAttribute, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileAttribute with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileAttribute
DEBUG (PropertyBinder.java:259) Building property fileAttribute
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileExtension, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileExtension with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileExtension
DEBUG (PropertyBinder.java:259) Building property fileExtension
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileMD5, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileMd5 with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileMd5
DEBUG (PropertyBinder.java:259) Building property fileMd5
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileName
DEBUG (PropertyBinder.java:259) Building property fileName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileNewTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileNewTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileNewTime
DEBUG (PropertyBinder.java:259) Building property fileNewTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePath
DEBUG (PropertyBinder.java:259) Building property filePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=filePrimaryPath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filePrimaryPath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filePrimaryPath
DEBUG (PropertyBinder.java:259) Building property filePrimaryPath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileSize
DEBUG (PropertyBinder.java:259) Building property fileSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileStoragePath, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileStoragePath with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileStoragePath
DEBUG (PropertyBinder.java:259) Building property fileStoragePath
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_file), mappingColumn=fileType, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileType with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileType
DEBUG (PropertyBinder.java:259) Building property fileType
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TPrivateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TPrivateMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TPrivateMessage on table T_privateMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageId
DEBUG (PropertyBinder.java:259) Building property privateMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receivePersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserByReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=TUserBySentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentContent
DEBUG (PropertyBinder.java:259) Building property privateMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_privateMessage), mappingColumn=privateMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property privateMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for privateMessageSentTime
DEBUG (PropertyBinder.java:259) Building property privateMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentShare on table T_sentShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareId
DEBUG (PropertyBinder.java:259) Building property sentShareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;shareID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareReceiveID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=TUserBySentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=isChecked, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isChecked with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isChecked
DEBUG (PropertyBinder.java:259) Building property isChecked
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=sentShareUserName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareUserName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareUserName
DEBUG (PropertyBinder.java:259) Building property sentShareUserName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentShare), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TSentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TSentTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TSentTransaction on table T_sentTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionId
DEBUG (PropertyBinder.java:259) Building property sentTransactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;receiveTransactionPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserByReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserByReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentTransactioncolPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=TUserBySentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUserBySentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=sentTransactionTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentTransactionTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentTransactionTime
DEBUG (PropertyBinder.java:259) Building property sentTransactionTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_sentTransaction), mappingColumn=transactionState, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionState with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionState
DEBUG (PropertyBinder.java:259) Building property transactionState
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TShare
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TShare on table T_share
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareId
DEBUG (PropertyBinder.java:259) Building property shareId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TSentShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TShare&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TShare.TSentShares
DEBUG (PropertyBinder.java:259) Building property TSentShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;sentShareSentPersonID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=fileID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property fileId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for fileId
DEBUG (PropertyBinder.java:259) Building property fileId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=filetype, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property filetype with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for filetype
DEBUG (PropertyBinder.java:259) Building property filetype
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=folderID, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property folderId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for folderId
DEBUG (PropertyBinder.java:259) Building property folderId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=isSecretShare, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property isSecretShare with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for isSecretShare
DEBUG (PropertyBinder.java:259) Building property isSecretShare
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sentShareTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sentShareTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sentShareTime
DEBUG (PropertyBinder.java:259) Building property sentShareTime
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareAddress
DEBUG (PropertyBinder.java:259) Building property shareAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=shareName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property shareName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for shareName
DEBUG (PropertyBinder.java:259) Building property shareName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_share), mappingColumn=sharePassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property sharePassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for sharePassword
DEBUG (PropertyBinder.java:259) Building property sharePassword
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransaction
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransaction on table T_transaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionId
DEBUG (PropertyBinder.java:259) Building property transactionId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TSentTransactions_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactions_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (PropertyBinder.java:259) Building property TSentTransactions
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TTransaction&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionAttachmentAddress, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionAttachmentAddress with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionAttachmentAddress
DEBUG (PropertyBinder.java:259) Building property transactionAttachmentAddress
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionContent
DEBUG (PropertyBinder.java:259) Building property transactionContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transaction), mappingColumn=transactionName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionName
DEBUG (PropertyBinder.java:259) Building property transactionName
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TTransactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TTransactionMessage
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TTransactionMessage on table T_transactionMessage
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageId
DEBUG (PropertyBinder.java:259) Building property transactionMessageId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;transactionID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TTransaction, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TTransaction
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;userID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=TUser, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentContent, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentContent with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentContent
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentContent
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_transactionMessage), mappingColumn=transactionMessageSentTime, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property transactionMessageSentTime with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for transactionMessageSentTime
DEBUG (PropertyBinder.java:259) Building property transactionMessageSentTime
DEBUG (AnnotationBinder.java:531) Binding entity from annotated class: com.bigroad.model.db.TUser
DEBUG (Ejb3Column.java:196) Binding column: Ejb3DiscriminatorColumn{logicalColumnName&apos;DTYPE&apos;, discriminatorTypeName=&apos;string&apos;}
DEBUG (AnnotationBinder.java:989) No value specified for &apos;javax.persistence.sharedCache.mode&apos;; using UNSPECIFIED
DEBUG (EntityBinder.java:394) Import with entity name TUser
DEBUG (EntityBinder.java:564) Bind entity com.bigroad.model.db.TUser on table T_user
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userID, insertable=true, updatable=true, unique=true}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userId with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userId
DEBUG (PropertyBinder.java:259) Building property userId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;departmentID&apos;, referencedColumn=&apos;&apos;, mappedBy=&apos;&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDepartment, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:259) Building property TDepartment
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TDrafts_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TDrafts_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TDrafts
DEBUG (PropertyBinder.java:259) Building property TDrafts
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TFiles_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TFiles_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TFiles
DEBUG (PropertyBinder.java:259) Building property TFiles
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForReceivePersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForReceivePersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceivePersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForReceivePersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TPrivateMessagesForSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TPrivateMessagesForSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (PropertyBinder.java:259) Building property TPrivateMessagesForSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareReceiveId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareReceiveId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareReceiveId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareReceiveId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentSharesForSentShareSentPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentSharesForSentShareSentPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentShareSentPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (PropertyBinder.java:259) Building property TSentSharesForSentShareSentPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForReceiveTransactionPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForReceiveTransactionPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserByReceiveTransactionPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForReceiveTransactionPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TSentTransactionsForSentTransactioncolPersonId_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TSentTransactionsForSentTransactioncolPersonId_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUserBySentTransactioncolPersonId&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (PropertyBinder.java:259) Building property TSentTransactionsForSentTransactioncolPersonId
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TShares_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TShares_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TShares
DEBUG (PropertyBinder.java:259) Building property TShares
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=TTransactionMessages_KEY, insertable=true, updatable=true, unique=false}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;TTransactionMessages_KEY&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;null&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (Ejb3Column.java:196) Binding column: Ejb3JoinColumn{logicalColumnName=&apos;null&apos;, referencedColumn=&apos;null&apos;, mappedBy=&apos;TUser&apos;}
DEBUG (CollectionBinder.java:400) Collection role: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (PropertyBinder.java:259) Building property TTransactionMessages
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userAuthority, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userAuthority with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userAuthority
DEBUG (PropertyBinder.java:259) Building property userAuthority
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userHeadportrait, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userHeadportrait with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userHeadportrait
DEBUG (PropertyBinder.java:259) Building property userHeadportrait
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userMailbox, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userMailbox with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userMailbox
DEBUG (PropertyBinder.java:259) Building property userMailbox
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userName, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userName with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userName
DEBUG (PropertyBinder.java:259) Building property userName
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userPassword, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userPassword with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userPassword
DEBUG (PropertyBinder.java:259) Building property userPassword
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSex, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSex with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSex
DEBUG (PropertyBinder.java:259) Building property userSex
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSkin, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSkin with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSkin
DEBUG (PropertyBinder.java:259) Building property userSkin
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userSpaceSize, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userSpaceSize with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userSpaceSize
DEBUG (PropertyBinder.java:259) Building property userSpaceSize
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userTelephone, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userTelephone with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userTelephone
DEBUG (PropertyBinder.java:259) Building property userTelephone
DEBUG (Ejb3Column.java:196) Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CloudFiles.T_user), mappingColumn=userUsedSpace, insertable=true, updatable=true, unique=false}
DEBUG (PropertyBinder.java:178) MetadataSourceProcessor property userUsedSpace with lazy=false
DEBUG (SimpleValueBinder.java:294) building SimpleValue for userUsedSpace
DEBUG (PropertyBinder.java:259) Building property userUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for token
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for updateDate
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companySpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for companyUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkMan
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for linkManTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for logoAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for organizationCode
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentDescription
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentUsedSpace
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for departmentOperationAuthorityId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for draftTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileAttribute
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileExtension
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileMd5
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileNewTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filePrimaryPath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileStoragePath
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileType
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for privateMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isChecked
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareUserName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentTransactionTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionState
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for fileId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for filetype
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for folderId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for isSecretShare
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sentShareTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for shareName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for sharePassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionAttachmentAddress
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentContent
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for transactionMessageSentTime
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userId
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userAuthority
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userHeadportrait
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userMailbox
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userName
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userPassword
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSex
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSkin
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userSpaceSize
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userTelephone
DEBUG (SimpleValueBinder.java:332) Setting SimpleValue typeName for userUsedSpace
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileDepartmentID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TDepartment.TUsers through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TDepartment.TUsers -&gt; T_user
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TUser.TDepartment
DEBUG (CollectionSecondPass.java:80) Mapped collection key: departmentID, one-to-many: com.bigroad.model.db.TUser
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TDepartmentOperations through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TDepartmentOperations -&gt; T_departmentOperation
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDepartmentOperation.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileID, one-to-many: com.bigroad.model.db.TDepartmentOperation
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TFile.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TFile.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TFile
DEBUG (CollectionSecondPass.java:80) Mapped collection key: folderID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TShare.TSentShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TShare.TSentShares -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TShare
DEBUG (CollectionSecondPass.java:80) Mapped collection key: shareID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TSentTransactions through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TSentTransactions -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TTransaction.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TTransaction.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TTransaction
DEBUG (CollectionSecondPass.java:80) Mapped collection key: transactionID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TDrafts through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TDrafts -&gt; T_draft
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TDraft.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: draftPersonID, one-to-many: com.bigroad.model.db.TDraft
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TFiles through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TFiles -&gt; T_file
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TFile.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: fileUserID, one-to-many: com.bigroad.model.db.TFile
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserByReceivePersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receivePersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId -&gt; T_privateMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TPrivateMessage.TUserBySentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentPersonID, one-to-many: com.bigroad.model.db.TPrivateMessage
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareReceiveId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareReceiveID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId -&gt; T_sentShare
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentShare.TUserBySentShareSentPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TSentShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserByReceiveTransactionPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: receiveTransactionPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId -&gt; T_sentTransaction
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TSentTransaction.TUserBySentTransactioncolPersonId
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentTransactioncolPersonID, one-to-many: com.bigroad.model.db.TSentTransaction
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TShares
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TShares through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TShares -&gt; T_share
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TShare.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: sentShareSentPersonID, one-to-many: com.bigroad.model.db.TShare
DEBUG (CollectionSecondPass.java:64) Second pass for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (CollectionBinder.java:759) Binding a OneToMany: com.bigroad.model.db.TUser.TTransactionMessages through a foreign key
DEBUG (CollectionBinder.java:788) Mapping collection: com.bigroad.model.db.TUser.TTransactionMessages -&gt; T_transactionMessage
DEBUG (TableBinder.java:332) Retrieving property com.bigroad.model.db.TTransactionMessage.TUser
DEBUG (CollectionSecondPass.java:80) Mapped collection key: userID, one-to-many: com.bigroad.model.db.TTransactionMessage
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (JdbcServicesImpl.java:121) Database -&gt;
       name : MySQL
    version : 5.5.41-0ubuntu0.14.04.1
      major : 5
      minor : 5
DEBUG (JdbcServicesImpl.java:127) Driver -&gt;
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.34 ( Revision: jess.balint@oracle.com-20141014163213-wqbwpf1ok2kvo1om )
      major : 5
      minor : 1
DEBUG (JdbcServicesImpl.java:133) JDBC version : 4.0
 INFO (Dialect.java:125) HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
DEBUG (SettingsFactory.java:102) Automatic flush during beforeCompletion(): disabled
DEBUG (SettingsFactory.java:108) Automatic session close at end of transaction: disabled
DEBUG (SettingsFactory.java:119) JDBC batch size: 15
DEBUG (SettingsFactory.java:125) JDBC batch updates for versioned data: disabled
DEBUG (SettingsFactory.java:135) Scrollable result sets: enabled
DEBUG (SettingsFactory.java:141) Wrap result sets: disabled
DEBUG (SettingsFactory.java:147) JDBC3 getGeneratedKeys(): enabled
DEBUG (SettingsFactory.java:159) multi-tenancy strategy : NONE
DEBUG (SettingsFactory.java:165) Connection release mode: auto
 INFO (TransactionFactoryInitiator.java:68) HHH000399: Using default transaction strategy (direct JDBC transactions)
DEBUG (SettingsFactory.java:201) Maximum outer join fetch depth: 2
DEBUG (SettingsFactory.java:207) Default batch fetch size: 1
DEBUG (SettingsFactory.java:213) Generate SQL with comments: disabled
DEBUG (SettingsFactory.java:219) Order SQL updates by primary key: disabled
DEBUG (SettingsFactory.java:225) Order SQL inserts for batching: disabled
DEBUG (SettingsFactory.java:450) Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
 INFO (ASTQueryTranslatorFactory.java:48) HHH000397: Using ASTQueryTranslatorFactory
DEBUG (SettingsFactory.java:235) Query language substitutions: {}
DEBUG (SettingsFactory.java:241) JPA-QL strict compliance: disabled
DEBUG (SettingsFactory.java:249) Second-level cache: enabled
DEBUG (SettingsFactory.java:255) Query cache: disabled
DEBUG (SettingsFactory.java:390) Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG (SettingsFactory.java:400) org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
DEBUG (SettingsFactory.java:270) Optimize cache for minimal puts: disabled
DEBUG (SettingsFactory.java:285) Structured second-level cache entries: disabled
DEBUG (SettingsFactory.java:294) Statistics: disabled
DEBUG (SettingsFactory.java:300) Deleted entity synthetic identifier rollback: disabled
DEBUG (SettingsFactory.java:324) Default entity-mode: pojo
DEBUG (SettingsFactory.java:330) Named query checking : enabled
DEBUG (SettingsFactory.java:336) Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG (SessionFactoryImpl.java:223) Building session factory
DEBUG (SessionFactoryImpl.java:275) Session factory constructed with filter configurations : {}
DEBUG (SessionFactoryImpl.java:276) Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin, java.vm.version=21.0-b17, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=F:\eclipse_yjs_all\20150515\cloudfiles, java.runtime.version=1.7.0-b147, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, basedir=F:\eclipse_yjs_all\20150515\cloudfiles, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\endorsed, os.arch=x86, surefire.real.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar, java.io.tmpdir=C:\Users\LIUHON~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=GBK, java.library.path=C:\Program Files\Java\jdk1.7.0\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin/client;C:/Program Files/Java/jdk1.7.0/bin/../jre/bin;C:/Program Files/Java/jdk1.7.0/bin/../jre/lib/i386;C:\Program Files\NVIDIA Corporation\PhysX\Common;C:\Program Files\Java\jdk1.7.0\bin;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Common Files\Thunder Network\KanKan\Codecs;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;D:\20129162336\ration rose\rr2\common;c:\Program Files\Common Files\Ulead Systems\MPEG;C:\Program Files\MySQL\MySQL Server 5.1\bin;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;D:\20129162336\TortoiseSVN\bin;C:\strawberry\c\bin;C:\strawberry\perl\bin;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\runtime\win32;D:\20129162336\MATLAB\Matlab 2012B\MATLAB\bin;C:\Program Files\Cracklock\Bin;D:\20129162336\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;., hibernate.connection.datasource={
	CreateTime:&quot;2015-05-15 10:49:47&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:1,
	ConnectCount:1,
	Connections:[
		{ID:14060725, ConnectTime:&quot;2015-05-15 10:49:48&quot;, UseCount:1, LastActiveTime:&quot;2015-05-15 10:49:48&quot;}
	]
}, surefire.test.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\liuhonghua, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=GBK, hibernate.format_sql=true, user.name=liuhonghua, java.class.path=F:\eclipse_yjs_all\20150515\cloudfiles\target\test-classes;F:\eclipse_yjs_all\20150515\cloudfiles\target\classes;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet\3.0.1\javax.servlet-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp\3.0.1\javax.servlet.jsp-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\javax.servlet.jsp.jstl\3.0.1\javax.servlet.jsp.jstl-3.0.1.jar;C:\Users\liuhonghua\.m2\repository\org\glassfish\web\javax.servlet.jsp.jstl\1.2.1\javax.servlet.jsp.jstl-1.2.1.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jstl\jstl-api\1.2\jstl-api-1.2.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\liuhonghua\.m2\repository\javax\servlet\jsp\jsp-api\2.1\jsp-api-2.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-core\3.1.2.RELEASE\spring-core-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-asm\3.1.2.RELEASE\spring-asm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-context\3.1.2.RELEASE\spring-context-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-jdbc\3.1.2.RELEASE\spring-jdbc-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-tx\3.1.2.RELEASE\spring-tx-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-beans\3.1.2.RELEASE\spring-beans-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-web\3.1.2.RELEASE\spring-web-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-expression\3.1.2.RELEASE\spring-expression-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-orm\3.1.2.RELEASE\spring-orm-3.1.2.RELEASE.jar;C:\Users\liuhonghua\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\liuhonghua\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\hibernate-core\4.1.7.Final\hibernate-core-4.1.7.Final.jar;C:\Users\liuhonghua\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\liuhonghua\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\liuhonghua\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\liuhonghua\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;C:\Users\liuhonghua\.m2\repository\mysql\mysql-connector-java\5.1.34\mysql-connector-java-5.1.34.jar;C:\Users\liuhonghua\.m2\repository\com\alibaba\druid\1.0.12\druid-1.0.12.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\jconsole.jar;C:\Program Files\Java\jdk1.7.0\jre\..\lib\tools.jar;C:\Users\liuhonghua\.m2\repository\org\aspectj\aspectjweaver\1.7.0\aspectjweaver-1.7.0.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-server\1.8\jersey-server-1.8.jar;C:\Users\liuhonghua\.m2\repository\asm\asm\3.1\asm-3.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-core\1.8\jersey-core-1.8.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\jersey-json\1.8\jersey-json-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jettison\jettison\1.1\jettison-1.1.jar;C:\Users\liuhonghua\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.3-1\jaxb-impl-2.2.3-1.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\bind\jaxb-api\2.2.2\jaxb-api-2.2.2.jar;C:\Users\liuhonghua\.m2\repository\javax\xml\stream\stax-api\1.0-2\stax-api-1.0-2.jar;C:\Users\liuhonghua\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.7.1\jackson-core-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.7.1\jackson-mapper-asl-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.7.1\jackson-jaxrs-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\org\codehaus\jackson\jackson-xc\1.7.1\jackson-xc-1.7.1.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-spring\1.8\jersey-spring-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\springframework\spring-aop\2.5.6.SEC03\spring-aop-2.5.6.SEC03.jar;C:\Users\liuhonghua\.m2\repository\com\sun\jersey\contribs\jersey-multipart\1.8\jersey-multipart-1.8.jar;C:\Users\liuhonghua\.m2\repository\org\jvnet\mimepull\1.4\mimepull-1.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpclient\4.4\httpclient-4.4.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpcore\4.4\httpcore-4.4.jar;C:\Users\liuhonghua\.m2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;C:\Users\liuhonghua\.m2\repository\org\apache\httpcomponents\httpmime\4.4\httpmime-4.4.jar;C:\Users\liuhonghua\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@12940b3, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0\jre, sun.java.command=F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefirebooter4291030962436717517.jar F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire4193884015818501124tmp F:\eclipse_yjs_all\20150515\cloudfiles\target\surefire\surefire_05322085908533930276tmp, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0, java.ext.dirs=C:\Program Files\Java\jdk1.7.0\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0\jre\classes, java.vendor=Oracle Corporation, localRepository=C:\Users\liuhonghua\.m2\repository, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionID from CloudFiles.T_transaction where transactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionID, ttransacti_.transactionAttachmentAddress as transact2_114_, ttransacti_.transactionContent as transact3_114_, ttransacti_.transactionName as transact4_114_ from CloudFiles.T_transaction ttransacti_ where ttransacti_.transactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transaction (transactionAttachmentAddress, transactionContent, transactionName, transactionID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transaction set transactionAttachmentAddress=?, transactionContent=?, transactionName=? where transactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transaction where transactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TFile
DEBUG (AbstractEntityPersister.java:3491)  Version select: select fileID from CloudFiles.T_file where fileID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tfile_.fileID, tfile_.fileDepartmentID as fileDep12_109_, tfile_.folderID as folderID109_, tfile_.fileUserID as fileUserID109_, tfile_.fileAttribute as fileAttr2_109_, tfile_.fileExtension as fileExte3_109_, tfile_.fileMD5 as fileMD4_109_, tfile_.fileName as fileName109_, tfile_.fileNewTime as fileNewT6_109_, tfile_.filePath as filePath109_, tfile_.filePrimaryPath as filePrim8_109_, tfile_.fileSize as fileSize109_, tfile_.fileStoragePath as fileSto10_109_, tfile_.fileType as fileType109_ from CloudFiles.T_file tfile_ where tfile_.fileID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_file (fileDepartmentID, folderID, fileUserID, fileAttribute, fileExtension, fileMD5, fileName, fileNewTime, filePath, filePrimaryPath, fileSize, fileStoragePath, fileType, fileID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_file set fileDepartmentID=?, folderID=?, fileUserID=?, fileAttribute=?, fileExtension=?, fileMD5=?, fileName=?, fileNewTime=?, filePath=?, filePrimaryPath=?, fileSize=?, fileStoragePath=?, fileType=? where fileID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_file where fileID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDraft
DEBUG (AbstractEntityPersister.java:3491)  Version select: select draftID from CloudFiles.T_draft where draftID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdraft_.draftID, tdraft_.draftPersonID as draftPer4_108_, tdraft_.draftNewTime as draftNew2_108_, tdraft_.draftTransactionID as draftTra3_108_ from CloudFiles.T_draft tdraft_ where tdraft_.draftID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_draft (draftPersonID, draftNewTime, draftTransactionID, draftID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_draft set draftPersonID=?, draftNewTime=?, draftTransactionID=? where draftID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_draft where draftID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select shareID from CloudFiles.T_share where shareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tshare_.shareID, tshare_.sentShareSentPersonID as sentSha10_113_, tshare_.fileID as fileID113_, tshare_.filetype as filetype113_, tshare_.folderID as folderID113_, tshare_.isSecretShare as isSecret5_113_, tshare_.sentShareTime as sentShar6_113_, tshare_.shareAddress as shareAdd7_113_, tshare_.shareName as shareName113_, tshare_.sharePassword as sharePas9_113_ from CloudFiles.T_share tshare_ where tshare_.shareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_share (sentShareSentPersonID, fileID, filetype, folderID, isSecretShare, sentShareTime, shareAddress, shareName, sharePassword, shareID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_share set sentShareSentPersonID=?, fileID=?, filetype=?, folderID=?, isSecretShare=?, sentShareTime=?, shareAddress=?, shareName=?, sharePassword=? where shareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_share where shareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TAuthorization
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userId from CloudFiles.T_authorization where userId =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tauthoriza_.userId, tauthoriza_.token as token104_, tauthoriza_.updateDate as updateDate104_ from CloudFiles.T_authorization tauthoriza_ where tauthoriza_.userId=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_authorization (token, updateDate, userId) values (?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_authorization set token=?, updateDate=? where userId=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_authorization where userId=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartmentOperation
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentOperationID from CloudFiles.T_departmentOperation where departmentOperationID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentOperationID, tdepartmen_.departmentID as departme3_107_, tdepartmen_.fileID as fileID107_, tdepartmen_.departmentOperationAuthorityID as departme2_107_ from CloudFiles.T_departmentOperation tdepartmen_ where tdepartmen_.departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_departmentOperation (departmentID, fileID, departmentOperationAuthorityID, departmentOperationID) values (?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_departmentOperation set departmentID=?, fileID=?, departmentOperationAuthorityID=? where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_departmentOperation where departmentOperationID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentShare
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentShareID from CloudFiles.T_sentShare where sentShareID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsentshare_.sentShareID, tsentshare_.shareID as shareID111_, tsentshare_.sentShareReceiveID as sentShar7_111_, tsentshare_.sentShareSentPersonID as sentShar8_111_, tsentshare_.isChecked as isChecked111_, tsentshare_.sentShareTime as sentShar3_111_, tsentshare_.sentShareUserName as sentShar4_111_, tsentshare_.shareName as shareName111_ from CloudFiles.T_sentShare tsentshare_ where tsentshare_.sentShareID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentShare (shareID, sentShareReceiveID, sentShareSentPersonID, isChecked, sentShareTime, sentShareUserName, shareName, sentShareID) values (?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentShare set shareID=?, sentShareReceiveID=?, sentShareSentPersonID=?, isChecked=?, sentShareTime=?, sentShareUserName=?, shareName=? where sentShareID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentShare where sentShareID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TSentTransaction
DEBUG (AbstractEntityPersister.java:3491)  Version select: select sentTransactionID from CloudFiles.T_sentTransaction where sentTransactionID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tsenttrans_.sentTransactionID, tsenttrans_.transactionID as transact4_112_, tsenttrans_.receiveTransactionPersonID as receiveT5_112_, tsenttrans_.sentTransactioncolPersonID as sentTran6_112_, tsenttrans_.sentTransactionTime as sentTran2_112_, tsenttrans_.transactionState as transact3_112_ from CloudFiles.T_sentTransaction tsenttrans_ where tsenttrans_.sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_sentTransaction (transactionID, receiveTransactionPersonID, sentTransactioncolPersonID, sentTransactionTime, transactionState, sentTransactionID) values (?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_sentTransaction set transactionID=?, receiveTransactionPersonID=?, sentTransactioncolPersonID=?, sentTransactionTime=?, transactionState=? where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_sentTransaction where sentTransactionID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TTransactionMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select transactionMessageID from CloudFiles.T_transactionMessage where transactionMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select ttransacti_.transactionMessageID, ttransacti_.transactionID as transact4_115_, ttransacti_.userID as userID115_, ttransacti_.transactionMessageSentContent as transact2_115_, ttransacti_.transactionMessageSentTime as transact3_115_ from CloudFiles.T_transactionMessage ttransacti_ where ttransacti_.transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_transactionMessage (transactionID, userID, transactionMessageSentContent, transactionMessageSentTime, transactionMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_transactionMessage set transactionID=?, userID=?, transactionMessageSentContent=?, transactionMessageSentTime=? where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_transactionMessage where transactionMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TDepartment
DEBUG (AbstractEntityPersister.java:3491)  Version select: select departmentID from CloudFiles.T_department where departmentID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tdepartmen_.departmentID, tdepartmen_.departmentDescription as departme2_106_, tdepartmen_.departmentName as departme3_106_, tdepartmen_.departmentSpaceSize as departme4_106_, tdepartmen_.departmentUsedSpace as departme5_106_ from CloudFiles.T_department tdepartmen_ where tdepartmen_.departmentID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_department (departmentDescription, departmentName, departmentSpaceSize, departmentUsedSpace, departmentID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_department set departmentDescription=?, departmentName=?, departmentSpaceSize=?, departmentUsedSpace=? where departmentID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_department where departmentID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TUser
DEBUG (AbstractEntityPersister.java:3491)  Version select: select userID from CloudFiles.T_user where userID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tuser_.userID, tuser_.departmentID as departm12_116_, tuser_.userAuthority as userAuth2_116_, tuser_.userHeadportrait as userHead3_116_, tuser_.userMailbox as userMail4_116_, tuser_.userName as userName116_, tuser_.userPassword as userPass6_116_, tuser_.userSex as userSex116_, tuser_.userSkin as userSkin116_, tuser_.userSpaceSize as userSpac9_116_, tuser_.userTelephone as userTel10_116_, tuser_.userUsedSpace as userUse11_116_ from CloudFiles.T_user tuser_ where tuser_.userID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_user (departmentID, userAuthority, userHeadportrait, userMailbox, userName, userPassword, userSex, userSkin, userSpaceSize, userTelephone, userUsedSpace, userID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_user set departmentID=?, userAuthority=?, userHeadportrait=?, userMailbox=?, userName=?, userPassword=?, userSex=?, userSkin=?, userSpaceSize=?, userTelephone=?, userUsedSpace=? where userID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_user where userID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TPrivateMessage
DEBUG (AbstractEntityPersister.java:3491)  Version select: select privateMessageID from CloudFiles.T_privateMessage where privateMessageID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tprivateme_.privateMessageID, tprivateme_.receivePersonID as receiveP4_110_, tprivateme_.sentPersonID as sentPers5_110_, tprivateme_.privateMessageSentContent as privateM2_110_, tprivateme_.privateMessageSentTime as privateM3_110_ from CloudFiles.T_privateMessage tprivateme_ where tprivateme_.privateMessageID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_privateMessage (receivePersonID, sentPersonID, privateMessageSentContent, privateMessageSentTime, privateMessageID) values (?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_privateMessage set receivePersonID=?, sentPersonID=?, privateMessageSentContent=?, privateMessageSentTime=? where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_privateMessage where privateMessageID=?
DEBUG (AbstractEntityPersister.java:3486) Static SQL for entity: com.bigroad.model.db.TCompany
DEBUG (AbstractEntityPersister.java:3491)  Version select: select companyID from CloudFiles.T_company where companyID =?
DEBUG (AbstractEntityPersister.java:3494)  Snapshot select: select tcompany_.companyID, tcompany_.companyAddress as companyA2_105_, tcompany_.companyName as companyN3_105_, tcompany_.companyPassword as companyP4_105_, tcompany_.companySpaceSize as companyS5_105_, tcompany_.companyUsedSpace as companyU6_105_, tcompany_.linkMan as linkMan105_, tcompany_.linkManTelephone as linkManT8_105_, tcompany_.logoAddress as logoAddr9_105_, tcompany_.organizationCode as organiz10_105_ from CloudFiles.T_company tcompany_ where tcompany_.companyID=?
DEBUG (AbstractEntityPersister.java:3497)  Insert 0: insert into CloudFiles.T_company (companyAddress, companyName, companyPassword, companySpaceSize, companyUsedSpace, linkMan, linkManTelephone, logoAddress, organizationCode, companyID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG (AbstractEntityPersister.java:3498)  Update 0: update CloudFiles.T_company set companyAddress=?, companyName=?, companyPassword=?, companySpaceSize=?, companyUsedSpace=?, linkMan=?, linkManTelephone=?, logoAddress=?, organizationCode=? where companyID=?
DEBUG (AbstractEntityPersister.java:3499)  Delete 0: delete from CloudFiles.T_company where companyID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileDepartmentID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileDepartmentID=null where fileDepartmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TUsers
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_user set departmentID=? where userID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_user set departmentID=null where departmentID=? and userID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_user set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TDrafts
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_draft set draftPersonID=? where draftID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=? and draftID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_draft set draftPersonID=null where draftPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set sentPersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set sentPersonID=null where sentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set receiveTransactionPersonID=null where receiveTransactionPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set transactionID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TTransactionMessages
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_transactionMessage set userID=? where transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_transactionMessage set userID=null where userID=? and transactionMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_transactionMessage set userID=null where userID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_share set sentShareSentPersonID=? where shareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=? and shareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_share set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TDepartment.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set departmentID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set departmentID=null where departmentID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareReceiveID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareReceiveID=null where sentShareReceiveID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set sentShareSentPersonID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set sentShareSentPersonID=null where sentShareSentPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set sentTransactioncolPersonID=null where sentTransactioncolPersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TDepartmentOperations
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_departmentOperation set fileID=? where departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=? and departmentOperationID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_departmentOperation set fileID=null where fileID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TShare.TSentShares
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentShare set shareID=? where sentShareID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentShare set shareID=null where shareID=? and sentShareID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentShare set shareID=null where shareID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TTransaction.TSentTransactions
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_sentTransaction set transactionID=? where sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=? and sentTransactionID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_sentTransaction set transactionID=null where transactionID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set fileUserID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set fileUserID=null where fileUserID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set fileUserID=null where fileUserID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_privateMessage set receivePersonID=? where privateMessageID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=? and privateMessageID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_privateMessage set receivePersonID=null where receivePersonID=?
DEBUG (AbstractCollectionPersister.java:669) Static SQL for collection: com.bigroad.model.db.TFile.TFiles
DEBUG (AbstractCollectionPersister.java:670)  Row insert: update CloudFiles.T_file set folderID=? where fileID=?
DEBUG (AbstractCollectionPersister.java:672)  Row delete: update CloudFiles.T_file set folderID=null where folderID=? and fileID=?
DEBUG (AbstractCollectionPersister.java:673)  One-shot delete: update CloudFiles.T_file set folderID=null where folderID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [NONE]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [READ]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [UPGRADE_NOWAIT]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [FORCE]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_READ]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_WRITE]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransaction [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransaction: select ttransacti0_.transactionID as transact1_114_0_, ttransacti0_.transactionAttachmentAddress as transact2_114_0_, ttransacti0_.transactionContent as transact3_114_0_, ttransacti0_.transactionName as transact4_114_0_ from CloudFiles.T_transaction ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [NONE]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [READ]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [UPGRADE_NOWAIT]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [FORCE]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_READ]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_WRITE]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [PESSIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TFile [OPTIMISTIC_FORCE_INCREMENT]: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TFile: select tfile0_.fileID as fileID109_0_, tfile0_.fileDepartmentID as fileDep12_109_0_, tfile0_.folderID as folderID109_0_, tfile0_.fileUserID as fileUserID109_0_, tfile0_.fileAttribute as fileAttr2_109_0_, tfile0_.fileExtension as fileExte3_109_0_, tfile0_.fileMD5 as fileMD4_109_0_, tfile0_.fileName as fileName109_0_, tfile0_.fileNewTime as fileNewT6_109_0_, tfile0_.filePath as filePath109_0_, tfile0_.filePrimaryPath as filePrim8_109_0_, tfile0_.fileSize as fileSize109_0_, tfile0_.fileStoragePath as fileSto10_109_0_, tfile0_.fileType as fileType109_0_ from CloudFiles.T_file tfile0_ where tfile0_.fileID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [NONE]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [READ]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [UPGRADE_NOWAIT]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [FORCE]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_READ]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_WRITE]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [PESSIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDraft [OPTIMISTIC_FORCE_INCREMENT]: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDraft: select tdraft0_.draftID as draftID108_0_, tdraft0_.draftPersonID as draftPer4_108_0_, tdraft0_.draftNewTime as draftNew2_108_0_, tdraft0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdraft0_ where tdraft0_.draftID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [NONE]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [READ]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [UPGRADE_NOWAIT]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [FORCE]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_READ]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_WRITE]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [PESSIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TShare [OPTIMISTIC_FORCE_INCREMENT]: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TShare: select tshare0_.shareID as shareID113_0_, tshare0_.sentShareSentPersonID as sentSha10_113_0_, tshare0_.fileID as fileID113_0_, tshare0_.filetype as filetype113_0_, tshare0_.folderID as folderID113_0_, tshare0_.isSecretShare as isSecret5_113_0_, tshare0_.sentShareTime as sentShar6_113_0_, tshare0_.shareAddress as shareAdd7_113_0_, tshare0_.shareName as shareName113_0_, tshare0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshare0_ where tshare0_.shareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [NONE]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [READ]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [UPGRADE_NOWAIT]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [FORCE]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_READ]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_WRITE]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [PESSIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TAuthorization [OPTIMISTIC_FORCE_INCREMENT]: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TAuthorization: select tauthoriza0_.userId as userId104_0_, tauthoriza0_.token as token104_0_, tauthoriza0_.updateDate as updateDate104_0_ from CloudFiles.T_authorization tauthoriza0_ where tauthoriza0_.userId=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [NONE]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [READ]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [UPGRADE_NOWAIT]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [FORCE]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_READ]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartmentOperation [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartmentOperation: select tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentOperationID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [NONE]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [READ]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [UPGRADE_NOWAIT]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [FORCE]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_READ]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_WRITE]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [PESSIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentShare [OPTIMISTIC_FORCE_INCREMENT]: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentShare: select tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [NONE]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [READ]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [UPGRADE_NOWAIT]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [FORCE]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_READ]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_WRITE]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [PESSIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TSentTransaction [OPTIMISTIC_FORCE_INCREMENT]: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TSentTransaction: select tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactionID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [NONE]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [READ]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [UPGRADE_NOWAIT]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [FORCE]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_READ]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_WRITE]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [PESSIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TTransactionMessage [OPTIMISTIC_FORCE_INCREMENT]: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TTransactionMessage: select ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [NONE]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [READ]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [UPGRADE_NOWAIT]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [FORCE]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_READ]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_WRITE]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [PESSIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TDepartment [OPTIMISTIC_FORCE_INCREMENT]: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TDepartment: select tdepartmen0_.departmentID as departme1_106_0_, tdepartmen0_.departmentDescription as departme2_106_0_, tdepartmen0_.departmentName as departme3_106_0_, tdepartmen0_.departmentSpaceSize as departme4_106_0_, tdepartmen0_.departmentUsedSpace as departme5_106_0_ from CloudFiles.T_department tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [NONE]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [READ]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [UPGRADE_NOWAIT]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [FORCE]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_READ]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_WRITE]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [PESSIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TUser [OPTIMISTIC_FORCE_INCREMENT]: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TUser: select tuser0_.userID as userID116_0_, tuser0_.departmentID as departm12_116_0_, tuser0_.userAuthority as userAuth2_116_0_, tuser0_.userHeadportrait as userHead3_116_0_, tuser0_.userMailbox as userMail4_116_0_, tuser0_.userName as userName116_0_, tuser0_.userPassword as userPass6_116_0_, tuser0_.userSex as userSex116_0_, tuser0_.userSkin as userSkin116_0_, tuser0_.userSpaceSize as userSpac9_116_0_, tuser0_.userTelephone as userTel10_116_0_, tuser0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tuser0_ where tuser0_.userID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [NONE]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [READ]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [UPGRADE_NOWAIT]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [FORCE]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_READ]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_WRITE]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [PESSIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TPrivateMessage [OPTIMISTIC_FORCE_INCREMENT]: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TPrivateMessage: select tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.privateMessageID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [NONE]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [READ]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [UPGRADE_NOWAIT]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [FORCE]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_READ]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? lock in share mode
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_WRITE]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [PESSIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=? for update
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (EntityLoader.java:123) Static select for entity com.bigroad.model.db.TCompany [OPTIMISTIC_FORCE_INCREMENT]: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_MERGE on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (CascadeEntityLoader.java:56) Static select for action ACTION_REFRESH on entity com.bigroad.model.db.TCompany: select tcompany0_.companyID as companyID105_0_, tcompany0_.companyAddress as companyA2_105_0_, tcompany0_.companyName as companyN3_105_0_, tcompany0_.companyPassword as companyP4_105_0_, tcompany0_.companySpaceSize as companyS5_105_0_, tcompany0_.companyUsedSpace as companyU6_105_0_, tcompany0_.linkMan as linkMan105_0_, tcompany0_.linkManTelephone as linkManT8_105_0_, tcompany0_.logoAddress as logoAddr9_105_0_, tcompany0_.organizationCode as organiz10_105_0_ from CloudFiles.T_company tcompany0_ where tcompany0_.companyID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TFiles: select tfiles0_.fileDepartmentID as fileDep12_106_1_, tfiles0_.fileID as fileID109_1_, tfiles0_.fileID as fileID109_0_, tfiles0_.fileDepartmentID as fileDep12_109_0_, tfiles0_.folderID as folderID109_0_, tfiles0_.fileUserID as fileUserID109_0_, tfiles0_.fileAttribute as fileAttr2_109_0_, tfiles0_.fileExtension as fileExte3_109_0_, tfiles0_.fileMD5 as fileMD4_109_0_, tfiles0_.fileName as fileName109_0_, tfiles0_.fileNewTime as fileNewT6_109_0_, tfiles0_.filePath as filePath109_0_, tfiles0_.filePrimaryPath as filePrim8_109_0_, tfiles0_.fileSize as fileSize109_0_, tfiles0_.fileStoragePath as fileSto10_109_0_, tfiles0_.fileType as fileType109_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileDepartmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TUsers: select tusers0_.departmentID as departm12_106_1_, tusers0_.userID as userID116_1_, tusers0_.userID as userID116_0_, tusers0_.departmentID as departm12_116_0_, tusers0_.userAuthority as userAuth2_116_0_, tusers0_.userHeadportrait as userHead3_116_0_, tusers0_.userMailbox as userMail4_116_0_, tusers0_.userName as userName116_0_, tusers0_.userPassword as userPass6_116_0_, tusers0_.userSex as userSex116_0_, tusers0_.userSkin as userSkin116_0_, tusers0_.userSpaceSize as userSpac9_116_0_, tusers0_.userTelephone as userTel10_116_0_, tusers0_.userUsedSpace as userUse11_116_0_ from CloudFiles.T_user tusers0_ where tusers0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TDrafts: select tdrafts0_.draftPersonID as draftPer4_116_1_, tdrafts0_.draftID as draftID108_1_, tdrafts0_.draftID as draftID108_0_, tdrafts0_.draftPersonID as draftPer4_108_0_, tdrafts0_.draftNewTime as draftNew2_108_0_, tdrafts0_.draftTransactionID as draftTra3_108_0_ from CloudFiles.T_draft tdrafts0_ where tdrafts0_.draftPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForSentPersonId: select tprivateme0_.sentPersonID as sentPers5_116_1_, tprivateme0_.privateMessageID as privateM1_110_1_, tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.sentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForReceiveTransactionPersonId: select tsenttrans0_.receiveTransactionPersonID as receiveT5_116_1_, tsenttrans0_.sentTransactionID as sentTran1_112_1_, tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.receiveTransactionPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TTransactionMessages: select ttransacti0_.transactionID as transact4_114_1_, ttransacti0_.transactionMessageID as transact1_115_1_, ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TTransactionMessages: select ttransacti0_.userID as userID116_1_, ttransacti0_.transactionMessageID as transact1_115_1_, ttransacti0_.transactionMessageID as transact1_115_0_, ttransacti0_.transactionID as transact4_115_0_, ttransacti0_.userID as userID115_0_, ttransacti0_.transactionMessageSentContent as transact2_115_0_, ttransacti0_.transactionMessageSentTime as transact3_115_0_ from CloudFiles.T_transactionMessage ttransacti0_ where ttransacti0_.userID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TShares: select tshares0_.sentShareSentPersonID as sentSha10_116_1_, tshares0_.shareID as shareID113_1_, tshares0_.shareID as shareID113_0_, tshares0_.sentShareSentPersonID as sentSha10_113_0_, tshares0_.fileID as fileID113_0_, tshares0_.filetype as filetype113_0_, tshares0_.folderID as folderID113_0_, tshares0_.isSecretShare as isSecret5_113_0_, tshares0_.sentShareTime as sentShar6_113_0_, tshares0_.shareAddress as shareAdd7_113_0_, tshares0_.shareName as shareName113_0_, tshares0_.sharePassword as sharePas9_113_0_ from CloudFiles.T_share tshares0_ where tshares0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TDepartment.TDepartmentOperations: select tdepartmen0_.departmentID as departme3_106_1_, tdepartmen0_.departmentOperationID as departme1_107_1_, tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.departmentID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareReceiveId: select tsentshare0_.sentShareReceiveID as sentShar7_116_1_, tsentshare0_.sentShareID as sentShar1_111_1_, tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareReceiveID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentSharesForSentShareSentPersonId: select tsentshare0_.sentShareSentPersonID as sentShar8_116_1_, tsentshare0_.sentShareID as sentShar1_111_1_, tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.sentShareSentPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TFiles: select tfiles0_.fileUserID as fileUserID116_1_, tfiles0_.fileID as fileID109_1_, tfiles0_.fileID as fileID109_0_, tfiles0_.fileDepartmentID as fileDep12_109_0_, tfiles0_.folderID as folderID109_0_, tfiles0_.fileUserID as fileUserID109_0_, tfiles0_.fileAttribute as fileAttr2_109_0_, tfiles0_.fileExtension as fileExte3_109_0_, tfiles0_.fileMD5 as fileMD4_109_0_, tfiles0_.fileName as fileName109_0_, tfiles0_.fileNewTime as fileNewT6_109_0_, tfiles0_.filePath as filePath109_0_, tfiles0_.filePrimaryPath as filePrim8_109_0_, tfiles0_.fileSize as fileSize109_0_, tfiles0_.fileStoragePath as fileSto10_109_0_, tfiles0_.fileType as fileType109_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.fileUserID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TTransaction.TSentTransactions: select tsenttrans0_.transactionID as transact4_114_1_, tsenttrans0_.sentTransactionID as sentTran1_112_1_, tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.transactionID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TShare.TSentShares: select tsentshare0_.shareID as shareID113_1_, tsentshare0_.sentShareID as sentShar1_111_1_, tsentshare0_.sentShareID as sentShar1_111_0_, tsentshare0_.shareID as shareID111_0_, tsentshare0_.sentShareReceiveID as sentShar7_111_0_, tsentshare0_.sentShareSentPersonID as sentShar8_111_0_, tsentshare0_.isChecked as isChecked111_0_, tsentshare0_.sentShareTime as sentShar3_111_0_, tsentshare0_.sentShareUserName as sentShar4_111_0_, tsentshare0_.shareName as shareName111_0_ from CloudFiles.T_sentShare tsentshare0_ where tsentshare0_.shareID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TSentTransactionsForSentTransactioncolPersonId: select tsenttrans0_.sentTransactioncolPersonID as sentTran6_116_1_, tsenttrans0_.sentTransactionID as sentTran1_112_1_, tsenttrans0_.sentTransactionID as sentTran1_112_0_, tsenttrans0_.transactionID as transact4_112_0_, tsenttrans0_.receiveTransactionPersonID as receiveT5_112_0_, tsenttrans0_.sentTransactioncolPersonID as sentTran6_112_0_, tsenttrans0_.sentTransactionTime as sentTran2_112_0_, tsenttrans0_.transactionState as transact3_112_0_ from CloudFiles.T_sentTransaction tsenttrans0_ where tsenttrans0_.sentTransactioncolPersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TDepartmentOperations: select tdepartmen0_.fileID as fileID109_1_, tdepartmen0_.departmentOperationID as departme1_107_1_, tdepartmen0_.departmentOperationID as departme1_107_0_, tdepartmen0_.departmentID as departme3_107_0_, tdepartmen0_.fileID as fileID107_0_, tdepartmen0_.departmentOperationAuthorityID as departme2_107_0_ from CloudFiles.T_departmentOperation tdepartmen0_ where tdepartmen0_.fileID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TUser.TPrivateMessagesForReceivePersonId: select tprivateme0_.receivePersonID as receiveP4_116_1_, tprivateme0_.privateMessageID as privateM1_110_1_, tprivateme0_.privateMessageID as privateM1_110_0_, tprivateme0_.receivePersonID as receiveP4_110_0_, tprivateme0_.sentPersonID as sentPers5_110_0_, tprivateme0_.privateMessageSentContent as privateM2_110_0_, tprivateme0_.privateMessageSentTime as privateM3_110_0_ from CloudFiles.T_privateMessage tprivateme0_ where tprivateme0_.receivePersonID=?
DEBUG (OneToManyLoader.java:82) Static select for one-to-many com.bigroad.model.db.TFile.TFiles: select tfiles0_.folderID as folderID109_1_, tfiles0_.fileID as fileID109_1_, tfiles0_.fileID as fileID109_0_, tfiles0_.fileDepartmentID as fileDep12_109_0_, tfiles0_.folderID as folderID109_0_, tfiles0_.fileUserID as fileUserID109_0_, tfiles0_.fileAttribute as fileAttr2_109_0_, tfiles0_.fileExtension as fileExte3_109_0_, tfiles0_.fileMD5 as fileMD4_109_0_, tfiles0_.fileName as fileName109_0_, tfiles0_.fileNewTime as fileNewT6_109_0_, tfiles0_.filePath as filePath109_0_, tfiles0_.filePrimaryPath as filePrim8_109_0_, tfiles0_.fileSize as fileSize109_0_, tfiles0_.fileStoragePath as fileSto10_109_0_, tfiles0_.fileType as fileType109_0_ from CloudFiles.T_file tfiles0_ where tfiles0_.folderID=?
DEBUG (SessionFactoryRegistry.java:75) Registering SessionFactory: d5f37868-eccf-430c-b0e5-bb34145b5b2e (&lt;unnamed&gt;)
DEBUG (SessionFactoryRegistry.java:82) Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG (SessionFactoryImpl.java:484) Instantiated session factory
 INFO (SchemaUpdate.java:182) HHH000228: Running hbm2ddl schema update
 INFO (SchemaUpdate.java:193) HHH000102: Fetching database metadata
 INFO (SchemaUpdate.java:205) HHH000396: Updating schema
DEBUG (Configuration.java:3401) Processing hbm.xml files
DEBUG (Configuration.java:3431) Process annotated classes
DEBUG (Configuration.java:1409) Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG (Configuration.java:1589) Processing extends queue
DEBUG (Configuration.java:1643) Processing extends queue
DEBUG (Configuration.java:1592) Processing collection mappings
DEBUG (Configuration.java:1602) Processing native query and ResultSetMapping mappings
DEBUG (Configuration.java:1610) Processing association property references
DEBUG (Configuration.java:1632) Processing foreign key constraints
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TFile
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TShare
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TTransaction
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TUser
DEBUG (Configuration.java:1700) Resolving reference to class: com.bigroad.model.db.TDepartment
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_authorization
 INFO (TableMetadata.java:66) HHH000037: Columns: [token, userid, updatedate]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, userid]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_company
 INFO (TableMetadata.java:66) HHH000037: Columns: [companyusedspace, logoaddress, companyid, linkmantelephone, organizationcode, companypassword, companyaddress, linkman, companyspacesize, companyname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_department
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentusedspace, departmentid, departmentdescription, departmentspacesize, departmentname]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: []
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_departmentOperation
 INFO (TableMetadata.java:66) HHH000037: Columns: [departmentid, departmentoperationid, fileid, departmentoperationauthorityid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [departmentoperation_file, departmentoperation_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [departmentoperation_file_idx, primary, departmentoperation_department_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_draft
 INFO (TableMetadata.java:66) HHH000037: Columns: [draftid, draftnewtime, drafttransactionid, draftpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [draft_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, draft_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_file
 INFO (TableMetadata.java:66) HHH000037: Columns: [filestoragepath, filepath, fileattribute, folderid, filemd5, fileuserid, fileid, filenewtime, fileprimarypath, filesize, fileextension, filename, filetype, filedepartmentid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [file_file, file_user, file_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [file_user_idx, primary, file_department_idx, file_file_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_privateMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [privatemessageid, privatemessagesentcontent, privatemessagesenttime, receivepersonid, sentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [privatemessagereceiveperson_user, privatemessagesentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, privatemessagesentperson_user_idx, privatemessagereceiveperson_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentShare
 INFO (TableMetadata.java:66) HHH000037: Columns: [sentshareid, sentsharetime, shareid, sentsharereceiveid, sharename, ischecked, sentsharesentpersonid, sentshareusername]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [sentshare_share, sentsharesentperson_user, sentsharereceive_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [sentshare_share_idx, sentshare_user_idx, sentshare_user_idx1, primary]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_sentTransaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionname, senttransactiontime, transactionid, receivetransactionpersonid, transactionstate, senttransactionid, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [senttransactionreceiveperson_user, senttransaction_transaction, senttransactionsentperson_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [senttransaction_user_idx, primary, senttransactionreceiveperson_user_idx, senttransaction_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_share
 INFO (TableMetadata.java:66) HHH000037: Columns: [folderid, sentsharetime, sharepassword, shareaddress, issecretshare, shareid, filetype, fileid, sharename, sentsharesentpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [fk_t_share_t_user1]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, fk_t_share_t_user1_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transaction
 INFO (TableMetadata.java:66) HHH000037: Columns: [senttransactiontime, transactionname, transactionid, transactionattachmentaddress, transactioncontent, senttransactioncolpersonid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transaction_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transaction_user_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_transactionMessage
 INFO (TableMetadata.java:66) HHH000037: Columns: [transactionmessagesenttime, transactionmessagesentcontent, transactionid, userid, transactionmessageid]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [transactionmessage_transaction, transactionmessage_user]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [primary, transactionmessage_user_idx, transactionmessage_transaction_idx]
 INFO (TableMetadata.java:65) HHH000261: Table found: CloudFiles.T_user
 INFO (TableMetadata.java:66) HHH000037: Columns: [userusedspace, userspacesize, userpassword, username, departmentid, usersex, userid, userheadportrait, usertelephone, usermailbox, userauthority, userskin]
 INFO (TableMetadata.java:68) HHH000108: Foreign keys: [user_department]
 INFO (TableMetadata.java:69) HHH000126: Indexes: [user_department_idx, primary]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG (DefaultIdentifierGeneratorFactory.java:107) Setting dialect [org.hibernate.dialect.MySQLDialect]
 INFO (SchemaUpdate.java:240) HHH000232: Schema update complete
DEBUG (SessionFactoryImpl.java:1021) Checking 0 named HQL queries
DEBUG (SessionFactoryImpl.java:1044) Checking 0 named SQL queries
DEBUG (StatisticsInitiator.java:110) Statistics initialized [enabled=false]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;baseDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;baseDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;fileDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;fileDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.FileDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;fileDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;fileDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;fileDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;fileDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.TAuthorizationDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;TAuthorizationDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;TAuthorizationDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;TAuthorizationDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;TAuthorizationDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userDao&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.dao.impl.UserDaoImpl]: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userDao&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userDao&apos;: AutowiredMethodElement for public void com.bigroad.dao.impl.BaseDaoImpl.setSessionFactory(org.hibernate.SessionFactory)
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userDao&apos; to bean named &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userDao&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;login&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;login&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Login]: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;login&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.UserServiceI com.bigroad.resource.Login.userService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;userService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;userService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.UserServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;userService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;userService&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.user.impl.UserServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;userService&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionAdvice&apos; to allow for resolving potential circular references
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;transactionManager&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionManager&apos;
 INFO (HibernateTransactionManager.java:268) Using DataSource [{
	CreateTime:&quot;2015-05-15 10:49:47&quot;,
	ActiveCount:0,
	PoolingCount:1,
	CreateCount:1,
	DestroyCount:0,
	CloseCount:2,
	ConnectCount:2,
	Connections:[
		{ID:14060725, ConnectTime:&quot;2015-05-15 10:49:48&quot;, UseCount:2, LastActiveTime:&quot;2015-05-15 10:49:48&quot;}
	]
}] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionManager&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [move*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [repair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [deleteAndRepair] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [find*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [load*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [search*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [datagrid*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (NameMatchTransactionAttributeSource.java:94) Adding transactional method [*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;(inner bean)&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:1498) Invoking afterPropertiesSet() on bean with name &apos;transactionAdvice&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;transactionAdvice&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;userService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.UserServiceImpl@1258461]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;userService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;userService&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;login&apos;: AutowiredFieldElement for com.bigroad.service.user.TokenServiceI com.bigroad.resource.Login.tokenService
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.user.impl.TokenServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;tokenService&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;tokenService&apos;: AutowiredFieldElement for private com.bigroad.dao.TAuthorizationDaoI com.bigroad.service.user.impl.TokenServiceImpl.tauth
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;TAuthorizationDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;tokenService&apos; to bean named &apos;TAuthorizationDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;tokenService&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.user.impl.TokenServiceImpl@163442]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;tokenService&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;login&apos; to bean named &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;login&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personal&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.resource.Personal]: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personal&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personal&apos;: AutowiredFieldElement for com.bigroad.service.personal.PersonFileServiceI com.bigroad.resource.Personal.personFile
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (InjectionMetadata.java:60) Found injected element on class [com.bigroad.service.personal.impl.PersonFileServiceImpl]: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;personFile&apos; to allow for resolving potential circular references
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.FileDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.fileDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;fileDao&apos;
DEBUG (InjectionMetadata.java:85) Processing injected method of bean &apos;personFile&apos;: AutowiredFieldElement for private com.bigroad.dao.UserDaoI com.bigroad.service.personal.impl.PersonFileServiceImpl.userDao
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userDao&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personFile&apos; to bean named &apos;userDao&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutoProxyCreator.java:551) Creating implicit proxy for bean &apos;personFile&apos; with 0 common interceptors and 2 specific interceptors
DEBUG (JdkDynamicAopProxy.java:113) Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.bigroad.service.personal.impl.PersonFileServiceImpl@1c0f6d9]
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personFile&apos;
DEBUG (AutowiredAnnotationBeanPostProcessor.java:424) Autowiring by type from bean name &apos;personal&apos; to bean named &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;personal&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;personFile&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;tokenService&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;userService&apos;
DEBUG (DefaultSingletonBeanRegistry.java:217) Creating shared instance of singleton bean &apos;timeTask&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:430) Creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:504) Eagerly caching bean &apos;timeTask&apos; to allow for resolving potential circular references
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractAutowireCapableBeanFactory.java:458) Finished creating instance of bean &apos;timeTask&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalPersistenceAnnotationProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;dataSource&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;sessionFactory&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionManager&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;transactionAdvice&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0&apos;
DEBUG (AbstractApplicationContext.java:850) Unable to locate LifecycleProcessor with name &apos;lifecycleProcessor&apos;: using default [org.springframework.context.support.DefaultLifecycleProcessor@18e2489]
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;lifecycleProcessor&apos;
DEBUG (AbstractBeanFactory.java:245) Returning cached instance of singleton bean &apos;fileDao&apos;
</system-out>
  </testcase>
</testsuite>