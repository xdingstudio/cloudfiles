package com.bigroad.model.db;

// Generated 2015-4-25 13:01:25 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

/**
 * TUser generated by hbm2java
 */
@Entity
@Table(name = "T_user", catalog = "CloudFiles")
public class TUser implements java.io.Serializable {

	private String userId;
	private TDepartment TDepartment;
	private String userName;
	private String userPassword;
	private String userSex;
	private String userMailbox;
	private String userTelephone;
	private String userHeadportrait;
	private String userSkin;
	private Double userSpaceSize;
	private Double userUsedSpace;
	private Integer userAuthority;
	private Set<TSentShare> TSentSharesForSentShareReceiveId = new HashSet<TSentShare>(
			0);
	private Set<TFile> TFiles = new HashSet<TFile>(0);
	private Set<TPrivateMessage> TPrivateMessagesForReceivePersonId = new HashSet<TPrivateMessage>(
			0);
	private Set<TSentTransaction> TSentTransactionsForReceiveTransactionPersonId = new HashSet<TSentTransaction>(
			0);
	private Set<TPrivateMessage> TPrivateMessagesForSentPersonId = new HashSet<TPrivateMessage>(
			0);
	private Set<TDraft> TDrafts = new HashSet<TDraft>(0);
	private Set<TSentTransaction> TSentTransactionsForSentTransactioncolPersonId = new HashSet<TSentTransaction>(
			0);
	private Set<TSentShare> TSentSharesForSentShareSentPersonId = new HashSet<TSentShare>(
			0);
	private Set<TTransactionMessage> TTransactionMessages = new HashSet<TTransactionMessage>(
			0);
	private Set<TShare> TShares = new HashSet<TShare>(0);

	public TUser() {
	}

	public TUser(String userId) {
		this.userId = userId;
	}

	public TUser(
			String userId,
			TDepartment TDepartment,
			String userName,
			String userPassword,
			String userSex,
			String userMailbox,
			String userTelephone,
			String userHeadportrait,
			String userSkin,
			Double userSpaceSize,
			Double userUsedSpace,
			Integer userAuthority,
			Set<TSentShare> TSentSharesForSentShareReceiveId,
			Set<TFile> TFiles,
			Set<TPrivateMessage> TPrivateMessagesForReceivePersonId,
			Set<TSentTransaction> TSentTransactionsForReceiveTransactionPersonId,
			Set<TPrivateMessage> TPrivateMessagesForSentPersonId,
			Set<TDraft> TDrafts,
			Set<TSentTransaction> TSentTransactionsForSentTransactioncolPersonId,
			Set<TSentShare> TSentSharesForSentShareSentPersonId,
			Set<TTransactionMessage> TTransactionMessages, Set<TShare> TShares) {
		this.userId = userId;
		this.TDepartment = TDepartment;
		this.userName = userName;
		this.userPassword = userPassword;
		this.userSex = userSex;
		this.userMailbox = userMailbox;
		this.userTelephone = userTelephone;
		this.userHeadportrait = userHeadportrait;
		this.userSkin = userSkin;
		this.userSpaceSize = userSpaceSize;
		this.userUsedSpace = userUsedSpace;
		this.userAuthority = userAuthority;
		this.TSentSharesForSentShareReceiveId = TSentSharesForSentShareReceiveId;
		this.TFiles = TFiles;
		this.TPrivateMessagesForReceivePersonId = TPrivateMessagesForReceivePersonId;
		this.TSentTransactionsForReceiveTransactionPersonId = TSentTransactionsForReceiveTransactionPersonId;
		this.TPrivateMessagesForSentPersonId = TPrivateMessagesForSentPersonId;
		this.TDrafts = TDrafts;
		this.TSentTransactionsForSentTransactioncolPersonId = TSentTransactionsForSentTransactioncolPersonId;
		this.TSentSharesForSentShareSentPersonId = TSentSharesForSentShareSentPersonId;
		this.TTransactionMessages = TTransactionMessages;
		this.TShares = TShares;
	}

	@Id
	@GeneratedValue(generator = "uuid")
    @GenericGenerator(name = "uuid", strategy = "uuid")
	@Column(name = "userID", unique = true, nullable = false, length = 100)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "departmentID")
	public TDepartment getTDepartment() {
		return this.TDepartment;
	}

	public void setTDepartment(TDepartment TDepartment) {
		this.TDepartment = TDepartment;
	}

	@Column(name = "userName", length = 45)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "userPassword", length = 45)
	public String getUserPassword() {
		return this.userPassword;
	}

	public void setUserPassword(String userPassword) {
		this.userPassword = userPassword;
	}

	@Column(name = "userSex", length = 45)
	public String getUserSex() {
		return this.userSex;
	}

	public void setUserSex(String userSex) {
		this.userSex = userSex;
	}

	@Column(name = "userMailbox", length = 45)
	public String getUserMailbox() {
		return this.userMailbox;
	}

	public void setUserMailbox(String userMailbox) {
		this.userMailbox = userMailbox;
	}

	@Column(name = "userTelephone", length = 11)
	public String getUserTelephone() {
		return this.userTelephone;
	}

	public void setUserTelephone(String userTelephone) {
		this.userTelephone = userTelephone;
	}

	@Column(name = "userHeadportrait", length = 45)
	public String getUserHeadportrait() {
		return this.userHeadportrait;
	}

	public void setUserHeadportrait(String userHeadportrait) {
		this.userHeadportrait = userHeadportrait;
	}

	@Column(name = "userSkin", length = 45)
	public String getUserSkin() {
		return this.userSkin;
	}

	public void setUserSkin(String userSkin) {
		this.userSkin = userSkin;
	}

	@Column(name = "userSpaceSize", precision = 22, scale = 0)
	public Double getUserSpaceSize() {
		return this.userSpaceSize;
	}

	public void setUserSpaceSize(Double userSpaceSize) {
		this.userSpaceSize = userSpaceSize;
	}

	@Column(name = "userUsedSpace", precision = 22, scale = 0)
	public Double getUserUsedSpace() {
		return this.userUsedSpace;
	}

	public void setUserUsedSpace(Double userUsedSpace) {
		this.userUsedSpace = userUsedSpace;
	}

	@Column(name = "userAuthority")
	public Integer getUserAuthority() {
		return this.userAuthority;
	}

	public void setUserAuthority(Integer userAuthority) {
		this.userAuthority = userAuthority;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUserBySentShareReceiveId")
	public Set<TSentShare> getTSentSharesForSentShareReceiveId() {
		return this.TSentSharesForSentShareReceiveId;
	}

	public void setTSentSharesForSentShareReceiveId(
			Set<TSentShare> TSentSharesForSentShareReceiveId) {
		this.TSentSharesForSentShareReceiveId = TSentSharesForSentShareReceiveId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUser")
	public Set<TFile> getTFiles() {
		return this.TFiles;
	}

	public void setTFiles(Set<TFile> TFiles) {
		this.TFiles = TFiles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUserByReceivePersonId")
	public Set<TPrivateMessage> getTPrivateMessagesForReceivePersonId() {
		return this.TPrivateMessagesForReceivePersonId;
	}

	public void setTPrivateMessagesForReceivePersonId(
			Set<TPrivateMessage> TPrivateMessagesForReceivePersonId) {
		this.TPrivateMessagesForReceivePersonId = TPrivateMessagesForReceivePersonId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUserByReceiveTransactionPersonId")
	public Set<TSentTransaction> getTSentTransactionsForReceiveTransactionPersonId() {
		return this.TSentTransactionsForReceiveTransactionPersonId;
	}

	public void setTSentTransactionsForReceiveTransactionPersonId(
			Set<TSentTransaction> TSentTransactionsForReceiveTransactionPersonId) {
		this.TSentTransactionsForReceiveTransactionPersonId = TSentTransactionsForReceiveTransactionPersonId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUserBySentPersonId")
	public Set<TPrivateMessage> getTPrivateMessagesForSentPersonId() {
		return this.TPrivateMessagesForSentPersonId;
	}

	public void setTPrivateMessagesForSentPersonId(
			Set<TPrivateMessage> TPrivateMessagesForSentPersonId) {
		this.TPrivateMessagesForSentPersonId = TPrivateMessagesForSentPersonId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUser")
	public Set<TDraft> getTDrafts() {
		return this.TDrafts;
	}

	public void setTDrafts(Set<TDraft> TDrafts) {
		this.TDrafts = TDrafts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUserBySentTransactioncolPersonId")
	public Set<TSentTransaction> getTSentTransactionsForSentTransactioncolPersonId() {
		return this.TSentTransactionsForSentTransactioncolPersonId;
	}

	public void setTSentTransactionsForSentTransactioncolPersonId(
			Set<TSentTransaction> TSentTransactionsForSentTransactioncolPersonId) {
		this.TSentTransactionsForSentTransactioncolPersonId = TSentTransactionsForSentTransactioncolPersonId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUserBySentShareSentPersonId")
	public Set<TSentShare> getTSentSharesForSentShareSentPersonId() {
		return this.TSentSharesForSentShareSentPersonId;
	}

	public void setTSentSharesForSentShareSentPersonId(
			Set<TSentShare> TSentSharesForSentShareSentPersonId) {
		this.TSentSharesForSentShareSentPersonId = TSentSharesForSentShareSentPersonId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUser")
	public Set<TTransactionMessage> getTTransactionMessages() {
		return this.TTransactionMessages;
	}

	public void setTTransactionMessages(
			Set<TTransactionMessage> TTransactionMessages) {
		this.TTransactionMessages = TTransactionMessages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TUser")
	public Set<TShare> getTShares() {
		return this.TShares;
	}

	public void setTShares(Set<TShare> TShares) {
		this.TShares = TShares;
	}

}
